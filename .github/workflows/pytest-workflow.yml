name: Pytest-workflow
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  merge_group:
    types: [checks_requested]
    branches: [master]

# Cancel if a newer run is started
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    name: Check for changes
    runs-on: ubuntu-latest
    outputs:
      # Expose matched filters as job 'modules' output variable
      modules: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v3

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: "tests/config/pytest_modules.yml"

  test:
    runs-on: ubuntu-20.04

    name: ${{ matrix.tags }} ${{ matrix.profile }}
    needs: changes
    if: needs.changes.outputs.modules != '[]'
    strategy:
      fail-fast: false
      matrix:
        tags: ["${{ fromJson(needs.changes.outputs.modules) }}"]
        profile: ["docker", "singularity", "conda"]
        exclude:
          - profile: "conda"
            tags: ilastik/pixelclassification
          - profile: "conda"
            tags: bases2fastq
          - profile: "conda"
            tags: bcl2fastq
          - profile: "conda"
            tags: bclconvert
          - profile: "conda"
            tags: cellranger/count
          - profile: "conda"
            tags: cellranger/mkfastq
          - profile: "conda"
            tags: cellranger/mkgtf
          - profile: "conda"
            tags: cellranger/mkref
          - profile: "conda"
            tags: deepvariant
          - profile: "conda"
            tags: ensemblvep/vep
          - profile: "conda"
            tags: fastk/fastk
          - profile: "conda"
            tags: fastk/histex
          - profile: "conda"
            tags: fastk/merge
          - profile: "conda"
            tags: fcs/fcsadaptor
          - profile: "conda"
            tags: fcs/fcsgx
          - profile: "conda"
            tags: gatk4/cnnscorevariants
          - profile: "conda"
            tags: gatk4/determinegermlinecontigploidy
          - profile: "conda"
            tags: genescopefk
          - profile: "conda"
            tags: imputeme/vcftoprs
          - profile: "conda"
            tags: merquryfk/katcomp
          - profile: "conda"
            tags: merquryfk/katgc
          - profile: "conda"
            tags: merquryfk/merquryfk
          - profile: "conda"
            tags: merquryfk/ploidyplot
          - profile: "conda"
            tags: sentieon/bwaindex
          - profile: "conda"
            tags: sentieon/bwamem
          - profile: "conda"
            tags: universc
          - profile: "singularity"
            tags: universc
          - profile: "conda"
            tags: subworkflows/vcf_annotate_ensemblvep
    env:
      NXF_ANSI_LOG: false
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: python -m pip install --upgrade pip pytest-workflow cryptography

      - uses: actions/cache@v2
        with:
          path: /usr/local/bin/nextflow
          key: ${{ runner.os }}
          restore-keys: |
            ${{ runner.os }}-nextflow-

      - name: Install Nextflow
        env:
          CAPSULE_LOG: none
        run: |
          wget -qO- get.nextflow.io | bash
          sudo mv nextflow /usr/local/bin/

      - name: Set up Singularity
        if: matrix.profile == 'singularity'
        uses: eWaterCycle/setup-singularity@v5
        with:
          singularity-version: 3.7.1

      - name: Set up miniconda
        if: matrix.profile == 'conda'
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          channels: conda-forge,bioconda,defaults
          python-version: ${{ matrix.python-version }}

      - name: Conda setup
        if: matrix.profile == 'conda'
        run: |
          conda clean -a
          conda install -n base conda-libmamba-solver
          conda config --set solver libmamba

      # Set up secrets
      - name: Set up nextflow secrets
        run: |
          nextflow secrets set SENTIEON_LICENSE_BASE64 ${{ secrets.SENTIEON_LICENSE_BASE64 }}
          nextflow secrets set SENTIEON_AUTH_MECH_BASE64 ${{ secrets.SENTIEON_AUTH_MECH_BASE64 }}
          SENTIEON_ENCRYPTION_KEY=$(echo -n "${{ secrets.ENCRYPTION_KEY_BASE64 }}" | base64 -d)
          SENTIEON_LICENSE_MESSAGE=$(echo -n "${{ secrets.LICENSE_MESSAGE_BASE64 }}" | base64 -d)
          SENTIEON_AUTH_DATA=$(python tests/modules/nf-core/sentieon/license_message.py encrypt --key "$SENTIEON_ENCRYPTION_KEY" --message "$SENTIEON_LICENSE_MESSAGE")
          SENTIEON_AUTH_DATA_BASE64=$(echo -n "$SENTIEON_AUTH_DATA" | base64 -w 0)
          nextflow secrets set SENTIEON_AUTH_DATA_BASE64 $SENTIEON_AUTH_DATA_BASE64

      # Test the module
      - name: Run pytest-workflow
        # only use one thread for pytest-workflow to avoid race condition on conda cache.
        run: TMPDIR=~ PROFILE=${{ matrix.profile }} pytest --tag ${{ matrix.tags }} --symlink --kwdof --git-aware --color=yes

      - name: Output log on failure
        if: failure()
        run: |
          sudo apt-get update > /dev/null
          sudo apt-get install bat > /dev/null
          batcat --decorations=always --color=always /home/runner/pytest_workflow_*/*/log.{out,err}

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: logs-${{ matrix.profile }}
          path: |
            /home/runner/pytest_workflow_*/*/.nextflow.log
            /home/runner/pytest_workflow_*/*/log.out
            /home/runner/pytest_workflow_*/*/log.err
            /home/runner/pytest_workflow_*/*/work
            !/home/runner/pytest_workflow_*/*/work/conda
            !/home/runner/pytest_workflow_*/*/work/singularity
