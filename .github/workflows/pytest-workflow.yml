name: Pytest-workflow
on: [push, pull_request]

jobs:
  changes:
    name: Check for changes
    runs-on: ubuntu-latest
    outputs:
      # Expose matched filters as job 'modules' output variable
      modules: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: '.github/filters.yml'

  test:
    runs-on: ubuntu-20.04
    name: ${{ matrix.tags }} ${{ matrix.profile }} ${{ matrix.nxf_version }}
    needs: changes
    if: needs.changes.outputs.modules != '[]'
    strategy:
      fail-fast: false
      matrix:
        nxf_version: ['20.11.0-edge']
        tags: ['${{ fromJson(needs.changes.outputs.modules) }}']
        profile: ['docker', 'singularity'] ## 'conda'
    env:
      NXF_ANSI_LOG: false
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - uses: actions/cache@v2
        with:
          path: /usr/local/bin/nextflow
          key: ${{ runner.os }}-nextflow-${{ matrix.nxf_version }}
          restore-keys: |
            ${{ runner.os }}-nextflow-

      - name: Install Nextflow
        env:
          NXF_VER: ${{ matrix.nxf_version }}
        run: |
          wget -qO- get.nextflow.io | bash
          sudo mv nextflow /usr/local/bin/

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: python -m pip install --upgrade pip pytest-workflow

      - name: Set up Singularity
        if: matrix.profile == 'singularity'
        uses: eWaterCycle/setup-singularity@v5
        with:
          singularity-version: 3.7.1

      - name: Setup miniconda
        if: matrix.profile == 'conda'
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          channels: conda-forge,bioconda,defaults
          python-version: ${{ matrix.python-version }}
      - name: Conda clean
        if: matrix.profile == 'conda'
        run: conda clean -a

      # Test the module
      - name: Run pytest-workflow
        run: TMPDIR=~ PROFILE=${{ matrix.profile }} pytest --tag ${{ matrix.tags }} --symlink --wt 2 --kwdof

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: logs-${{ matrix.tags }}-${{ matrix.profile }}-${{ matrix.nxf_version }}
          path: |
            /tmp/pytest_workflow_*/*/.nextflow.log
            /tmp/pytest_workflow_*/*/log.out
            /tmp/pytest_workflow_*/*/log.err
