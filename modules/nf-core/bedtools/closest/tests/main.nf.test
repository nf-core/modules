nextflow_process {
    name "Test Process BEDTOOLS_CLOSEST"
    script "../main.nf"
    process "BEDTOOLS_CLOSEST"

    tag "modules"
    tag "modules_nfcore"
    tag "bedtools"
    tag "bedtools/closest"

    test("homo_sapiens") {
        when {
            process {
                """                
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.bed', checkIfExists: true),
                    [
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.multi_intervals.bed', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/sequence/multi_intervals.bed', checkIfExists: true)
                    ]
                ]
                input[1] = []
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("homo_sapiens - fai") {
        when {
            process {
                """                
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.bed', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.multi_intervals.bed', checkIfExists: true)
                ]
                input[1] = file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta.fai', checkIfExists: true)
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("homo_sapiens - vcf") {
        when {
            process {
                """                
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.bed', checkIfExists: true),
                    [
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/vcf/dbsnp_146.hg38.vcf.gz', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/vcf/gnomAD.r2.1.1.vcf.gz', checkIfExists: true)
                    ]
                ]
                input[1] = []
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
