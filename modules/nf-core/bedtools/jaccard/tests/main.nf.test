
nextflow_process {

    name "Test Process BEDTOOLS_JACCARD"
    script "../main.nf"
    process "BEDTOOLS_JACCARD"

    tag "modules"
    tag "modules_nfcore"
    tag "bedtools"
    tag "bedtools/jaccard"

    test("test-bedtools-jaccard") {

        when {
            process {
                """
                input[0] = [
				    [ id:'test', single_end:false ], // meta map
				    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/vcf/test.vcf.gz', checkIfExists: true),
				    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/vcf/test2.vcf.gz', checkIfExists: true)
				]
				input[1] = [[],[]]

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("test-bedtools-jaccard-genome") {

        config "./nextflow.config"

        when {
            process {
                """
                input[0] = [
				    [ id:'test', single_end:false ], // meta map
				    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/vcf/test.vcf.gz', checkIfExists: true),
				    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/vcf/test2.vcf.gz', checkIfExists: true)
				]
				input[1] = [
				    [ id:'genome' ],
				    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta.fai', checkIfExists: true)
				]

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

}
