nextflow_process {

    name "Test Process BEDTOOLS_NUC"
    script "../main.nf"
    process "BEDTOOLS_NUC"

    tag "modules"
    tag "modules_nfcore"
    tag "bedtools"
    tag "bedtools/nuc"

    test("test-bedtools-nuc-bed") {

        when {
            process {
                """
                input[0] = [
				    [ id:'test_bed'],
				    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true),
				    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/bed/test.bed', checkIfExists: true)
				]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("test-bedtools-nuc-gff3") {

        when {
            process {
                """
                input[0] = [
				    [ id:'test_gff3'],
				    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true),
				    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.gff3', checkIfExists: true)
				]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("test-bedtools-nuc-vcf") {

        when {
            process {
                """
                input[0] = [
				    [ id:'test_vcf'],
				    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true),
				    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/vcf/test.vcf', checkIfExists: true)
				]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("test-bedtools-nuc-bed-stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
				    [ id:'test_bed'],
				    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true),
				    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/bed/test.bed', checkIfExists: true)
				]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

}
