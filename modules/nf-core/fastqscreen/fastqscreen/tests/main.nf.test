nextflow_process {

    name "Test Process FASTQSCREEN_FASTQSCREEN"
    script "../main.nf"
    process "FASTQSCREEN_FASTQSCREEN"

    tag "modules"
    tag "modules_nfcore"
    tag "bowtie2/build"
    tag "fastqscreen"
    tag "fastqscreen/buildfromindex"
    tag "fastqscreen/fastqscreen"

    setup {

        run("BOWTIE2_BUILD") {
            script "../../../bowtie2/build/main.nf"
            process {
                """
                input[0] =  Channel.from([
                                    [[id: "sarscov2"], file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true)],
                                    [[id: "human"]   , file(params.test_data['homo_sapiens']['genome']['genome_21_fasta'], checkIfExists: true)]
                            ])
                """
            }
        }

        run("FASTQSCREEN_BUILDFROMINDEX") {
            script "../../../fastqscreen/buildfromindex/main.nf"
            process {
                """
                input[0] = BOWTIE2_BUILD.out.index.map{meta, index -> meta.id}.collect()
                input[1] = BOWTIE2_BUILD.out.index.map{meta, index -> index}.collect()
                """
            }
        }
    }

    test("sarscov2 - human") {

        when {
            process {
                """
                input[0] =  [[ id:'test', single_end:true ],
                             [file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'], checkIfExists: true) ]
                            ]
                input[1] = FASTQSCREEN_BUILDFROMINDEX.out.database
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out.version).match("version") },
                { assert file(process.out.txt.get(0).get(1)).exists() },
                { assert file(process.out.png.get(0).get(1)).exists() },
                { assert file(process.out.html.get(0).get(1)).exists() }
            )
        }

    }

    test("sarscov2 - human - stub") {

        options "-stub"
        when {
            process {
                """
                input[0] =  [[ id:'test', single_end:true ],
                             [file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'], checkIfExists: true) ]
                            ]
                input[1] = FASTQSCREEN_BUILDFROMINDEX.out.database
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
