nextflow_process {

    name "Test Process FASTQSCREEN_FASTQSCREEN"
    script "../main.nf"
    process "FASTQSCREEN_FASTQSCREEN"

    tag "modules"
    tag "modules_nfcore"
    tag "fastqscreen"
    tag "fastqscreen/fastqscreen"
    tag "modules_fastqscreen"

    test("sarscov2 - human") {

        when {
            process {
                """
                input[0] =  [[ id:'test', single_end:true ],
                             [file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'], checkIfExists: true) ]
                            ]
                input[1] = [
                    ['Ecoli', 'PhiX', 'Scerevisiae'],
                    [
                        's3://ngi-igenomes/igenomes/Escherichia_coli_K_12_MG1655/NCBI/2001-10-15/Sequence/Bowtie2Index/',
                        's3://ngi-igenomes/igenomes/PhiX/Illumina/RTA/Sequence/Bowtie2Index/',
                        's3://ngi-igenomes/igenomes/Saccharomyces_cerevisiae/NCBI/build3.1/Sequence/Bowtie2Index/'
                    ],
                    ['genome', 'genome', 'genome'],
                    ['bowtie2', 'bowtie2', 'bowtie2']
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                // { assert snapshot(process.out.version).match() },
                // { assert file(process.out.txt.get(0).get(1)).exists() },
                // { assert file(process.out.png.get(0).get(1)).exists() },
                // { assert file(process.out.html.get(0).get(1)).exists() }
            )
        }

    }

    // test("sarscov2 - human - tags") {
    //     config './nextflow.config'
    //     when {
    //         process {
    //             """
    //             input[0] =  [[ id:'test', single_end:false ],
    //                          [file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'], checkIfExists: true)]
    //                         ]
    //             input[1] = FASTQSCREEN_BUILDFROMINDEX.out.database
    //             """
    //         }
    //     }

    //     then {
    //         assertAll(
    //             { assert process.success },
    //             { assert snapshot(
    //                 process.out.version,
    //                 process.out.txt,
    //                 process.out.fastq,
    //                 path(process.out.html.get(0).get(1)).readLines()[0..10],
    //                 path(process.out.png.get(0).get(1)).exists()
    //                 ).match() }
    //         )
    //     }

    // }

    // test("sarscov2 - human - stub") {

    //     options "-stub"
    //     when {
    //         process {
    //             """
    //             input[0] =  [[ id:'test', single_end:true ],
    //                          [file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'], checkIfExists: true) ]
    //                         ]
    //             input[1] = FASTQSCREEN_BUILDFROMINDEX.out.database
    //             """
    //         }
    //     }

    //     then {
    //         assertAll(
    //             { assert process.success },
    //             { assert snapshot(process.out).match() }
    //         )
    //     }

    // }

}
