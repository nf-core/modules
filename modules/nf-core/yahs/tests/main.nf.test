nextflow_process {

    name "Test Process YAHS"
    script "../main.nf"
    process "YAHS"
    config "./nextflow.config"

    tag "modules"
    tag "modules_nfcore"
    tag "yahs"
    tag "samtools/view"

    setup {
            run("SAMTOOLS_VIEW") {
            script "../../samtools/view"
            process {
                """
                input[0] = Channel.of([
                    [ id:'test', single_end:false ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/cram/test.paired_end.sorted.cram', checkIfExists: true),
                    []
                ])
                input[1] = Channel.of([
                    [ id:'genome' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta', checkIfExists: true)
                ])
                input[2] = []
                input[3] = []
                """
            }
            }
        }

    test("homo_sapiens - bam - fasta - fai") {

        when {

            params {
                samtools_view_args = "--output-fmt bam"
                yahs_args = "--no-contig-ec"
            }

            process {
                """
                input[0] = SAMTOOLS_VIEW.out.bam
                    .map { meta, bam ->
                        [ meta,
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta.fai', checkIfExists: true),
                        bam
                        ]
                    }
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("homo_sapiens - bam - fasta - fai - stub") {

        options "-stub"

        when {

            params {
                samtools_view_args = "--output-fmt bam"
                yahs_args = ""
            }

            process {
                """
                input[0] = SAMTOOLS_VIEW.out.bam
                    .map { meta, bam ->
                        [ meta,
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta.fai', checkIfExists: true),
                        bam
                        ]
                    }
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }


}
