
nextflow_process {

    name "Test Process SURVIVOR_MERGE"
    script "../main.nf"
    process "SURVIVOR_MERGE"

    tag "modules"
    tag "modules_nfcore"
    tag "survivor"
    tag "survivor/merge"

    test("test-survivor-merge") {

        when {
            process {
                """
                input[0] = [
				    [ id:'test', single_end:false ], // meta map
				    [
				        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/gvcf/test2.genome.vcf', checkIfExists: true),
				        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/gvcf/test.genome.vcf', checkIfExists: true)
                    ]
				]
				input[1] = 0.2
				input[2] = 1
				input[3] = 0
				input[4] = 0
				input[5] = 0
				input[6] = 20

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
					path(process.out.vcf[0][1]).vcf.summary,
					process.out.versions
					).match()
				}
            )
        }
    }

    test("test-survivor-merge-stub") {
        options '-stub'
        when {
            process {
                """
                input[0] = [
				    [ id:'test', single_end:false ], // meta map
				    [
				        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/gvcf/test2.genome.vcf', checkIfExists: true),
				        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/gvcf/test.genome.vcf', checkIfExists: true)
                    ]
				]
				input[1] = 0.2
				input[2] = 1
				input[3] = 0
				input[4] = 0
				input[5] = 0
				input[6] = 20

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

}
