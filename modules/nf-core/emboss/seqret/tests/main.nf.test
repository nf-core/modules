nextflow_process {

    name "Test Process EMBOSS_SEQRET"
    
    script "../main.nf"
    process "EMBOSS_SEQRET"
   
    tag "modules"
    tag "modules_nfcore"
    tag "emboss"
    tag "emboss/seqret"
    tag "gunzip"

    setup {
            run("GUNZIP") {
                script "modules/nf-core/gunzip/main.nf"
                
                process {
                    """
                    input[0] = [
                        [id:'test',single_end:false],// meta map
                        file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/genome/genome.gbff.gz',checkIfExists:true)
                        ]
                    """
                }
            }
        }
   
    test("bacteroides_fragilis - gbff - gz - embl") {
        
        when {
            params {
                module_args = ''
            }
            process {
                """
                input[0] = GUNZIP.out.gunzip
                input[1] = 'embl'
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("bacteroides_fragilis - gbff - gz - gff") {
        
        
        when {
            params {
                module_args = ''
            }
            process {
                """
                input[0] = GUNZIP.out.gunzip
                input[1] = 'gff'
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("bacteroides_fragilis - gbff - gz - pir") {
        
        
        when {
            params {
                module_args = ''
            }
            process {
                """
                input[0] = GUNZIP.out.gunzip
                input[1] = 'pir'
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("bacteroides_fragilis - gbff - gz - fasta") {
        
       
        when {
            params {
                module_args = ''
            }
            process {
                """
                input[0] = GUNZIP.out.gunzip
                input[1] = 'fasta'
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}