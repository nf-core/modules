nextflow_process {

    name "Test Process SOURMASH_COMPARE"
    script "../main.nf"
    process "SOURMASH_COMPARE"
    config "./nextflow.config"

    tag "modules"
    tag "modules_nfcore"
    tag "sourmash"
    tag "sourmash/compare"
    tag "sourmash/sketch"

    setup {
        run("SOURMASH_SKETCH") {
            script "../../sketch/main.nf"
            process {
            """
            input[0] = Channel.fromList([
                        [
                            [ id: 'test1' ],
                            file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)
                        ],
                        [
                            [ id: 'test2' ],
                            file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)
                        ]
                ]
            )
            """
            }
        }
    }

    test("sarscov2 genome [fasta]") {

        when {
            process {
                """
                input[0] = SOURMASH_SKETCH.out.signatures.collect{ it[1] }.map { it -> [ [id: "group1" ], it ] }
                input[1] = []
                input[2] = true // save_numpy_matrix
                input[3] = true // save_csv
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("sarscov2 - bam - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = SOURMASH_SKETCH.out.signatures.collect{ it[1] }.map { it -> [ [id: "group1" ], it ] }
                input[1] = []
                input[2] = true // save_numpy_matrix
                input[3] = true // save_csv
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
