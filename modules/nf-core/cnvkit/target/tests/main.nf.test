
nextflow_process {

    name "Test Process CNVKIT_TARGET"
    script "../main.nf"
    process "CNVKIT_TARGET"

    tag "modules"
    tag "modules_nfcore"
    tag "cnvkit"
    tag "cnvkit/target"

    test("test-cnvkit-target") {

        when {
            process {
                """
                input[0] = [
				    [ id:'test' ], // meta map
				    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.bed', checkIfExists: true)
				]
				input[1] = [ [:], [] ]

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("test-cnvkit-target-with-gff3") {

        when {
            process {
                """
                input[0] = [
				    [ id:'test' ], // meta map
				    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.bed', checkIfExists: true)
				]
				input[1] = [
				    [ id: "annotations" ],
				    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.gff3', checkIfExists: true)
				]

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("test-cnvkit-target-with-gff3-stub") {
        options '-stub'

        when {
            process {
                """
                input[0] = [
				    [ id:'test' ], // meta map
				    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.bed', checkIfExists: true)
				]
				input[1] = [
				    [ id: "annotations" ],
				    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.gff3', checkIfExists: true)
				]

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

}
