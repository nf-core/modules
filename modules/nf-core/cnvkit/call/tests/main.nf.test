
nextflow_process {

    name "Test Process CNVKIT_CALL"
    script "../main.nf"
    process "CNVKIT_CALL"

    tag "modules"
    tag "modules_nfcore"
    tag "cnvkit"
    tag "cnvkit/call"

    test("test-cnvkit-call") {

        when {
            process {
                """
                input[0] = [
				    [ id:'test' ],
				    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/cnr/test2.paired_end.sorted.cns', checkIfExists: true),
				    []
				]
                """
            }
        }

        then {
            assert process.success
            assert snapshot(
                process.out,
                path(process.out.versions[0]).yaml
            ).match()
        }
    }

    test("test-cnvkit-call-with-vcf") {

        when {
            process {
                """
                input[0] = [
				    [ id:'test' ],
				    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/cnr/test2.paired_end.sorted.cns', checkIfExists: true),
				    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/gvcf/test.genome.vcf.gz', checkIfExists: true)
				]
                """
            }
        }

        then {
            assert process.success
            assert snapshot(
                process.out,
                path(process.out.versions[0]).yaml
            ).match()
        }
    }

    test("test-cnvkit-call-with-vcf-stub") {
        options '-stub'

        when {
            process {
                """
                input[0] = [
				    [ id:'test' ],
				    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/cnr/test2.paired_end.sorted.cns', checkIfExists: true),
				    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/gvcf/test.genome.vcf.gz', checkIfExists: true)
				]

                """
            }
        }

        then {
            assert process.success
            assert snapshot(
                process.out,
                path(process.out.versions[0]).yaml
            ).match()
        }
    }

}
