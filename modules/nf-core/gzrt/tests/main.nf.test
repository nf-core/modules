nextflow_process {

    name "Test Process GZRT"
    script "../main.nf"
    process "GZRT"

    tag "modules"
    tag "modules_nfcore"
    tag "gzrt"

    test("Run gzrt on test2_1_corrupted single-end - fastq.gz") {
        when {
            process {
                """
                input[0] =
                [
                    [ id:'test-single', single_end:true ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/fastq/test2_1_corrupted_10kb.fastq.gz', checkIfExists: true)
                ]
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("Run gzrt on test2_1_corrupted and test2_2 paired-end - fastq.gz") {
        when {
            process {
                """
                input[0] =
                [
                    [ id:'test-paired', single_end:false ], // meta map
                    [
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/fastq/test2_1_corrupted_10kb.fastq.gz', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/fastq/test2_2.fastq.gz', checkIfExists: true)
                    ]
                ]
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("Run gzrt on test2_1_corrupted single-end - fastq.gz - stub") {
        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'test-single-stub', single_end:true ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/fastq/test2_1_corrupted_10kb.fastq.gz', checkIfExists: true)
                ]
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("Run gzrt on test2_1_corrupted and test2_2 paired-end - fastq.gz - stub") {
        options "-stub"

        when {
            process {
                """
                input[0] =
                [
                    [ id:'test-paired-stub', single_end:false ], // meta map
                    [
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/fastq/test2_1_corrupted_10kb.fastq.gz', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/fastq/test2_2.fastq.gz', checkIfExists: true)
                    ]
                ]
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

}