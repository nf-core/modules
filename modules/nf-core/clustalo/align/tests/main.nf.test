nextflow_process {

    name "Test Process CLUSTALO_ALIGN"
    script "../main.nf"
    process "CLUSTALO_ALIGN"

    tag "modules"
    tag "modules_nfcore"
    tag "clustalo"
    tag "clustalo/align"
    tag "clustalo/guidetree"

    test("sarscov2 - contigs-fasta - uncompressed") {

        when {
            process {
                """
                input[0] = [ [ id:'test' ], // meta map
                            file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fasta/contigs.fasta', checkIfExists: true)
                            ]
                input[1] = [[:],[]]
                input[2] = []
                input[3] = []
                input[4] = []
                input[5] = []
                input[6] = false
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("sarscov2 - contigs-fasta - compressed") {

        when {
            process {
                """
                input[0] = [ [ id:'test' ], // meta map
                            file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fasta/contigs.fasta', checkIfExists: true)
                            ]
                input[1] = [[:],[]]
                input[2] = []
                input[3] = []
                input[4] = []
                input[5] = []
                input[6] = true
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("profile alignment -- hmm-in") {

        when {
            process {
                """
                input[0] = [ [ id: 'test'], file("https://raw.githubusercontent.com/nf-core/test-datasets/refs/heads/phyloplace/testdata/PF14720_3_sequences.faa", checkIfExists: true) ]
                input[1] = [[:],[]]
                input[2] = file("https://raw.githubusercontent.com/nf-core/test-datasets/refs/heads/phyloplace/testdata/PF14720.hmm", checkIfExists: true)
                input[3] = []
                input[4] = []
                input[5] = []
                input[6] = false
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("profile alignment -- profile1") {

        when {
            process {
                """
                input[0] = [ [ id: 'test'], file("https://raw.githubusercontent.com/nf-core/test-datasets/refs/heads/phyloplace/testdata/PF14720_3_sequences.faa", checkIfExists: true) ]
                input[1] = [[:],[]]
                input[2] = []
                input[3] = []
                input[4] = file("https://raw.githubusercontent.com/nf-core/test-datasets/refs/heads/phyloplace/testdata/PF14720_seed.alnfaa", checkIfExists: true)
                input[5] = []
                input[6] = false
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("sarscov2 - contigs-fasta - guide_tree") {

        setup {

            run("CLUSTALO_GUIDETREE") {
                script "../../guidetree/main.nf"
                process {
                    """
                    input[0] = [ [ id:'test' ], // meta map
                                file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fasta/contigs.fasta', checkIfExists: true)
                                ]
                    """
                }
            }
        }

        when {
            process {
                """
                input[0] = [ [ id:'test' ], // meta map
                            file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fasta/contigs.fasta', checkIfExists: true)
                            ]
                input[1] = CLUSTALO_GUIDETREE.out.tree.collect{ meta, tree -> tree }.map{ tree -> [[ id: 'test_summary'], tree]}
                input[2] = []
                input[3] = []
                input[4] = []
                input[5] = []
                input[6] = true
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("sarscov2 - contigs-fasta - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [ [ id:'test' ], // meta map
                            file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fasta/contigs.fasta', checkIfExists: true)
                            ]
                input[1] = [[:],[]]
                input[2] = []
                input[3] = []
                input[4] = []
                input[5] = []
                input[6] = false
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}
