name: chewbbaca_allelecall
description: Determine the allelic profiles of a genome using a pre-defined schema
keywords:
  - cgMLST
  - WGS
  - genomics
tools:
  - chewbbaca:
      description: "A complete suite for gene-by-gene schema creation and strain identification."
      homepage: "https://chewbbaca.readthedocs.io/en/latest/index.html"
      documentation: "https://chewbbaca.readthedocs.io/en/latest/index.html"
      tool_dev_url: "https://github.com/B-UMMI/chewBBACA"
      doi: "10.1099/mgen.0.000166"
      licence: ["GPL v3"]
      identifier: ""

input:
  - - meta:
        type: map
        description: |
          Groovy Map containing sample information
          e.g. `[ id:'test', single_end:false ]`
    - fasta_dir:
        type: directory
        description: Directory containing one or multiple FASTA files for allele calling
        pattern: "*/"
  - - meta2:
        type: map
        description: |
          Groovy Map containing scheme information
          e.g. `[ id:'scheme' ]`
    - scheme:
        type: directory
        description: Directory containing the schema files
        pattern: "*/"

output:
  - stats:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'test', single_end:false ]`
          pattern: "*_results_statistics.tsv"
      - "*_results_statistics.tsv":
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'test', single_end:false ]`
          pattern: "*_results_statistics.tsv"
  - contigsInfo:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'test', single_end:false ]`
          pattern: "*_results_contigsInfo.tsv"
      - "*_results_contigsInfo.tsv":
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'test', single_end:false ]`
          pattern: "*_results_contigsInfo.tsv"
  - alleles:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'test', single_end:false ]`
          pattern: "*_results_alleles.tsv"
      - "*_results_alleles.tsv":
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'test', single_end:false ]`
          pattern: "*_results_alleles.tsv"
  - log:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'test', single_end:false ]`
          pattern: "*_logging_info.txt"
      - "*_logging_info.txt":
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'test', single_end:false ]`
          pattern: "*_logging_info.txt"
  - paralogous_counts:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'test', single_end:false ]`
          pattern: "*_paralogous_counts.tsv"
      - "*_paralogous_counts.tsv":
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'test', single_end:false ]`
          pattern: "*_paralogous_counts.tsv"
  - paralogous_loci:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'test', single_end:false ]`
          pattern: "*_paralogous_loci.tsv"
      - "*_paralogous_loci.tsv":
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'test', single_end:false ]`
          pattern: "*_paralogous_loci.tsv"
  - cds_coordinates:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'test', single_end:false ]`
          pattern: "*_cds_coordinates.tsv"
      - "*_cds_coordinates.tsv":
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'test', single_end:false ]`
          pattern: "*_cds_coordinates.tsv"
  - invalid_cds:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'test', single_end:false ]`
          pattern: "*_invalid_cds.txt"
      - "*_invalid_cds.txt":
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'test', single_end:false ]`
          pattern: "*_invalid_cds.txt"
      - id_cds:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'test', single_end:false ]`
          pattern: "*_invalid_cds.txt"
  - loci_summary_stats:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'test', single_end:false ]`
          pattern: "*_loci_summary_stats.tsv"
      - "*_loci_summary_stats.tsv":
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'test', single_end:false ]`
          pattern: "*_loci_summary_stats.tsv"
  - versions:
      - versions.yml:
          type: file
          description: File containing software versions
          pattern: "versions.yml"
authors:
  - "@anwarMZ"
