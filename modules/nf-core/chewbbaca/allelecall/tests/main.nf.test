nextflow_process {

    name "Test Process CHEWBBACA_ALLELECALL"
    script "../main.nf"
    process "CHEWBBACA_ALLELECALL"

    tag "modules"
    tag "modules_nfcore"
    tag "chewbbaca"
    tag "chewbbaca/allelecall"
    tag "chewbbaca/createschema"

    setup {
        run("CHEWBBACA_CREATESCHEMA") {
            script "../../createschema/main.nf"
            process {
                """
                input[0] = [
                    [ id:'sarscov2' ],
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fasta/contigs.fasta', checkIfExists: true)
                ]
                input[1] = []
                input[2] = []
                """
            }
        }
    }

    test("sarscov2 - fasta") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fasta/contigs.fasta', checkIfExists: true)
                ]
                input[1] = CHEWBBACA_CREATESCHEMA.out.schema
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("sarscov2 - fasta - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fasta/contigs.fasta', checkIfExists: true)
                ]
                input[1] = CHEWBBACA_CREATESCHEMA.out.schema
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}