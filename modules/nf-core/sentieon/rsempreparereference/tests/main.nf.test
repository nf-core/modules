nextflow_process {

    name "Test Process SENTIEON_RSEMPREPAREREFERENCE"
    script "../main.nf"
    process "SENTIEON_RSEMPREPAREREFERENCE"
    tag "modules"
    tag "modules_nfcore"
    tag "sentieon"
    tag "sentieon/rsempreparereference"

    test("homo_sapiens") {

        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] = Channel.of(file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta', checkIfExists: true))
                input[1] = Channel.of(file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.gtf', checkIfExists: true))
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out.index).match("index")},
                { assert snapshot(process.out.transcript_fasta).match("transcript_fasta")},
                { assert snapshot(process.out.versions).match("versions") }
            )
        }
    }

    test("homo_sapiens - stub") {

    options "-stub"

        when {
            process {
                """
                input[0] = Channel.of(file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta', checkIfExists: true))
                input[1] = Channel.of(file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.gtf', checkIfExists: true))
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}
