nextflow_process {

    name "Test Process TCOFFEE_TCS"
    script "../main.nf"
    process "TCOFFEE_TCS"
    tag "modules"
    tag "modules_nfcore"
    tag "tcoffee"
    tag "tcoffee/tcs"
    tag "pigz/compress"
    tag "tcoffee/align"

    test("tcs - msa") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test'], 
                    file("https://raw.githubusercontent.com/nf-core/test-datasets/multiplesequencealign/testdata/setoxin.ref", checkIfExists: true)
                    ]
                input[1] = [
                    [ id:'test'],
                    []
                    ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("tcs - msa - compressed") {

        setup {
            run("PIGZ_COMPRESS") {
                script "../../../pigz/compress/main.nf"
                process {
                    """
                    input[0] = [ [ id:'test' ],
                                file("https://raw.githubusercontent.com/nf-core/test-datasets/multiplesequencealign/testdata/setoxin.ref", checkIfExists: true)
                               ]

                    """
                }
            }        
        }

        when {
            process {
                """
                input[0] = PIGZ_COMPRESS.out.archive.map { it -> [[ id:'test'], it[1]] }
                input[1] = [
                    [ id:'test'],
                    []
                    ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("tcs - msa - lib") {

        config "./lib.config"

        setup {
            run("TCOFFEE_ALIGN") {
                script "../../align/main.nf"
                process {
                    """
                    input[0] = [ [ id:'test' ],
                             file("https://raw.githubusercontent.com/nf-core/test-datasets/multiplesequencealign/testdata/setoxin-ref.fa", checkIfExists: true)
                           ]
                    input[1] = [[:],[]]
                    input[2] = [[:],[],[]]
                    input[3] = true
                    """
                }
            }        
        }

        when {
            process {
                """
                input[0] = [
                    [ id:'test'], 
                    file("https://raw.githubusercontent.com/nf-core/test-datasets/multiplesequencealign/testdata/setoxin.ref", checkIfExists: true)
                    ]
                input[1] = TCOFFEE_ALIGN.out.lib.map { it -> [[  id:'test' ], it[1]] }
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}
