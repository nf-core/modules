nextflow_process {

    name "Test Process AUTHENTICT_DEAM2CONT"
    
    script "../main.nf"
    process "AUTHENTICT_DEAM2CONT"
   
    tag "modules"
    tag "modules_nfcore"
    tag "authentict"
    tag "authentict/deam2cont"
    tag "samtools"
    tag "samtools/calmd"
   
    setup {
        run("SAMTOOLS_CALMD") {
            script "../../../samtools/calmd/main.nf"
            
            process {
                """
                input[0] = [
                    [id:'test',single_end:false],// meta map
                    file(params.modules_testdata_base_path + "genomics/homo_sapiens/illumina/bam/test.paired_end.sorted.bam",checkIfExists:true)
                ]
                input[1] = [
                    [id : "genome"],
                    file(params.modules_testdata_base_path + "genomics/homo_sapiens/genome/genome.fasta",checkIfExists:true)
                ]
                """
            }
        }
    }

    test("test_authentict_deam2cont") {
        when {
            process {
                """
                input[0] = SAMTOOLS_CALMD.out.bam
                input[1] = [[],[]]
                input[2] = [[],[]]
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("test_authentict_deam2cont - stub") {

        options '-stub'

        when {
            process {
                """
                input[0] = SAMTOOLS_CALMD.out.bam
                input[1] = [[],[]]
                input[2] = [[],[]]
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out,
                    process.out.versions.collect{path(it).yaml}
                ).match() }
            )
        }
    }
}