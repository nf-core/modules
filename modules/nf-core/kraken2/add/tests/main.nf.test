nextflow_process {

    name "Test Process KRAKEN2_ADD"
    script "../main.nf"
    process "KRAKEN2_ADD"
    tag "kraken2"
    tag "kraken2/add"
    tag "gunzip"
    tag "modules"
    tag "modules_nfcore"

    setup {
        run("GUNZIP") {
            script "modules/nf-core/gunzip/main.nf"
            process {
                """
                input[0] = Channel.of([
                    [],
                    file(
                        params.test_data['sarscov2']['metagenome']['prot_accession2taxid_gz'],
                        checkIfExists: true
                    )
                ])
                """
            }
        }
    }

    test("sarscov2 protein_db") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ],
                        [
                        file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true),
                        file(params.test_data['sarscov2']['genome']['proteome_fasta'], checkIfExists: true)
                        ]
                    ]
                input[1] = file(params.test_data['sarscov2']['metagenome']['prot_names_dmp'], checkIfExists: true)
                input[2] = file(params.test_data['sarscov2']['metagenome']['prot_nodes_dmp'], checkIfExists: true)
                input[3] = GUNZIP.out.gunzip.map{ it[1] }
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert process.out.db.get(0).get(1) ==~ ".*/test" },
                { assert snapshot (
                        path("${process.out.db[0][1]}/library/added/").list().size(),
                        path("${process.out.db[0][1]}/taxonomy/")
                    ).match()
                }
            )
        }

    }

test("sarscov2 protein_db stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ],
                        [
                        file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true),
                        file(params.test_data['sarscov2']['genome']['proteome_fasta'], checkIfExists: true)
                        ]
                    ]
                input[1] = file(params.test_data['sarscov2']['metagenome']['prot_names_dmp'], checkIfExists: true)
                input[2] = file(params.test_data['sarscov2']['metagenome']['prot_nodes_dmp'], checkIfExists: true)
                input[3] = GUNZIP.out.gunzip.map{ it[1] }
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot (process.out).match()
                }
            )
        }

    }
}
