nextflow_process {
 
    name "Test Process PROPR_GREA"
    script "../main.nf"
    process "PROPR_GREA"
    
    tag "modules"
    tag "modules_nfcore"
    tag "propr"
    tag "propr/grea"
    tag "mygene"
    tag "propr/propr"
 
    test("grea chained to propr using default options") {  

        tag "default"
        config "./grea_test.config"

        setup {
            run("PROPR_PROPR") {
                script "../../propr/main.nf"
                process {
                """
                input[0] = [
                    [ id:'test' ],
                    file("https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/genomics/mus_musculus/rnaseq_expression/SRP254919.salmon.merged.gene_counts.top1000cov.tsv")
                ]
                """
                }
            }
            run("MYGENE") {
                script "../../../mygene/main.nf"
                process {
                """
                input[0] = [
                    [id : 'test'],
                    file("https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/genomics/mus_musculus/rnaseq_expression/SRP254919.gene_meta.tsv")
                ]
                """
                }
            }
        }

        when {
            process {
                """
                input[0] = PROPR_PROPR.out.adj.collect{ meta, adj -> adj }.map{ adj -> [[ id: 'test_adj'], adj]}
                input[1] = MYGENE.out.gmt.collect{ meta, gmt -> gmt }.map{ gmt -> [[ id: 'test_gmt'], gmt]}
                """
            }
        }
 
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out.enrichedGO).match("grea chained to propr using default options - enrichedGO") },
                { assert snapshot(process.out.versions).match("versions") }

            )
        }
    }
}