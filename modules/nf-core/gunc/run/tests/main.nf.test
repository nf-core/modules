nextflow_process {

    name "Test Process GUNC_RUN"
    script "../main.nf"
    process "GUNC_RUN"

    tag "modules_nfcore"
    tag "modules"
    tag "gunc"
    tag "gunc/run"
    tag "gunc/downloaddb"

    // commented out because GitHub runners are not able to run this test
    // test("gunc - run") {

    //     setup {
    //         run("GUNC_DOWNLOADDB") {
    //             script "../../downloaddb/main.nf"
    //             process {
    //                 """
    //                 input[0] = 'progenomes'
    //                 """
    //             }
    //         }
    //     }

    //     when {
    //         params {
    //             outdir = "${launchDir}/tests/results"
    //         }
    //         process {
    //             """
    //             input[0] = [
    //                 [id: 'test'],
    //                 [file(
    //                     params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fasta/contigs.fasta',
    //                     checkIfExists: true
    //                 )]
    //             ]
    //             input[1] = GUNC_DOWNLOADDB.out.db
    //             """
    //         }
    //     }

    //     then {
    //         assertAll(
    //             { assert process.success },
    //             { assert snapshot(process.out).match() }
    //         )
    //     }

    // }

    test("gunc - run - stub") {

        options "-stub"

        setup {
            run("GUNC_DOWNLOADDB") {
                script "../../downloaddb/main.nf"
                process {
                    """
                    input[0] = 'progenomes'
                    """
                }
            }
        }

        when {
            params {
                outdir = "${launchDir}/tests/results"
            }
            process {
                """
                input[0] = [
                    [id: 'test'],
                    [file(
                        params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fasta/contigs.fasta',
                        checkIfExists: true
                    )]
                ]
                input[1] = GUNC_DOWNLOADDB.out.db
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}