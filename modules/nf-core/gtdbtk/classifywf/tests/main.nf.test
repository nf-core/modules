nextflow_process {

    name "Test Process GTDBTK_CLASSIFYWF"
    script "../main.nf"
    process "GTDBTK_CLASSIFYWF"
    config './nextflow.config'

    tag "modules"
    tag "modules_nfcore"
    tag "gtdbtk"
    tag "gtdbtk/classifywf"
    tag "untar"

    setup {
        run("UNTAR") {
            script "../../../untar/main.nf"
            process {
            """
            input[0] = [
                        [ id:'mockup' ], // meta map
                        file('https://github.com/nf-core/test-datasets/raw/refs/heads/mag/databases/gtdbtk/gtdbtk_mockup_20250422.tar.gz', checkIfExists: true)
            ]
            """
            }
        }
    }

    // Using special mini test-data provided to use via GTDB developers
    test("E. coli - genome fasta") {

        when {

            params {
                // Recommended by the GTDB developers: https://data.gtdb.ecogenomic.org/releases/latest/auxillary_files/gtdbtk_package/mockup_db/HOWTO.txt
                // The `--skip_ani_screen` requires comparison against a full database and goes through the full classfywf pipeline
                module_args = '--extension fa --skip_ani_screen'
            }

            process {
                """
                input[0] = [
                        [ id:'test', single_end:false, assembler:'SPADES' ],
                        [
                            file(params.modules_testdata_base_path + 'genomics/prokaryotes/escherichia_coli/genome/genome.fa', checkIfExists: true),
                        ]
                    ]
                input[1] = UNTAR.out.untar
                input[2] = false
                input[3] = []
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                        process.out.summary,
                        process.out.tree,
                        process.out.markers,
                        process.out.msa,
                        process.out.user_msa,
                        process.out.filtered,
                        file(process.out.log[0][1]).readLines().contains('INFO: Done.'),
                        process.out.versions,
                    ).match() }
            )
        }
    }

    test("sarscov2 - genome fasta - stub") {

        options "-stub"

        when {

            params {
                // Recommended by the GTDB developers: https://data.gtdb.ecogenomic.org/releases/latest/auxillary_files/gtdbtk_package/mockup_db/HOWTO.txt
                // The `--skip_ani_screen` requires comparison against a full database and goes through the full classfywf pipeline
                module_args = '--extension fa --skip_ani_screen'
            }

            process {
                """
                input[0] = [
                        [ id:'test', single_end:false, assembler:'SPADES' ],
                        [
                            file(params.modules_testdata_base_path + 'genomics/prokaryotes/escherichia_coli/genome/genome.fa', checkIfExists: true),
                        ]
                    ]
                input[1] = [[:],[]]
                input[2] = false
                input[3] = []
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}
