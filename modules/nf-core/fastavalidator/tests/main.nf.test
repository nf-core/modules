nextflow_process {

    name "Test Process FASTAVALIDATOR"
    script "../main.nf"
    process "FASTAVALIDATOR"

    tag "modules"
    tag "modules_nfcore"
    tag "fastavalidator"

    test("sarscov2-fasta-valid") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() },
                { assert process.out.success_log != null },
                { assert process.out.error_log == [] },
                { assert path(process.out.success_log.get(0).get(1)).getText().contains("Validation successful...") }
            )
        }

    }

    test("sarscov2-gff3-invalid") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file(params.test_data['sarscov2']['genome']['genome_gff3'], checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() },
                { assert process.out.success_log == [] },
                { assert process.out.error_log != null },
                { assert path(process.out.error_log.get(0).get(1)).getText().contains("genome.gff3 does not start with a >") }
            )
        }

    }
}
