
nextflow_process {

    name "Test Process BWAMETH_ALIGN"
    script "../main.nf"
    process "BWAMETH_ALIGN"

    tag "modules"
    tag "modules_nfcore"
    tag "bwameth"
    tag "bwameth/align"
    tag "bwameth/index"

    setup {
        run("BWAMETH_INDEX") {
            script "../../../bwameth/index/main.nf"
            process {
                """
                input[0] = Channel.of([
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)
                ])
                """
            }
        }
    }

    test("sarscov2 methylated single_end [fastq]") {

        when {
            process {
                """
                input[0] = Channel.of([
                                [ id:'test', single_end:true ], // meta map
                                file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test.methylated_1.fastq.gz', checkIfExists: true)
				])
                input[1] = Channel.of([
                                [ id:'test' ], // meta map
                                file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)
                ])
				input[2] = BWAMETH_INDEX.out.index
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
					bam(process.out.bam[0][1]).getReadsMD5(),
					process.out.versions
					).match()
				}
            )
        }
    }

    test("sarscov2 methylated paired_end [fastq]") {

        when {
            process {
                """
                input[0] = Channel.of([
                                [ id:'test', single_end:false ], // meta map
                                [
                                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test.methylated_1.fastq.gz', checkIfExists: true),
                                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test.methylated_2.fastq.gz', checkIfExists: true)
                                ]
				])
				input[1] = Channel.of([
                                [ id:'test' ], // meta map
                                file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)
                ])
				input[2] = BWAMETH_INDEX.out.index
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
					bam(process.out.bam[0][1]).getReadsMD5(),
					process.out.versions
					).match()
				}
            )
        }
    }

    test("sarscov2 methylated paired_end [fastq] - stub") {
        options '-stub'

        when {
            process {
                """
                input[0] = Channel.of([
                                [ id:'test', single_end:false ], // meta map
                                [
                                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test.methylated_1.fastq.gz', checkIfExists: true),
                                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test.methylated_2.fastq.gz', checkIfExists: true)
                                ]
				])
				input[1] = Channel.of([
                                [ id:'test' ], // meta map
                                file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)
                ])
				input[2] = BWAMETH_INDEX.out.index
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

}
