nextflow_process {

    name "Test Process ARTIC_GUPPYPLEX"
    script "../main.nf"
    process "ARTIC_GUPPYPLEX"

    tag "modules"
    tag "modules_nfcore"
    tag "artic"
    tag "artic/guppyplex"

    test("sarscov2 - fastq") {

        when {
            process {
                """
                input[0] = Channel.of([
                    [ id:'test' ],
                    file(params.modules_testdata_base_path + '/genomics/sarscov2/nanopore/fastq/test.fastq.gz', checkIfExists: true)
                ])
                .map { meta, fastq ->
                    def staged_file = file("\${workDir}/fastq/\${fastq.name}")
                    staged_file.parent.mkdirs()
                    fastq.copyTo(staged_file)
                    [ meta, "\${workDir}/fastq" ]
                }
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("sarscov2 - fastq - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = Channel.of([
                    [ id:'test' ],
                    file(params.modules_testdata_base_path + '/genomics/sarscov2/nanopore/fastq/test.fastq.gz', checkIfExists: true)
                ])
                .map { meta, fastq ->
                    def staged_file = file("\${workDir}/fastq/\${fastq.name}")
                    staged_file.parent.mkdirs()
                    fastq.copyTo(staged_file)
                    [ meta, "\${workDir}/fastq" ]
                }
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

}
