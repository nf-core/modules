nextflow_process {

    name "Test Process FOLDCOMP_DECOMPRESS"
    script "../main.nf"
    process "FOLDCOMP_DECOMPRESS"

    tag "modules"
    tag "modules_nfcore"
    tag "foldcomp"
    tag "foldcomp/compress"
    tag "foldcomp/decompress"

    setup {
        run("FOLDCOMP_COMPRESS") {
            script "../../compress/main.nf"
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.test_data['proteomics']['pdb']['tim1_pdb'], checkIfExists: true)
                    ]
                """
            }
        }
    }

    test("proteomics - pdb") {

        when {
            process {
                """
                input[0] = FOLDCOMP_COMPRESS.out.fcz.flatMap { meta, files ->
                    files.collect { file -> tuple(meta, file) }
                }
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out.sort()).match() }
            )
        }

    }

    test("proteomics - pdb - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = FOLDCOMP_COMPRESS.out.fcz
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match('stub') }
            )
        }

    }

}
