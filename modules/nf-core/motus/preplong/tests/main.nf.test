nextflow_process {

    name "Test Process MOTUS_PREPLONG"
    script "../main.nf"
    process "MOTUS_PREPLONG"

    tag "modules"
    tag "modules_nfcore"
    tag "motus"
    tag "motus/downloaddb"
    tag "motus/preplong"

    setup {
        run("MOTUS_DOWNLOADDB") {
            script "modules/nf-core/motus/downloaddb/main.nf"
            process {
                """
                input[0] = Channel.of([
                    file('https://raw.githubusercontent.com/motu-tool/mOTUs/master/motus/downloadDB.py')
                ])
                """
            }
        }
    }

    test("sarscov2 - fasta") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/nanopore/fastq/test_2.fastq.gz', checkIfExists: true)
                ]
                input[1] =  MOTUS_DOWNLOADDB.out.db
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("sarscov2 - fasta - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/nanopore/fastq/test_2.fastq.gz', checkIfExists: true)
                ]
                input[1] =  MOTUS_DOWNLOADDB.out.db
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }


    }

}
