nextflow_process {

    name "Test Process PLINK2_REMOVE"
    script "../main.nf"
    process "PLINK2_REMOVE"

    tag "modules"
    tag "modules_nfcore"
    tag "plink2"
    tag "plink2/remove"
    tag "gawk"

    test("plink2 - plink1_input - remove") {

        when {
            process {
                """          
                 input[0] = [
                        [id:"test"],
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/popgen/plink_simulated.bed', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/popgen/plink_simulated.bim', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/popgen/plink_simulated.fam', checkIfExists: true)
                ]
                input[1] = Channel.of('per0').collectFile(name:"remove.txt")
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("plink2 - plink2_input - remove") {

        when {
            process {
                """          
                 input[0] = [
                        [id:"test"],
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/popgen/plink_simulated.pgen', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/popgen/plink_simulated.pvar', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/popgen/plink_simulated.psam', checkIfExists: true)
                ]
                input[1] = Channel.of('per0').collectFile(name:"remove.txt")
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }
    
     test("plink2 - plink1_input - remove - stub") {

        when {
            process {
                """          
                 input[0] = [
                        [id:"test"],
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/popgen/plink_simulated.bed', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/popgen/plink_simulated.bim', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/popgen/plink_simulated.fam', checkIfExists: true)
                ]
                input[1] = Channel.of('per0').collectFile(name:"remove.txt")
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("plink2 - plink2_input - remove - stub") {

        when {
            process {
                """          
                 input[0] = [
                        [id:"test"],
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/popgen/plink_simulated.pgen', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/popgen/plink_simulated.pvar', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/popgen/plink_simulated.psam', checkIfExists: true)
                ]
                input[1] = Channel.of('per0').collectFile(name:"remove.txt")
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }   
    
}