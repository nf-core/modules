nextflow_process {

    name "Test Process ARRIBA_VISUALISATION"
    script "../main.nf"
    process "ARRIBA_VISUALISATION"
    tag "modules"
    tag "modules_nfcore"
    tag "arriba"
    tag "arriba/visualization"

    test("ARRIBA_VISUALISATION") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    [],
                    [],
                    file("https://raw.githubusercontent.com/nf-core/test-datasets/refs/heads/rnafusion/testdata/reference/arriba/test_fastqs.arriba.fusions.tsv", checkIfExists: true)
                ]
                input[1] = [
                    [ id:'test_gtf' ],
                    file("https://raw.githubusercontent.com/nf-core/test-datasets/refs/heads/rnafusion/testdata/reference/ensembl/Homo_sapiens.GRCh38.102.chr4.gtf", checkIfExists: true)
                ]
                input[2] = [
                    [ id:'test_protein_domains' ],
                    file("https://raw.githubusercontent.com/nf-core/test-datasets/refs/heads/rnafusion/testdata/reference/arriba/protein_domains_hg38_GRCh38_v2.5.0.gff3", checkIfExists: true)
                ]
                input[3] = [
                    [ id:'test_cytobands' ],
                    file("https://raw.githubusercontent.com/nf-core/test-datasets/refs/heads/rnafusion/testdata/reference/arriba/cytobands_hg38_GRCh38_v2.5.0.tsv", checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(file(process.out.pdf[0][1]).length()) },
                { assert snapshot(process.out.versions).match("versions") }
            )
        }
    }

    test("ARRIBA_VISUALISATION stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file("https://github.com/nf-core/test-datasets/raw/modules/data/genomics/homo_sapiens/illumina/bam/test.paired_end.markduplicates.sorted.bam", checkIfExists: true),
                    file("https://github.com/nf-core/test-datasets/raw/modules/data/genomics/homo_sapiens/illumina/bam/test.paired_end.markduplicates.sorted.bam.bai", checkIfExists: true),
                    file("https://raw.githubusercontent.com/nf-core/test-datasets/refs/heads/rnafusion/testdata/reference/arriba/test_fastqs.arriba.fusions.tsv", checkIfExists: true)
                ]
                input[1] = [
                    [ id:'test_gtf' ],
                    file("https://raw.githubusercontent.com/nf-core/test-datasets/refs/heads/rnafusion/testdata/reference/ensembl/Homo_sapiens.GRCh38.102.chr4.gtf", checkIfExists: true)
                ]
                input[2] = [
                    [ id:'test_protein_domains' ],
                    file("https://raw.githubusercontent.com/nf-core/test-datasets/refs/heads/rnafusion/testdata/reference/arriba/protein_domains_hg38_GRCh38_v2.5.0.gff3", checkIfExists: true)
                ]
                input[3] = [
                    [ id:'test_cytobands' ],
                    file("https://raw.githubusercontent.com/nf-core/test-datasets/refs/heads/rnafusion/testdata/reference/arriba/cytobands_hg38_GRCh38_v2.5.0.tsv", checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}