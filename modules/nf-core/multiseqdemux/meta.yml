---
# yaml-language-server: $schema=https://raw.githubusercontent.com/nf-core/modules/master/modules/meta-schema.json
name: "multiseqdemux"
description: Identify singlets, doublets and negative cells from multiplexing experiments. Annotate singlets by tags.
keywords:
  - demultiplexing
  - hashing-based deconvolution
  - single-cell
tools:
  - "multiseqdemux":
      description: "MULTIseqDemux is the demultiplexing module of Seurat, which demultiplex samples based on data from cell hashing."
      homepage: "https://satijalab.org/seurat/reference/multiseqdemux"
      documentation: "https://satijalab.org/seurat/reference/multiseqdemux"
      tool_dev_url: "https://github.com/satijalab/seurat"
      doi: "10.1038/s41592-019-0433-8"
      licence: ["MIT"]
      identifier: ""

input:
  - - meta:
        type: map
        description: |
          Groovy Map containing sample information
          e.g. `[ id:'sample1' ]`
    - seurat_object:
        type: file
        description: |
          A `.rds` file containing the seurat object. Assumes that the hash tag oligo (HTO) data has been added and normalized.
    - assay:
        type: string
        description: |
          Name of the Hashtag assay, usually called "HTO" by default. Use the custom name if the assay has been named differently.

output:

  - params:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'sample1' ]`
      - "*_params_multiseqdemux.csv":
          type: file
          description: The used parameters to call MULTIseqDemux in the R-Script.
          pattern: "_params_multiseqdemux.csv"

  - results:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'sample1' ]`
      - "*_res_multiseqdemux.csv":
          type: file
          description: Resuls of MULTIseqDemux.
          pattern: "_res_multiseqdemux.csv"

  - rds:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'sample1' ]`
      - "*_multiseqdemux.rds":
          type: file
          description: SeuratObject saved as RDS.
          pattern: "_multiseqdemux.rds"

  - versions:
      - "versions.yml":
          type: file
          description: File containing software versions
          pattern: "versions.yml"

authors:
  - "@LuisHeinzlmeier"
maintainers:
  - "@LuisHeinzlmeier"
