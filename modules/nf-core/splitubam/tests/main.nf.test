
nextflow_process {

    name "Test Process SPLITUBAM"
    script "../main.nf"
    process "SPLITUBAM"

    tag "modules"
    tag "modules_nfcore"
    tag "splitubam"

    test("sarscov2 - bam") {

        config "./nextflow.config"

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bam/test.paired_end.bam', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    bam(process.out.bam.get(0).get(1).get(0)).getHeader(),
                    bam(process.out.bam.get(0).get(1).get(0)).getReadsMD5(),
                    bam(process.out.bam.get(0).get(1).get(1)).getHeader(),
                    bam(process.out.bam.get(0).get(1).get(1)).getReadsMD5(),
                    process.out.versions
                ).match() }
            )
        }

    }

    test("sarscov2 - bam - stub") {

        options "-stub"
        config "./nextflow.config"

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bam/test.paired_end.bam', checkIfExists: true)
                    ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
