
nextflow_process {

    name "Test Process SAMTOOLS_DEPTH"
    script "../main.nf"
    process "SAMTOOLS_DEPTH"

    tag "modules"
    tag "modules_nfcore"
    tag "samtools"
    tag "samtools/depth"

    test("test-samtools-depth") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
				    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/bam/test.paired_end.recalibrated.sorted.bam', checkIfExists: true)
                ]
				input[1] = [[],[]]

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("test-samtools-depth-intervals") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
				    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/bam/test.paired_end.recalibrated.sorted.bam', checkIfExists: true)
                ]
				input[1] = [
                    [ id:'bed' ],
				    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/sequence/multi_intervals.bed', checkIfExists: true)
                ]

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

}
