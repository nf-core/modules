nextflow_process {

    name "Test Process DIAMOND_BLASTP"
    script "../main.nf"
    process "DIAMOND_BLASTP"
    tag "modules"
    tag "modules_nfcore"
    tag "diamond"
    tag "diamond/makedb"
    tag "diamond/blastp"

    setup {
        run("DIAMOND_MAKEDB") {
            script "../../makedb/main.nf"
            process {
                """
                input[0] = [ [id:'test2'], [ file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/proteome.fasta', checkIfExists: true) ] ]
                input[1] = []
                input[2] = []
                input[3] = []
                """
            }
        }
    }

    test("sarscov2 - proteome - txt") {

        when {
            process {
                """
                input[0] = [ [id:'test'], file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/proteome.fasta', checkIfExists: true) ]
                input[1] = DIAMOND_MAKEDB.out.db
                input[2] = 6
                input[3] = 'qseqid qlen'
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("sarscov2 - proteome - gz - txt") {

        when {
            process {
                """
                input[0] = [ [id:'test'], file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/proteome.fasta.gz', checkIfExists: true) ]
                input[1] = DIAMOND_MAKEDB.out.db
                input[2] = 6
                input[3] = 'qseqid qlen'
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match("gz_txt")}
            )
        }

    }

    test("sarscov2 - proteome - daa") {

        when {
            process {
                """
                input[0] = [ [id:'test'], file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/proteome.fasta', checkIfExists: true) ]
                input[1] = DIAMOND_MAKEDB.out.db
                input[2] = 100
                input[3] = []
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert process.out.daa },
                { assert snapshot(process.out.versions).match("daa") }
            )
        }

    }

    test("sarscov2 - proteome - txt - gz") {

        config "./nextflow.config"

        when {
            process {
                """
                input[0] = [ [id:'test'], file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/proteome.fasta', checkIfExists: true) ]
                input[1] = DIAMOND_MAKEDB.out.db
                input[2] = 6
                input[3] = 'qseqid qlen'
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match("txt_gz") }
            )
        }

    }

    test("sarscov2 - proteome - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [ [id:'test'], file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/proteome.fasta', checkIfExists: true) ]
                input[1] = DIAMOND_MAKEDB.out.db
                input[2] = 6
                input[3] = 'qseqid qlen'
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match("stub") }
            )
        }

    }

}
