
nextflow_process {

    name "Test Process CNVPYTOR_IMPORTREADDEPTH"
    script "../main.nf"
    process "CNVPYTOR_IMPORTREADDEPTH"
    config "./nextflow.config"

    tag "modules"
    tag "modules_nfcore"
    tag "cnvpytor"
    tag "cnvpytor/importreaddepth"

    test("test-cnvpytor-importreaddepth") {

        when {
            process {
                """
                input[0] = [
				    [ id: 'test' ], // meta map
				    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/bam/test2.paired_end.sorted.bam', checkIfExists: true),
				    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/bam/test2.paired_end.sorted.bam.bai', checkIfExists: true)
				]
				input[1] = []
                input[2] = []

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    file(process.out.pytor[0][1]).name,
                    process.out.versions
                    ).match()
                }
            )
        }
    }

    test("test-cnvpytor-importreaddepth-cram") {

        when {
            process {
                """
                input[0] = [
				    [ id: 'test' ], // meta map
				    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/cram/test.paired_end.sorted.cram', checkIfExists: true),
				    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/cram/test.paired_end.sorted.cram.crai', checkIfExists: true)
				]
				input[1] = file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta', checkIfExists: true)
				input[2] = file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta.fai', checkIfExists: true)

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    file(process.out.pytor[0][1]).name,
                    process.out.versions
                    ).match()
                }
            )
        }
    }

    test("test-cnvpytor-importreaddepth-cram-stub") {
        options '-stub'
        when {
            process {
                """
                input[0] = [
				    [ id: 'test' ], // meta map
				    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/cram/test.paired_end.sorted.cram', checkIfExists: true),
				    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/cram/test.paired_end.sorted.cram.crai', checkIfExists: true)
				]
				input[1] = file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta', checkIfExists: true)
				input[2] = file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta.fai', checkIfExists: true)

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

}
