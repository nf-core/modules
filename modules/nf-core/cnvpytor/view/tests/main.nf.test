
nextflow_process {

    name "Test Process CNVPYTOR_VIEW"
    script "../main.nf"
    process "CNVPYTOR_VIEW"
    config "./nextflow.config"

    tag "modules"
    tag "modules_nfcore"
    tag "cnvpytor"
    tag "cnvpytor/view"

    test("test-cnvpytor-view") {

        when {
            process {
                """
                input[0] = [
				    [ id:'test'], // meta map
				    [ file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/pytor/test.pytor', checkIfExists: true) ]
				]
				input[1] = "10000 100000"
				input[2] = []

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("test-cnvpytor-view-tsvout") {

        when {
            process {
                """
                input[0] = [
				    [ id:'test'], // meta map
				    [ file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/pytor/test.pytor', checkIfExists: true) ]
				]
				input[1] = []
				input[2] = "tsv"

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    file(process.out.tsv[0][1]).name,
                    process.out.versions
                    ).match()
                }
            )
        }
    }

    test("test-cnvpytor-view-stub") {
        options '-stub'
        when {
            process {
                """
                input[0] = [
				    [ id:'test'], // meta map
				    [ file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/pytor/test.pytor', checkIfExists: true) ]
				]
				input[1] = []
				input[2] = []

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

}
