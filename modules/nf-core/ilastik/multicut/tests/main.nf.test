nextflow_process {

    name "Test Process ILASTIK_MULTICUT"
    script "../main.nf"
    process "ILASTIK_MULTICUT"

    tag "modules"
    tag "modules_nfcore"
    tag "ilastik"
    tag "ilastik/multicut"

    test("ilastik multicut - input h5 - output tiff") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + 'imaging/h5/plant_wga.h5', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'imaging/h5/plant_wga_probabilities.h5', checkIfExists: true),
                ]
                input[1] = [
                    file(params.modules_testdata_base_path + 'imaging/ilp/plant_wga.multicut.ilp', checkIfExists: true),
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out.versions,
                    file(process.out.mask.get(0).get(1)).exists()
                ).match() }
            )
        }

    }

    test("ilastik multicut - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + 'imaging/h5/plant_wga.h5', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'imaging/h5/plant_wga_probabilities.h5', checkIfExists: true),
                ]
                input[1] = [
                    file(params.modules_testdata_base_path + 'imaging/ilp/plant_wga.multicut.ilp', checkIfExists: true),
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
