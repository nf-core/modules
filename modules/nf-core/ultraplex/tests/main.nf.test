nextflow_process {

    name "Test Process ULTRAPLEX"
    script "../main.nf"
    process "ULTRAPLEX"

    tag "modules"
    tag "modules_nfcore"
    tag "ultraplex"

    test("ultraplex") {

        when {
            process {
                """
                input[0] = [[id: "test"],
                            file("https://raw.githubusercontent.com/nf-core/test-datasets/clipseq/reads/multiplexed.fastq.gz", checkIfExists: true)
                            ]
                input[1] = file("https://raw.githubusercontent.com/nf-core/test-datasets/clipseq/barcodes.csv", checkIfExists: true)
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out.fastq,
                    process.out.no_match_fastq,
                    process.out.versions).match()},
                { assert process.out.report.get(0) ==~ ".*ultraplex_.*.log" }
            )

        }

    }

    test("ultraplex - adaptor") {
        config "./adapter.config"
        when {
            process {
                """
                input[0] = [[id: "test"],
                            file("https://raw.githubusercontent.com/nf-core/test-datasets/clipseq/reads/multiplexed.fastq.gz", checkIfExists: true)
                           ]
                input[1] = file("https://raw.githubusercontent.com/nf-core/test-datasets/clipseq/barcodes.csv", checkIfExists: true)
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out.fastq,
                    process.out.no_match_fastq,
                    process.out.versions).match()},
                { assert process.out.report.get(0) ==~ ".*ultraplex_.*.log" }
            )
        }

    }

    test("ultraplex - pairedend") {

        when {
            process {
                """
                input[0] = [[id: "test"],
                            [file("https://raw.githubusercontent.com/nf-core/test-datasets/clipseq/reads/multiplexed.fastq.gz", checkIfExists: true),
                            file("https://raw.githubusercontent.com/nf-core/test-datasets/clipseq/reads/multiplexed2.fastq.gz", checkIfExists: true)]
                            ]
                input[1] = file("https://raw.githubusercontent.com/nf-core/test-datasets/clipseq/barcodes.csv", checkIfExists: true)
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out.fastq,
                    process.out.no_match_fastq,
                    process.out.versions).match()},
                { assert process.out.report.get(0) ==~ ".*ultraplex_.*.log" }
            )
        }

    }

    test("ultraplex - incorrect barcodes") {

        when {
            process {
                """
                input[0] = [[id: "test"],
                            [ file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true),
                            file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_2.fastq.gz', checkIfExists: true) ]
                            ]
                input[1] = file("https://raw.githubusercontent.com/nf-core/test-datasets/clipseq/barcodes.csv", checkIfExists: true)
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out.fastq,
                    process.out.no_match_fastq,
                    process.out.versions).match()},
                { assert process.out.report.get(0) ==~ ".*ultraplex_.*.log" }
            )
        }

    }


    test("ultraplex - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [[id: "test"],
                            file("https://raw.githubusercontent.com/nf-core/test-datasets/clipseq/reads/multiplexed.fastq.gz", checkIfExists: true)
                            ]
                input[1] = file("https://raw.githubusercontent.com/nf-core/test-datasets/clipseq/barcodes.csv", checkIfExists: true)
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
