# yaml-language-server: $schema=https://raw.githubusercontent.com/nf-core/modules/master/modules/yaml-schema.json
name: "oatk"
description: An nf-core module for the OATK
keywords:
  - organelle
  - mitochondrion
  - plastid
  - PacBio
  - HiFi
  - assembly
tools:
  - "oatk":
      description: "An organelle genome assembly toolkit"
      homepage: "https://github.com/c-zhou/oatk"
      documentation: "https://github.com/c-zhou/oatk"
      tool_dev_url: "https://github.com/c-zhou/oatk"
      doi: "10.5281/zenodo.10400173"
      licence: ["MIT"]
      identifier: ""

input:
  # Only when we have meta
  - - meta:
        type: map
        description: |
          Groovy Map containing sample information
          e.g. [ id:'Cladonia_norvegica' ]
    - reads:
        type: file
        description: HiFi reads in FASTA format
        pattern: "*.{fasta,fasta.gz,fa,fa.gz}"
        ontologies: []
  - - mito_hmm:
        type: file
        description: mitochondria gene annotation HMM profile database
        pattern: "*.{fa,fam}"
        ontologies: []
    - mito_hmm_h3f:
        type: file
        description: mitochondria gene annotation HMM profile binary auxfile
        pattern: "*.{h3f}"
        ontologies: []
    - mito_hmm_h3i:
        type: file
        description: mitochondria gene annotation HMM profile binary auxfile
        pattern: "*.{h3i}"
        ontologies: []
    - mito_hmm_h3m:
        type: file
        description: mitochondria gene annotation HMM profile binary auxfile
        pattern: "*.{h3m}"
        ontologies: []
    - mito_hmm_h3p:
        type: file
        description: mitochondria gene annotation HMM profile binary auxfile
        pattern: "*.{h3p}"
        ontologies: []
  - - pltd_hmm:
        type: file
        description: plastid gene annotation HMM profile database
        pattern: "*.{fa,fam}"
        ontologies: []
    - pltd_hmm_h3f:
        type: file
        description: plastid gene annotation HMM profile binary auxfile
        pattern: "*.{h3f}"
        ontologies: []
    - pltd_hmm_h3i:
        type: file
        description: plastid gene annotation HMM profile binary auxfile
        pattern: "*.{h3i}"
        ontologies: []
    - pltd_hmm_h3m:
        type: file
        description: plastid gene annotation HMM profile binary auxfile
        pattern: "*.{h3m}"
        ontologies: []
    - pltd_hmm_h3p:
        type: file
        description: plastid gene annotation HMM profile binary auxfile
        pattern: "*.{h3p}"
        ontologies: []
output:
  #Only when we have meta
  mito_fasta:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*mito.ctg.fasta":
          type: file
          description: the structure-solved MT contigs
          pattern: "*mito.ctg.fasta"
          ontologies: []
  pltd_fasta:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*pltd.ctg.fasta":
          type: file
          description: the structure-solved PT contigs
          pattern: "*pltd.ctg.fasta"
          ontologies: []
  mito_bed:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*mito.ctg.bed":
          type: file
          description: the gene annotation for the MT sequences
          pattern: "*mito.ctg.bed"
          ontologies: []
  pltd_bed:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*pltd.ctg.bed":
          type: file
          description: the gene annotation for the PT sequences
          pattern: "*pltd.ctg.bed"
          ontologies: []
  mito_gfa:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*mito.gfa":
          type: file
          description: the subgraph for the MT genome
          pattern: "*mito.gfa"
          ontologies:
            - edam: http://edamontology.org/format_3975 # GFA 1
  pltd_gfa:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*pltd.gfa":
          type: file
          description: the subgraph for the PT genome
          pattern: "*pltd.gfa"
          ontologies:
            - edam: http://edamontology.org/format_3975 # GFA 1
  annot_mito_txt:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*annot_mito.txt":
          type: file
          description: the MT gene annotation file over all assembled sequences
          pattern: "*annot_mito.txt"
          ontologies: []
  annot_pltd_txt:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*annot_pltd.txt":
          type: file
          description: the PT gene annotation file over all assembled sequences
          pattern: "*annot_pltd.txt"
          ontologies: []
  clean_gfa:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*utg.clean.gfa":
          type: file
          description: the GFA file for the clean genome assembly
          pattern: "*utg.clean.gfa"
          ontologies:
            - edam: http://edamontology.org/format_3975 # GFA 1
  final_gfa:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*utg.final.gfa":
          type: file
          description: the GFA file for the final genome assembly
          pattern: "*utg.final.gfa"
          ontologies:
            - edam: http://edamontology.org/format_3975 # GFA 1
  initial_gfa:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*utg.gfa":
          type: file
          description: the GFA file for the initial genome assembly
          pattern: "*utg.gfa"
          ontologies:
            - edam: http://edamontology.org/format_3975 # GFA 1
  multiplex_gfa:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*utg.multiplex.gfa":
          type: file
          description: the mutliplexed GFA file
          pattern: "*utg.multiplex.gfa"
          ontologies:
            - edam: http://edamontology.org/format_3975 # GFA 1
  unzip_gfa:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*utg.unzip.gfa":
          type: file
          description: the unzipped GFA file
          pattern: "*utg.unzip.gfa"
          ontologies:
            - edam: http://edamontology.org/format_3975 # GFA 1
  versions:
    - versions.yml:
        type: file
        description: File containing software versions
        pattern: "versions.yml"
        ontologies:
          - edam: http://edamontology.org/format_3750 # YAML
authors:
  - "@ksenia-krasheninnikova"
