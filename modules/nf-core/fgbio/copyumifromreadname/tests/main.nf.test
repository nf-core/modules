nextflow_process {

    name "Test Process FGBIO_COPYUMIFROMREADNAME"
    script "../main.nf"
    process "FGBIO_COPYUMIFROMREADNAME"

    tag "modules"
    tag "modules_nfcore"
    tag "fgbio"
    tag "fgbio/copyumifromreadname"
    config "./nextflow.config"

    test("sarscov2 - bam") {

        when {
            params {
                module_args = '--field-delimiter "_" '
            }
            process {
                """
                input[0] = [
                    [ id:'test'],
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bam/test.paired_end.umi.sorted.bam', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bam/test.paired_end.umi.sorted.bam.bai', checkIfExists: true),
                ]
                """
            }
        }

        then {
            assert process.success
            assertAll(
                { assert snapshot(
                    process.out,
                    path(process.out.versions[0]).yaml
                    ).match()
                }
            )
        }

    }

    test("sarscov2 - bam - stub") {

        options "-stub"

        when {
            params {
                module_args = ''
            }
            process {
                """
                input[0] = [
                    [ id:'test'],
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bam/test.paired_end.umi.sorted.bam', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bam/test.paired_end.umi.sorted.bam.bai', checkIfExists: true),
                ]
                """
            }
        }

        then {
            assert process.success
            assertAll(
                { assert snapshot(
                    process.out,
                    path(process.out.versions[0]).yaml
                    ).match()
                }
            )
        }

    }

}
