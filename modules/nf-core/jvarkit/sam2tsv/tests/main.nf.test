nextflow_process {

    name "Test Process JVARKIT_SAM2TSV"
    script "../main.nf"
    process "JVARKIT_SAM2TSV"

    tag "modules"
    tag "modules_nfcore"
    tag "jvarkit"
    tag "jvarkit/sam2tsv"

    test("sarscov2 - tsv") {

        when {
            process {
                """
                input[0] =[
                    [id:"tsv_test"],
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bam/test.paired_end.sorted.bam', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bam/test.paired_end.sorted.bam.bai', checkIfExists: true),
                    []
                ]
                input[1] = [
                    [id:"tsv_test"],
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta.fai', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.dict', checkIfExists: true),
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert path(process.out.tsv[0][1]).text.startsWith("#Read-Name	Flag")},
                { assert snapshot(process.out).match()
			    }
            )
        }
    }

    test("sarscov2 - tsv - stub") {

        options  "-stub"

        when {
            process {
                """
                input[0] =[
                    [id:"tsv_test"],
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bam/test.paired_end.sorted.bam', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bam/test.paired_end.sorted.bam.bai', checkIfExists: true),
                    []
                ]
                input[1] = [
                    [id:"tsv_test"],
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta.fai', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.dict', checkIfExists: true),
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match()
			    }
            )
        }
    }
}
