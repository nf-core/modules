nextflow_process {

    name "Test Process KAIJU_MERGEOUTPUTS"
    script "../main.nf"
    process "KAIJU_MERGEOUTPUTS"

    tag "modules"
    tag "modules_nfcore"
    tag "kaiju"
    tag "kaiju/kaiju"
    tag "kraken2/kraken2"
    tag "kaiju/mergeoutputs"

    setup {
        run("KRAKEN2_KRAKEN2") {
            script "../../../kraken2/kraken2/main.nf"
            process {
                """
                input[0] = [
                    [ id:'test', single_end:true ], // meta map
                    [ file(
                        params.test_data['sarscov2']['illumina']['test_1_fastq_gz'],
                        checkIfExists: true
                    )]
                ]
                input[1] = [ file(
                        params.test_data['sarscov2']['genome']['kraken2'],
                        checkIfExists: true
                    )]
                input[2] = false
                input[3] = true
                """
            }
        }
        run("KAIJU_KAIJU") {
            script "../../../kaiju/kaiju/main.nf"
            process {
                """
                input[0] = [
                    [ id:'test', single_end:true ], // meta map
                    [ file(
                        params.test_data['sarscov2']['illumina']['test_1_fastq_gz'],
                        checkIfExists: true
                    )]
                ]
                input[1] = [ file(
                        params.test_data['sarscov2']['genome']['kaiju'],
                        checkIfExists: true
                    )]
                """
            }
        }
    }

    test("sarscov2 - kraken2.classified ") {

        when {
            process {
                """
                input = [
                    [ id:'test', single_end:false ], // meta map
                    file(params.test_data['sarscov2']['illumina']['test_paired_end_bam'], checkIfExists: true)
                    ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
                //TODO nf-core: Add all required assertions to verify the test output.
            )
        }

    }

}
