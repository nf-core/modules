// TODO nf-core: Once you have added the required tests, please run the following command to build this file:
// nf-core modules test kaiju/kaiju2krona
nextflow_process {

    name "Test Process KAIJU_KAIJU2KRONA"
    script "../main.nf"
    process "KAIJU_KAIJU2KRONA"

    tag "modules"
    tag "modules_nfcore"
    tag "kaiju"
    tag "kaiju/kaiju2krona"
    tag "kaiju/kaiju"
    tag "untar"

    test("sarscov2 - fastq - single-end") {


        setup {
            run ("UNTAR"){
                script "../../../untar/main.nf"
                process {
                    """
                    input[0] = [ [], file(params.test_data['sarscov2']['genome']['kaiju_tar_gz'], checkIfExists: true) ]
                    """
                }
            }

            run("KAIJU_KAIJU") {
                script "../../kaiju/main.nf"
                process {
                    """
                    input[0] =  [
                            [ id:'test', single_end:true ], // meta map
                            file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'], checkIfExists: true)
                            ]
                    input[1] = UNTAR.out.untar.map{ it[1] }
                    """
                }
            }
        }

            when {
                process {
                    """
                    input[0] = KAIJU_KAIJU.out.results
                    input[1] = UNTAR.out.untar.map{ it[1] }
                    """
                }
            }

            then {
                assertAll(
                    { assert process.success },
                    { assert snapshot(process.out).match() }
                )
            }

    }

    test("sarscov2 - fastq - stub") {

        options "-stub"

        setup {
            run ("UNTAR"){
                script "../../../untar/main.nf"
                process {
                    """
                    input[0] = [ [], file(params.test_data['sarscov2']['genome']['kaiju_tar_gz'], checkIfExists: true) ]
                    """
                }
            }

            run("KAIJU_KAIJU") {
                script "../../kaiju/main.nf"
                process {
                    """
                    input[0] =  [
                            [ id:'test', single_end:true ], // meta map
                            file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'], checkIfExists: true)
                            ]
                    input[1] = UNTAR.out.untar.map{ it[1] }
                    """
                }
            }
        }

        when {
            process {
                """
                input[0] = KAIJU_KAIJU.out.results
                input[1] = UNTAR.out.untar.map{ it[1] }
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(file(process.out.txt[0][1]).name).match() }
            )
        }

    }

}
