nextflow_process {

    name "Test Process SYLPH_SKETCH"
    script "../main.nf"
    process "SYLPH_SKETCH"
    tag "modules"
    tag "modules_nfcore"
    tag "sylph"
    tag "sylph/sketch"

    test("sarscov2 illumina single-end [fastq_gz]") {
        when {
            process {
                """
                input[0] = [ [ id:'test', single_end:true ], // meta map
                             [ file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'], checkIfExists: true) ]
                           ]
                input[1] = file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true)
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("sarscov2 illumina paired-end [fastq_gz]") {
        when {
            process {
                """
                input[0] = [ [ id:'test', single_end:false ], // meta map
                             [ file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'], checkIfExists: true),
                               file(params.test_data['sarscov2']['illumina']['test_2_fastq_gz'], checkIfExists: true) ]
                           ]
                input[1] = file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true)
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("sarscov2 illumina paired-end [fastq_gz]-stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [ [ id:'test', single_end:false ], // meta map
                             [ file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'], checkIfExists: true),
                               file(params.test_data['sarscov2']['illumina']['test_2_fastq_gz'], checkIfExists: true) ]
                           ]
                input[1] = file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true)
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}
