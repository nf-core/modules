nextflow_process {

    name "Test Process NANOMONSV_PARSE"

    script "../main.nf"
    process "NANOMONSV_PARSE"

    tag "modules"
    tag "modules_nfcore"
    tag "nanomonsv"
    tag "nanomonsv/parse"

    test("nanomonsv - bam") {
        when {
            process {
                """
                input[0] = Channel.of(
                    [
                        [id:'control'],
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/nanopore/bam/test.sorted.bam', checkIfExists:true),
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/nanopore/bam/test.sorted.bam.bai', checkIfExists:true)
                    ]
                )
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("nanomonsv - bam -- stub") {
        options '-stub'
        when {
            process {
                """
                input[0] = Channel.of(
                    [
                        [id:'control'],
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/nanopore/bam/test.sorted.bam', checkIfExists:true),
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/nanopore/bam/test.sorted.bam.bai', checkIfExists:true)
                    ]
                )
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out,
                    path(process.out.versions[0]).yaml
                ).match() }
            )
        }
    }
}