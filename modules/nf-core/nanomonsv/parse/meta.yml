name: nanomonsv_parse
description: |
  Parse all the supporting reads of putative somatic SVs using nanomonsv.
  After successful completion, you will find supporting reads stratified by
  deletions, insertions, and rearrangements.
  A precursor to "nanomonsv get"
keywords:
  - structural variants
  - nanopore
  - cancer genome
  - somatic structural variations
  - mobile element insertions
  - long reads
tools:
  - nanomonsv:
      description: |
        nanomonsv is a software for detecting somatic structural variations
        from paired (tumor and matched control) cancer genome sequence data.
      homepage: https://github.com/friend1ws/nanomonsv
      documentation: https://github.com/friend1ws/nanomonsv#commands
      tool_dev_url: https://github.com/friend1ws/nanomonsv
      doi: "10.1101/2020.07.22.214262 "
      licence: ["GPL v3"]
      identifier: ""
input:
  - - meta:
        type: map
        description: |
          Groovy Map containing sample information
          e.g. [ id:'test', single_end:false ]
    - bam:
        type: file
        description: Aligned BAM file
        pattern: "*.{bam}"
        ontologies: []
    - bai:
        type: file
        description: BAM index file
        pattern: "*.{bai}"
        ontologies: []
output:
  insertions:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.insertion.sorted.bed.gz:
          type: file
          description: Gzipped BED file containing reads supporting insertions
          pattern: "*.{bed.gz}"
          ontologies: []
  insertions_index:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.insertion.sorted.bed.gz.tbi:
          type: file
          description: Index for gzipped BED file containing reads supporting insertions
          pattern: "*.{bed.gz.tbi}"
          ontologies: []
  deletions:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.deletion.sorted.bed.gz:
          type: file
          description: Gzipped BED file containing reads supporting deletions
          pattern: "*.{bed.gz}"
          ontologies: []
  deletions_index:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.deletion.sorted.bed.gz.tbi:
          type: file
          description: Index for gzipped BED file containing reads supporting deletions
          pattern: "*.{bed.gz.tbi}"
          ontologies: []
  rearrangements:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.rearrangement.sorted.bedpe.gz:
          type: file
          description: Gzipped BED file containing reads supporting rearrangements
          pattern: "*.{bed.gz}"
          ontologies: []
  rearrangements_index:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.rearrangement.sorted.bedpe.gz.tbi:
          type: file
          description: Index for gzipped BED file containing reads supporting rearrangements
          pattern: "*.{bed.gz.tbi}"
          ontologies: []
  bp_info:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.bp_info.sorted.bed.gz:
          type: file
          description: Gzipped BED file containing breakpoint info
          pattern: "*.{bed.gz}"
          ontologies: []
  bp_info_index:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.bp_info.sorted.bed.gz.tbi:
          type: file
          description: Index for gzipped BED file containing breakpoint info
          pattern: "*.{bed.gz.tbi}"
          ontologies: []
  versions:
    - versions.yml:
        type: file
        description: File containing software versions
        pattern: "versions.yml"
        ontologies:
          - edam: http://edamontology.org/format_3750 # YAML
authors:
  - "@awgymer"
maintainers:
  - "@awgymer"
