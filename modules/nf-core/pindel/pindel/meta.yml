name: "pindel_pindel"
description: Pindel can detect breakpoints of large deletions, medium sized insertions,
  inversions, tandem duplications and other structural variants at single-based resolution
  from next-gen sequence data
keywords:
  - deletions
  - insertions
  - tandem duplications
tools:
  - "pindel":
      description: "Pindel can detect breakpoints of large deletions, medium sized insertions,
        inversions, tandem duplications and other structural variants at single-based
        resolution from next-gen sequence data"
      homepage: "https://gmt.genome.wustl.edu/packages/pindel/"
      documentation: https://gmt.genome.wustl.edu/packages/pindel/user-manual.html
      licence: ["GPL v3"]
      identifier: biotools:pindel
input:
  - - meta:
        type: map
        description: |
          Groovy Map containing sample information, insert_size is either determined using Picard/CollectInsertSizeMetrics
          or a sensible default - setting ext.args2 to either in modules.conf
          e.g. [ id:'test', single_end:false, insert_size:500 ]
    - bam:
        type: file
        description: BAM file
        pattern: "*.bam"
        ontologies: []
    - bai:
        type: file
        description: BAM index file
        pattern: "*.bai"
        ontologies: []
  - fasta:
      type: file
      description: Input reference genome fasta file
      ontologies: []
  - fai:
      type: file
      description: Input reference genome fasta index file
      ontologies: []
  - bed:
      type: file
      description: BED file containing regions of interest
      ontologies: []
output:
  bp:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*_BP":
          type: file
          description: File containing breakpoints
          pattern: "*_{BP}"
          ontologies: []
  cem:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*_CloseEndMapped":
          type: file
          description: File containing close end reads
          pattern: "*_{CloseEndMapped}"
          ontologies: []
  del:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*_D":
          type: file
          description: File containing deletions
          pattern: "*_{D}"
          ontologies: []
  dd:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*_DD":
          type: file
          description: File containing dispersed duplications
          pattern: "*_{DD}"
          ontologies: []
  int_final:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*_INT_final":
          type: file
          description: int file
          pattern: "*_INT_final"
          ontologies: []
  inv:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*_INV":
          type: file
          description: File containing inversions
          pattern: "*_{INV}"
          ontologies: []
  li:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*_LI":
          type: file
          description: File containing long insertions
          pattern: "*_{LI}"
          ontologies: []
  rp:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*_RP":
          type: file
          description: File containing read-pair evidence
          pattern: "*_{RP}"
          ontologies: []
  si:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*_SI":
          type: file
          description: File containing short insertions
          pattern: "*_{SI}"
          ontologies: []
  td:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*_TD":
          type: file
          description: File containing tandem duplications
          pattern: "*_{TD}"
          ontologies: []
  versions:
    - versions.yml:
        type: file
        description: File containing software versions
        pattern: "versions.yml"
        ontologies:
          - edam: http://edamontology.org/format_3750 # YAML
authors:
  - "@marrip"
maintainers:
  - "@marrip"
