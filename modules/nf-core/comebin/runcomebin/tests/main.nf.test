nextflow_process {

    name "Test Process COMEBIN_RUNCOMEBIN"
    script "../main.nf"
    process "COMEBIN_RUNCOMEBIN"
    config "./nextflow.config"

    tag "modules"
    tag "modules_nfcore"
    tag "comebin"
    tag "comebin/runcomebin"

    test("mag contigs - bam") {

        setup {

            run("BOWTIE2_BUILD") {
                script "../../../bowtie2/build/main.nf"
                process {
                    """
                    input[0] = [
                        [id: "ref"],
                        file(
                            "https://raw.githubusercontent.com/nf-core/test-datasets/refs/heads/mag/assemblies/SPAdes-test_minigut_contigs.fasta.gz",
                            checkIfExists: true
                        )
                    ]
                    """
                }
            }

            run("BOWTIE2_ALIGN") {
                script "../../../bowtie2/align/main.nf"
                process {
                    """
                    input[0] = Channel.of([
                        [id: "test"],
                        [
                            file("https://raw.githubusercontent.com/nf-core/test-datasets/refs/heads/mag/test_data/test_minigut_R1.fastq.gz", checkIfExists: true),
                            file("https://raw.githubusercontent.com/nf-core/test-datasets/refs/heads/mag/test_data/test_minigut_R2.fastq.gz", checkIfExists: true)
                        ]
                    ])
                    input[1] = BOWTIE2_BUILD.out.index
                    input[2] = [
                        [id: "ref"],
                        file(
                            "https://raw.githubusercontent.com/nf-core/test-datasets/refs/heads/mag/assemblies/SPAdes-test_minigut_contigs.fasta.gz",
                            checkIfExists: true
                        )
                    ]
                    input[3] = false
                    input[4] = true
                    """
                }
            }
        }

        when {

            params {
                // test data is too small for default batch size
                // set to exact number of test contigs > 1kbp as suggested in GH issue
                comebin_args = "-b 148"
            }

            process {
                """
                input[0] = Channel.of([
                        [id: "ref"],
                        file(
                            "https://raw.githubusercontent.com/nf-core/test-datasets/refs/heads/mag/assemblies/SPAdes-test_minigut_contigs.fasta.gz",
                            checkIfExists: true
                        )
                    ]).combine(BOWTIE2_ALIGN.out.bam)
                    .map { ref_meta, asm, reads_meta, bam -> [reads_meta, asm, bam] }
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    // test("sarscov2 - bam - stub") {

    //     options "-stub"

    //     when {
    //         process {
    //             """
    //             // TODO nf-core: define inputs of the process here. Example:

    //             input[0] = [
    //                 [ id:'test', single_end:false ], // meta map
    //                 file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bam/test.paired_end.sorted.bam', checkIfExists: true),
    //             ]
    //             """
    //         }
    //     }

    //     then {
    //         assertAll(
    //             { assert process.success },
    //             { assert snapshot(process.out).match() }
    //             //TODO nf-core: Add all required assertions to verify the test output.
    //         )
    //     }

    // }

}
