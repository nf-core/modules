// nf-core modules test mcstaging/macsima2mc
nextflow_process {

    name "Test Process MCSTAGING_MACSIMA2MC"
    script "../main.nf"
    process "MCSTAGING_MACSIMA2MC"

    tag "modules"
    tag "modules_nfcore"
    tag "mcstaging"
    tag "mcstaging/macsima2mc"

    test("macsima2mc - input_dir") {

        when {
            process {
                """
                // Input files

                input_files = [
                    file(params.modules_testdata_base_path + 'imaging/staging/8_Cycle1/CYC-001_SCN-001_ST-B_R-01_W-C01_ROI-001_F-001_A-Laminin_C-_D-FITC_EXP-1200.tif', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'imaging/staging/8_Cycle1/CYC-001_SCN-001_ST-B_R-01_W-C01_ROI-001_F-001_A-Laminin_C-_D-FITC_EXP-150.tif', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'imaging/staging/8_Cycle1/CYC-001_SCN-001_ST-B_R-01_W-C01_ROI-001_F-001_D-DAPI_EXP-50.tif', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'imaging/staging/8_Cycle1/CYC-001_SCN-001_ST-B_R-01_W-C01_ROI-001_F-002_A-Laminin_C-_D-FITC_EXP-1200.tif', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'imaging/staging/8_Cycle1/CYC-001_SCN-001_ST-B_R-01_W-C01_ROI-001_F-002_A-Laminin_C-_D-FITC_EXP-150.tif', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'imaging/staging/8_Cycle1/CYC-001_SCN-001_ST-B_R-01_W-C01_ROI-001_F-002_D-DAPI_EXP-50.tif', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'imaging/staging/8_Cycle1/CYC-001_SCN-002_ST-S_R-01_W-C01_ROI-001_F-001_A-Laminin_C-_D-FITC_EXP-1200.tif', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'imaging/staging/8_Cycle1/CYC-001_SCN-002_ST-S_R-01_W-C01_ROI-001_F-001_A-Laminin_C-_D-FITC_EXP-150.tif', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'imaging/staging/8_Cycle1/CYC-001_SCN-002_ST-S_R-01_W-C01_ROI-001_F-001_D-DAPI_EXP-50.tif', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'imaging/staging/8_Cycle1/CYC-001_SCN-002_ST-S_R-01_W-C01_ROI-001_F-002_A-Laminin_C-_D-FITC_EXP-1200.tif', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'imaging/staging/8_Cycle1/CYC-001_SCN-002_ST-S_R-01_W-C01_ROI-001_F-002_A-Laminin_C-_D-FITC_EXP-150.tif', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'imaging/staging/8_Cycle1/CYC-001_SCN-002_ST-S_R-01_W-C01_ROI-001_F-002_D-DAPI_EXP-50.tif', checkIfExists: true)
                ]

                // input_dir = file(params.modules_testdata_base_path + 'imaging/staging/8_Cycle1', checkIfExists: true, type: 'dir')

                // Creates the input directory
                sh "mkdir 8_Cycle1"
                for (file in input_files) {
                    sh "mv \${f.name} 8_Cycle1/"
                }

                input[0] = [
                    [ id:'test' ], // meta map
                    [
                        file("8_Cycle1", checkIfExists: true, type: 'dir')
                    ]
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
                { assert snapshot(process.out.versions).match("versions") }
            )
        }

    }

    test("macsima2mc - input_dir - stub") {

        options "-stub"

        when {
            process {
                """
                // Input files

                input_files = [
                    file(params.modules_testdata_base_path + 'imaging/staging/8_Cycle1/CYC-001_SCN-001_ST-B_R-01_W-C01_ROI-001_F-001_A-Laminin_C-_D-FITC_EXP-1200.tif', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'imaging/staging/8_Cycle1/CYC-001_SCN-001_ST-B_R-01_W-C01_ROI-001_F-001_A-Laminin_C-_D-FITC_EXP-150.tif', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'imaging/staging/8_Cycle1/CYC-001_SCN-001_ST-B_R-01_W-C01_ROI-001_F-001_D-DAPI_EXP-50.tif', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'imaging/staging/8_Cycle1/CYC-001_SCN-001_ST-B_R-01_W-C01_ROI-001_F-002_A-Laminin_C-_D-FITC_EXP-1200.tif', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'imaging/staging/8_Cycle1/CYC-001_SCN-001_ST-B_R-01_W-C01_ROI-001_F-002_A-Laminin_C-_D-FITC_EXP-150.tif', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'imaging/staging/8_Cycle1/CYC-001_SCN-001_ST-B_R-01_W-C01_ROI-001_F-002_D-DAPI_EXP-50.tif', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'imaging/staging/8_Cycle1/CYC-001_SCN-002_ST-S_R-01_W-C01_ROI-001_F-001_A-Laminin_C-_D-FITC_EXP-1200.tif', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'imaging/staging/8_Cycle1/CYC-001_SCN-002_ST-S_R-01_W-C01_ROI-001_F-001_A-Laminin_C-_D-FITC_EXP-150.tif', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'imaging/staging/8_Cycle1/CYC-001_SCN-002_ST-S_R-01_W-C01_ROI-001_F-001_D-DAPI_EXP-50.tif', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'imaging/staging/8_Cycle1/CYC-001_SCN-002_ST-S_R-01_W-C01_ROI-001_F-002_A-Laminin_C-_D-FITC_EXP-1200.tif', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'imaging/staging/8_Cycle1/CYC-001_SCN-002_ST-S_R-01_W-C01_ROI-001_F-002_A-Laminin_C-_D-FITC_EXP-150.tif', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'imaging/staging/8_Cycle1/CYC-001_SCN-002_ST-S_R-01_W-C01_ROI-001_F-002_D-DAPI_EXP-50.tif', checkIfExists: true)
                ]

                // input_dir = file(params.modules_testdata_base_path + 'imaging/staging/8_Cycle1', checkIfExists: true, type: 'dir')

                // Creates the input directory
                sh "mkdir 8_Cycle1"
                for (file in input_files) {
                    sh "mv \${f.name} 8_Cycle1/"
                }

                input[0] = [
                    [ id:'test' ], // meta map
                    [
                        file("8_Cycle1", checkIfExists: true, type: 'dir')
                    ]
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
                { assert snapshot(process.out.versions).match("versions") }
            )
        }

    }

}
