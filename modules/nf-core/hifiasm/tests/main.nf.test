nextflow_process {

    name "Test Process HifiAsm"
    script "../main.nf"
    process "HIFIASM"
    config "./nextflow.config"

    tag "modules"
    tag "modules_nfcore"
    tag "hifiasm"

    test("homo_sapiens pacbio hifi [fastq, [,], [,], [,]]") {
        when {
            process {
                """
                input[0] = [
                    [ id : 'test'],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/pacbio/fastq/test_hifi.fastq.gz', checkIfExists: true),
                    []
                ]
                input[1] = [
                    [],
                    [],
                    []
                ]
                input[2] = [
                    [],
                    [],
                    []
                ]
                input[3] = [
                    [],
                    []
                ]
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert file(process.out.corrected_reads.get(0).get(1)).exists() },
                { assert file(process.out.source_overlaps.get(0).get(1)).exists() },
                { assert file(process.out.reverse_overlaps.get(0).get(1)).exists() },
                { assert file(process.out.log.get(0).get(1)).exists() },
                { assert snapshot(
                    process.out.raw_unitigs,
                    process.out.processed_unitigs,
                    process.out.primary_contigs,
                    process.out.hap1_contigs,
                    process.out.hap2_contigs,
                    process.out.versions
                ).match() }
            )
        }
    }

    test("homo_sapiens pacbio hifi [fastq, [,], [,], [bin] ]") {

        setup {
            run("HIFIASM", alias: "HIFIASM_INITIAL") {
                script "../main.nf"
                process {
                    """
                    input[0] = [
                        [ id : 'test'],
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/pacbio/fastq/test_hifi.fastq.gz', checkIfExists: true),
                        []
                    ]
                    input[1] = [
                        [],
                        [],
                        []
                    ]
                    input[2] = [
                        [],
                        [],
                        []
                    ]
                    input[3] = [
                        [],
                        []
                    ]
                    """
                }
            }
        }

        when {
            process {
                """
                input[0] = [
                    [ id : 'test'],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/pacbio/fastq/test_hifi.fastq.gz', checkIfExists: true),
                    []
                ]
                input[1] = [
                    [],
                    [],
                    []
                ]
                input[2] = [
                    [],
                    [],
                    []
                ]
                input[3] = HIFIASM_INITIAL.out.corrected_reads
                    .mix(HIFIASM_INITIAL.out.source_overlaps)
                    .mix(HIFIASM_INITIAL.out.reverse_overlaps)
                    .groupTuple(by: 0)
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert file(process.out.log.get(0).get(1)).exists() },
                { assert file(process.out.log.get(0).get(1)).readLines().first().contains("Reads has been loaded.") },
                { assert snapshot(
                    process.out.raw_unitigs,
                    process.out.processed_unitigs,
                    process.out.primary_contigs,
                    process.out.hap1_contigs,
                    process.out.hap2_contigs,
                    process.out.versions
                ).match() }
            )
        }
    }

    test("homo_sapiens pacbio hifi [fastq x2, [,], [,], [,] ]") {

        when {
            process {
                """
                input[0] = Channel.of([
                    [ id : 'test'],
                    [
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/pacbio/fastq/test_hifi.fastq.gz', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/pacbio/fastq/alz.ccs.fastq', checkIfExists: true),
                    ],
                    []
                ])
                input[1] = [
                    [],
                    [],
                    []
                ]
                input[2] = [
                    [],
                    [],
                    []
                ]
                input[3] = [
                    [],
                    []
                ]
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert file(process.out.corrected_reads.get(0).get(1)).exists() },
                { assert file(process.out.source_overlaps.get(0).get(1)).exists() },
                { assert file(process.out.reverse_overlaps.get(0).get(1)).exists() },
                { assert file(process.out.log.get(0).get(1)).exists() },
                { assert snapshot(
                    process.out.raw_unitigs,
                    process.out.processed_unitigs,
                    process.out.primary_contigs,
                    process.out.hap1_contigs,
                    process.out.hap2_contigs,
                    process.out.versions
                ).match() }
            )
        }
    }

    test("homo_sapiens pacbio hifi [fastq, [yak, yak], [,], [,] ]") {
        when {
            process {
                """
                input[0] = [
                    [ id : 'test'],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/pacbio/fastq/test_hifi.fastq.gz', checkIfExists: true),
                    []
                ]
                input[1] = [
                    [ id : 'test' ],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/yak/test.yak', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/yak/test2.yak', checkIfExists: true)
                ]
                input[2] = [
                    [ id : 'test' ],
                    [],
                    []
                ]
                input[3] = [
                    [],
                    []
                ]
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert file(process.out.corrected_reads.get(0).get(1)).exists() },
                { assert file(process.out.source_overlaps.get(0).get(1)).exists() },
                { assert file(process.out.reverse_overlaps.get(0).get(1)).exists() },
                { assert file(process.out.hap1_contigs.get(0).get(1)).name == "test.dip.hap1.p_ctg.gfa" },
                { assert file(process.out.hap2_contigs.get(0).get(1)).name == "test.dip.hap2.p_ctg.gfa" },
                { assert file(process.out.log.get(0).get(1)).exists() },
                { assert snapshot(
                    process.out.raw_unitigs,
                    process.out.processed_unitigs,
                    process.out.hap1_contigs,
                    process.out.hap2_contigs,
                    process.out.versions
                ).match() }
            )
        }
    }

    test("homo_sapiens pacbio hifi [fastq, [,], [fastq, fastq], [,] ]") {
        when {
            process {
                """
                input[0] = [
                    [ id : 'test'],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/pacbio/fastq/test_hifi.fastq.gz', checkIfExists: true),
                    []
                ]
                input[1] = [
                    [ id : 'test' ],
                    [],
                    []
                ]
                input[2] = [
                    [ id : 'test' ],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/fastq/test_1.fastq.gz', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/fastq/test_2.fastq.gz', checkIfExists: true)
                ]
                input[3] = [
                    [],
                    []
                ]
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert file(process.out.corrected_reads.get(0).get(1)).exists() },
                { assert file(process.out.source_overlaps.get(0).get(1)).exists() },
                { assert file(process.out.reverse_overlaps.get(0).get(1)).exists() },
                { assert file(process.out.hap1_contigs.get(0).get(1)).name == "test.hic.hap1.p_ctg.gfa" },
                { assert file(process.out.hap2_contigs.get(0).get(1)).name == "test.hic.hap2.p_ctg.gfa" },
                { assert file(process.out.log.get(0).get(1)).exists() },
                { assert snapshot(
                    process.out.raw_unitigs,
                    process.out.processed_unitigs,
                    process.out.primary_contigs,
                    process.out.alternate_contigs,
                    process.out.hap1_contigs,
                    process.out.hap2_contigs,
                    process.out.versions
                ).match() }
            )
        }
    }

    test("homo_sapiens pacbio hifi [fastq, [yak, yak], [fastq, fastq], [,] ]") {
        when {
                """
                input[0] = [
                    [ id : 'test'],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/pacbio/fastq/test_hifi.fastq.gz', checkIfExists: true),
                    []
                ]
                input[1] = [
                    [ id : 'test' ],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/yak/test.yak', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/yak/test2.yak', checkIfExists: true)
                ]
                input[2] = [
                    [ id : 'test' ],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/fastq/test_1.fastq.gz, checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/fastq/test_2.fastq.gz, checkIfExists: true)
                ]
                input[3] = [
                    [],
                    []
                ]
                """
        }
        then {
            assertAll(
                { assert !process.success}
            )
        }
    }

    test("homo_sapiens pacbio hifi [fastq, [yak, ], [,], [,] ]") {
        when {
                """
                input[0] = [
                    [ id : 'test'],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/pacbio/fastq/test_hifi.fastq.gz', checkIfExists: true),
                    []
                ]
                input[1] = [
                    [ id : 'test'],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/yak/test.yak', checkIfExists: true),
                    []
                ]
                input[2] = []
                input[3] = [
                    [],
                    []
                ]
                """
        }
        then {
            assertAll(
                { assert !process.success}
            )
        }
    }

    test("homo_sapiens pacbio hifi [fastq, [,], [, fastq], [,] ]") {
        when {
                """
                input[0] = [
                    [ id : 'test'],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/pacbio/fastq/test_hifi.fastq.gz', checkIfExists: true),
                    []
                ]
                input[1] = []
                input[2] = [
                    [ id : 'test'],
                    [],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/fastq/test_2.fastq.gz', checkIfExists: true)
                ]
                input[3] = [
                    [],
                    []
                ]
                """
        }
        then {
            assertAll(
                { assert !process.success}
            )
        }
    }

    test("homo_sapiens pacbio hifi [fastq, [,], [,], [,] ] - stub") {
        options "-stub"
        when {
            process {
                """
                input[0] = [
                    [ id : 'test'],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/pacbio/fastq/test_hifi.fastq.gz', checkIfExists: true),
                    []
                ]
                input[1] = [
                    [],
                    [],
                    []
                ]
                input[2] = [
                    [],
                    [],
                    []
                ]
                input[3] = [
                    [],
                    []
                ]
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match()}
            )
        }
    }
}