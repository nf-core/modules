
nextflow_process {

    name "Test Process MSISENSOR2_SCAN"
    script "../main.nf"
    process "MSISENSOR2_SCAN"

    tag "modules"
    tag "modules_nfcore"
    tag "msisensor2"
    tag "msisensor2/scan"

    test("fasta") {

        when {
            process {
                """
                input[0] = [[id: 'test'],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome2.fasta', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assert process.success
            assertAll(
                { assert snapshot(
                    process.out.scan,
                    process.out.versions,
                    path(process.out.versions[0]).yaml
                ).match() }
            )
        }
    }

    test("multiple fasta") {

        when {
            process {
                """
                input[0] = [ [id: 'test'], [
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome2.fasta', checkIfExists: true)
                ]]
                """
            }
        }

        then {
            assert process.success
            assertAll(
                { assert snapshot(
                    process.out.scan,
                    process.out.versions,
                    path(process.out.versions[0]).yaml
                ).match() }
            )
        }
    }

    test("fasta - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [[id: 'test'],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome2.fasta', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assert process.success
            assertAll(
                { assert snapshot(
                    process.out.scan,
                    process.out.versions,
                    path(process.out.versions[0]).yaml
                ).match() }
            )
        }
    }

    test("multiple fasta - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [ [id: 'test'], [
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome2.fasta', checkIfExists: true)
                ]]
                """
            }
        }

        then {
            assert process.success
            assertAll(
                { assert snapshot(
                    process.out.scan,
                    process.out.versions,
                    path(process.out.versions[0]).yaml
                ).match() }
            )
        }
    }
}
