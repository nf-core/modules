nextflow_process {

    name "Test Process DOUBLETDETECTION"
    script "../main.nf"
    process "DOUBLETDETECTION"

    tag "modules"
    tag "modules_nfcore"
    tag "doubletdetection"

    test("scdownsteam - h5ad") {
        when {
            process {
                """                
                input[0] = [
                     [id: 'test'],
                     file("https://raw.githubusercontent.com/nf-core/test-datasets/scdownstream/samples/SAMN14430799_custom_emptydrops_filter_matrix.h5ad", checkIfExists: true)
                ]
                """
            }
        }

        then {
            def mb = 1024 * 1024 
            def kb = 1024
            assertAll(
                { assert process.success },

                // Only check if output exists, as phenotype supports no random seeding:
                // https://github.com/jacoblevine/PhenoGraph/issues/16
                { assert path(process.out.h5ad.get(0).get(1)).exists() },
                { assert path(process.out.predictions.get(0).get(1)).exists() },

                { assert path(process.out.h5ad.get(0).get(1)).size() > 30 * mb },
                { assert path(process.out.predictions.get(0).get(1)).size() > 50 * kb },

                { assert snapshot(process.out.versions).match("versions") }
            )
        }

    }

    test("scdownstream - h5ad - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                     [id: 'test'],
                     file("https://raw.githubusercontent.com/nf-core/test-datasets/scdownstream/samples/SAMN14430799_custom_emptydrops_filter_matrix.h5ad", checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
