nextflow_process {

    name "Test Process GT_SUFFIXERATOR"
    script "../main.nf"
    process "GT_SUFFIXERATOR"

    tag "modules"
    tag "modules_nfcore"
    tag "gt"
    tag "gt/suffixerator"

    test("homo_sapiens-genome_fasta-success") {

        config "./nextflow.config"

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta', checkIfExists: true)
                    ]
                input[1] = 'dna'
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("sarscov2-proteome_fasta-success") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/proteome.fasta', checkIfExists: true)
                    ]
                input[1] = 'protein'
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("stub-dna") {

        options '-stub'

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta', checkIfExists: true)
                    ]
                input[1] = 'dna'
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("stub-protein") {

        options '-stub'

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta', checkIfExists: true)
                    ]
                input[1] = 'protein'
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("wrong-mode-fail") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta', checkIfExists: true)
                    ]
                input[1] = 'xyz'
                """
            }
        }

        then {
            assertAll(
                { assert !process.success },
                { assert process.stdout.toString().contains("Mode must be one of 'dna', or 'protein'") }
            )
        }

    }

    test("wrong-mode-fail-stub") {

        options '-stub'

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta', checkIfExists: true)
                    ]
                input[1] = 'xyz'
                """
            }
        }

        then {
            assertAll(
                { assert !process.success },
                { assert process.stdout.toString().contains("Mode must be one of 'dna', or 'protein'") }
            )
        }

    }

}
