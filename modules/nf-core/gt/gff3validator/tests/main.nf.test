nextflow_process {

    name "Test Process GT_GFF3VALIDATOR"
    script "../main.nf"
    process "GT_GFF3VALIDATOR"

    tag "modules"
    tag "modules_nfcore"
    tag "gt"
    tag "gt/gff3validator"
    tag "gt/gff3"

    test("sarscov2-gff3-valid") {

        config './nextflow.config'

        setup {
            run("GT_GFF3") {
                script "../../../../nf-core/gt/gff3"

                process {
                    """
                    input[0] = [
                        [ id:'test' ],
                        file(params.test_data['sarscov2']['genome']['genome_gff3'], checkIfExists: true)
                    ]
                    """
                }
            }
        }

        when {
            process {
                """
                input[0] = GT_GFF3.out.gt_gff3
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() },
                { assert path(process.out.success_log[0][1]).text.contains("input is valid GFF3") },
                { assert process.out.error_log == [] }
            )
        }

    }

    test("sarscov2-gff3-stub") {

        options '-stub'

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ],
                    file(params.test_data['sarscov2']['genome']['genome_gff3'], checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("sarscov2-gff3-invalid") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.test_data['homo_sapiens']['genome']['genome_gff3'], checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() },
                { assert process.out.success_log == [] },
                { assert path(process.out.error_log[0][1]).text.contains("gt gff3validator: error:") }
            )
        }

    }
}
