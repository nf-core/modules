nextflow_process {

    name "Test Process RHOCALL_VIZ"
    script "../main.nf"
    process "RHOCALL_VIZ"

    tag "modules"
    tag "modules_nfcore"
    tag "rhocall"
    tag "rhocall/viz"
    tag "bcftools/roh"

    config "./nextflow.config"

    test("sarscov2 - vcf, roh") {


        setup {
            run("BCFTOOLS_ROH") {
                script "../../../bcftools/roh/main.nf"
                process {
                    """
                    input[0] = [ [ id:'test' ], // meta map
                                file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/vcf/test.vcf.gz', checkIfExists: true),
                                file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/vcf/test.vcf.gz.tbi', checkIfExists: true)]

                    input[1] = [[],[]]
                    input[2] = []
                    input[3] = []
                    input[4] = []
                    input[5] = []
                    """
                }
            }
        }
        when {
            process {
                """
                input[0] = [ [ id:'test' ], // meta map
                            file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/vcf/test.vcf', checkIfExists: true)]
                input[1] = BCFTOOLS_ROH.out.roh
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }
}
