
nextflow_process {

    name "Test Process BLAT"
    script "../main.nf"
    process "BLAT"
    config "./nextflow.config"

    tag "modules"
    tag "modules_nfcore"
    tag "blat"
    tag "seqtk/seq"

    setup {
        run("SEQTK_SEQ") {
            script "../../seqtk/seq/main.nf"
            process {
                """
                input[0] = [
				    [ id:'test', single_end:false ], // meta map
				    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true)
				]

                """
            }
        }
    }

    test("test-blat") {

        when {
            process {
                """
                input[0] = SEQTK_SEQ.out.fastx
				input[1] = [
				    [ id:'sarscov2' ],
				    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)
				]

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("test-blat-stub") {
        options '-stub'
        when {
            process {
                """
                input[0] = SEQTK_SEQ.out.fastx
				input[1] = [
				    [ id:'sarscov2' ],
				    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)
				]

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

}
