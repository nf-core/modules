nextflow_process {

    name "Test Process FORCE_CUBE"
    script "../main.nf"
    config "./nextflow.config"
    process "FORCE_CUBE"

    tag "modules"
    tag "modules_nfcore"
    tag "force"
    tag "force/cube"

    test("force-cube - gpkg") {

        when {
            params {
                outdir = "$outputDir"
            }

            process {
                """
                input[0] = file(params.modules_testdata_base_path + "earth_sciences/vector/gpkg/crete.gpkg")
                input[1] = file(params.modules_testdata_base_path + "earth_sciences/datacubes/datacube-definition.prj")
                input[2] = []
                input[3] = []
                input[4] = []
                """
            }
        }

        then {
            def stable_name = getAllFilesFromDir(outputDir, relative:true, includeDir: true)
            assertAll(
                { assert process.success },
                { assert snapshot(stable_name,
                    process.out.versions).match() }
            )
        }

    }

    test("force-cube - shp") {

        config "./nextflow.shp.config"

        when {
            params {
                outdir = "$outputDir"
            }

            process {
                """
                input[0] = file(params.modules_testdata_base_path + "/earth_sciences/vector/shp/denmark.shp")
                input[1] = file(params.modules_testdata_base_path + "/earth_sciences/datacubes/datacube-definition.prj")
                input[2] = file(params.modules_testdata_base_path + "/earth_sciences/vector/shp/denmark.dbf")
                input[3] = file(params.modules_testdata_base_path + "/earth_sciences/vector/shp/denmark.prj")
                input[4] = file(params.modules_testdata_base_path + "/earth_sciences/vector/shp/denmark.shx")
                """
            }
        }

        then {
            def stable_name = getAllFilesFromDir(outputDir, relative:true, includeDir: true)
            assertAll(
                { assert process.success },
                { assert snapshot(stable_name,
                    process.out.versions).match() }
            )
        }

    }

    test("force-cube - gpkg - stub") {

        options "-stub"

        when {
            params {
                outdir = "$outputDir"
            }

            process {
                """
                input[0] = file(params.modules_testdata_base_path + "earth_sciences/vector/gpkg/crete.gpkg")
                input[1] = file(params.modules_testdata_base_path + "earth_sciences/datacubes/datacube-definition.prj")
                input[2] = []
                input[3] = []
                input[4] = []
                """
            }
        }

        then {
            def stable_name = getAllFilesFromDir(outputDir, relative:true, includeDir: true)
            assertAll(
                { assert process.success },
                { assert snapshot(stable_name,
                    process.out.versions).match() }
            )
        }

    }

}