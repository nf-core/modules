name: prodigal
description: Prodigal (Prokaryotic Dynamic Programming Genefinding Algorithm) is a
  microbial (bacterial and archaeal) gene finding program
keywords:
  - prokaryotes
  - gene finding
  - microbial
tools:
  - prodigal:
      description: Prodigal (Prokaryotic Dynamic Programming Genefinding Algorithm)
        is a microbial (bacterial and archaeal) gene finding program
      homepage: https://github.com/hyattpd/Prodigal
      documentation: https://github.com/hyattpd/prodigal/wiki
      tool_dev_url: https://github.com/hyattpd/Prodigal
      doi: "10.1186/1471-2105-11-119"
      licence: ["GPL v3"]
      identifier: biotools:prodigal
input:
  - - meta:
        type: map
        description: |
          Groovy Map containing sample information
          e.g. [ id:'test', single_end:false ]
    - genome:
        type: file
        description: fasta/fasta.gz file
  - - output_format:
        type: string
        description: Output format ("gbk"/"gff"/"sqn"/"sco")
output:
  - gene_annotations:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.${output_format}.gz:
          type: file
          description: gene annotations in output_format given as input
          pattern: "*.{output_format}"
  - nucleotide_fasta:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.fna.gz:
          type: file
          description: nucleotide sequences file
          pattern: "*.{fna}"
  - amino_acid_fasta:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.faa.gz:
          type: file
          description: protein translations file
          pattern: "*.{faa}"
  - all_gene_annotations:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}_all.txt.gz:
          type: file
          description: complete starts file
          pattern: "*.{_all.txt}"
  - versions:
      - versions.yml:
          type: file
          description: File containing software versions
          pattern: "versions.yml"
authors:
  - "@grst"
maintainers:
  - "@grst"
