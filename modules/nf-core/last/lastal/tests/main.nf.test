nextflow_process {

    name "Test Process LAST_LASTAL"
    script "../main.nf"
    process "LAST_LASTAL"
    config "./nextflow.config"

    tag "modules"
    tag "modules_nfcore"
    tag "last"
    tag "last/lastal"
    tag "untar"

    test("sarscov2 - contigs - genome") {

        setup {
            run("UNTAR") {
                script "../../../untar/main.nf"
                process {
                """
                input[0] = [
                    [id:'genome'], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/alignment/last/lastdb.tar.gz', checkIfExists: true)
                ]
                """
                }
            }
        }

        when {
            process {
                """
                input[0] = [
                    [ id:'contigs', single_end:false ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fasta/contigs.fasta', checkIfExists: true),
                    []
                ]
                input[1] = UNTAR.out.untar.map{ it[1] }
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("sarscov2 - contigs - genome - withparams") {

        setup {
            run("UNTAR") {
                script "../../../untar/main.nf"
                process {
                """
                input[0] = [
                    [id:'genome'], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/alignment/last/lastdb.tar.gz', checkIfExists: true)
                ]
                """
                }
            }
        }

        when {
            process {
                """
                input[0] = [
                    [ id:'contigs', single_end:false ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fasta/contigs.fasta', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/alignment/last/contigs.genome.par', checkIfExists: true)
                ]
                input[1] = UNTAR.out.untar.map{ it[1] }
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("sarscov2 - contigs - genome - stub") {

        options "-stub"

        setup {
            run("UNTAR") {
                script "../../../untar/main.nf"
                process {
                """
                input[0] = [
                    [id:'genome'], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/alignment/last/lastdb.tar.gz', checkIfExists: true)
                ]
                """
                }
            }
        }

        when {
            process {
                """
                input[0] = [
                    [ id:'contigs', single_end:false ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fasta/contigs.fasta', checkIfExists: true),
                    []
                ]
                input[1] = UNTAR.out.untar.map{ it[1] }
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
