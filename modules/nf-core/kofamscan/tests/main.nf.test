nextflow_process {

    name "Test Process KOFAMSCAN"
    config "./nextflow.config"
    script "../main.nf"
    process "KOFAMSCAN"

    tag "modules"
    tag "modules_nfcore"
    tag "untar"
    tag "gunzip"
    tag "kofamscan"

    test("test_kofamscan_txt") {

        setup {
            run("UNTAR") {
                script "../../untar/main.nf"

                process {
                    """
                    input[0] = [[],file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/db/kofamscan/profiles.tar.gz',checkIfExists:true)]
                    """
                }
            }

            run("GUNZIP") {
                script "../../gunzip/main.nf"

                process {
                    """
                    input[0] = [[],file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/db/kofamscan/ko_list.gz',checkIfExists:true)]
                    """
                }
            }
        }
        when {
            params {
                module_args = ''
            }
            process {
                """
                input[0] = [[id:'test'], file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/proteome.fasta',checkIfExists: true)]
                input[1] = UNTAR.out.untar.map{it[1]}
                input[2] = GUNZIP.out.gunzip.map{it[1]}
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
    test("test_kofamscan_tsv") {

        setup {
            run("UNTAR") {
                script "../../untar/main.nf"

                process {
                    """
                    input[0] = [[],file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/db/kofamscan/profiles.tar.gz',checkIfExists:true)]
                    """
                }
            }

            run("GUNZIP") {
                script "../../gunzip/main.nf"

                process {
                    """
                    input[0] = [[],file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/db/kofamscan/ko_list.gz',checkIfExists:true)]
                    """
                }
            }
        }
        when {
            params {
                module_args = '--format detail-tsv'
            }
            process {
                """
                input[0] = [[id:'test'], file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/proteome.fasta',checkIfExists: true)]
                input[1] = UNTAR.out.untar.map{it[1]}
                input[2] = GUNZIP.out.gunzip.map{it[1]}
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}