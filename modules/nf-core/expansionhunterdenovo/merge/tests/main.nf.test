nextflow_process {

    name "Test Process EXPANSIONHUNTERDENOVO_MERGE"
    script "../main.nf"
    process "EXPANSIONHUNTERDENOVO_MERGE"
   
    tag "modules"
    tag "modules_nfcore"
    tag "expansionhunterdenovo"
    tag "expansionhunterdenovo/merge"
    tag "expansionhunterdenovo/profile"
   
    test("homo_sapiens - tsv - fasta - fai") {
        setup {
            run("EXPANSIONHUNTERDENOVO_PROFILE") {
                script "../../profile/main.nf"
                
                process {
                    """
                    input[0] = Channel.of([
                        [id:'test', type:"case"],// meta map
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/bam/test.paired_end.sorted.bam',checkIfExists:true),
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/bam/test.paired_end.sorted.bam.bai',checkIfExists:true)
                        ],
                        [
                        [id:'test2', type:"control"],// meta map
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/bam/test2.paired_end.sorted.bam',checkIfExists:true),
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/bam/test2.paired_end.sorted.bam.bai',checkIfExists:true)
                    ])
                    input[1] = [[id:'fasta'],file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta',checkIfExists:true)]
                    input[2] = [[id:'fasta_fai'],file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta.fai',checkIfExists:true)]
                    """
                }
            }
        }
        when {
            process {
                """
                input[0] = EXPANSIONHUNTERDENOVO_PROFILE.out.str_profile
                    .collectFile(name:"manifest.tsv",newLine:true){
                        meta, profile->
                        ["manifest.tsv","\${meta.id}\t\${meta.type}\t\${profile}"]
                    }
                    .map({manifest->[[id:"merge"],manifest]})
                input[1] = [[id:'fasta'],file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta',checkIfExists:true)]
                input[2] = [[id:'fasta_fai'],file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta.fai',checkIfExists:true)]
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("homo_sapiens - [] - fasta - fai - stub") {

        options '-stub'

        when {
            process {
                """
                input[0] = [[id: "test"], []]
                input[1] = [[id:'fasta'],file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta',checkIfExists:true)]
                input[2] = [[id:'fasta_fai'],file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta.fai',checkIfExists:true)]
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out,
                    path(process.out.versions[0]).yaml
                ).match() }
            )
        }
    }
}