nextflow_process {

    name "Test Process NARFMAP_ALIGN"
    script "../main.nf"
    process "NARFMAP_ALIGN"
    tag "modules"
    tag "modules_nfcore"
    tag "narfmap"
    tag "narfmap/align"
    tag "bug"

    test("This should segfault") {

        setup {
            run("NARFMAP_HASHTABLE") {
                script "../../hashtable/main.nf"
                process {
                    """
                    input[0] = [
                        [id:'test'],
                        file('https://raw.githubusercontent.com/nf-core/test-datasets/nascent/reference/GRCh38_chr21.fa', checkIfExists: true)
                    ]
                    """
                }
            }
        }

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:true ], // meta map
                    file('https://raw.githubusercontent.com/nf-core/test-datasets/nascent/testdata/SRX882903_T2.fastq.gz', checkIfExists: true)
                ]
                input[1] = NARFMAP_HASHTABLE.out.hashmap
                input[2] = false //sort
                """
            }
        }

        then {
            assertAll (
                { assert process.success },
                { assert snapshot(
                    file(process.out.bam[0][1]).name,
                    file(process.out.log[0][1]).readLines().findAll { it.startsWith("decompHash") },
                    file(process.out.versions[0]).name
                ).match() }
            )
        }

    }

}
