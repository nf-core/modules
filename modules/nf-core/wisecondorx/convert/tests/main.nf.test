nextflow_process {

    name "Test Process WISECONDORX_CONVERT"
    script "../main.nf"
    process "WISECONDORX_CONVERT"

    tag "modules"
    tag "modules_nfcore"
    tag "wisecondorx"
    tag "wisecondorx/convert"

    test("sarscov2 - bam, bai, [], []") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bam/test.single_end.sorted.bam', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bam/test.single_end.sorted.bam.bai', checkIfExists: true)
                ]
                input[1] = [[], []]
                input[2] = [[], []]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    file(process.out.npz[0][1]).name,
                    process.out.versions
                    ).match()
                }
            )
        }

    }

    test("sarscov2 - cram, crai, fasta, fai") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/cram/test.paired_end.sorted.cram', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/cram/test.paired_end.sorted.cram.crai', checkIfExists: true)
                ]

                input[1] = [
                    [ id:'test' ],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta', checkIfExists: true)
                ]

                input[2] = [
                    [ id:'test' ],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta.fai', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    file(process.out.npz[0][1]).name,
                    process.out.versions
                    ).match()
                }
            )
        }

    }

    test("sarscov2 - bam, bai - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bam/test.single_end.sorted.bam', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bam/test.single_end.sorted.bam.bai', checkIfExists: true)
                ]
                input[1] = [[], []]
                input[2] = [[], []]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    file(process.out.npz[0][1]).name,
                    process.out.versions
                    ).match()
                }
            )
        }

    }

}
