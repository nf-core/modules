nextflow_process {

    name "Test Process WISECONDORX_GENDER"
    script "../main.nf"
    process "WISECONDORX_GENDER"

    tag "modules"
    tag "modules_nfcore"
    tag "wisecondorx"
    tag "wisecondorx/gender"
    tag "wisecondorx/convert"

    test("sarscov2 - bam, bai, reference") {

        options "-stub"
        // Stub tests because the reference needs to be made of 30 full CRAMs, which gets too big

        setup {
            run("WISECONDORX_CONVERT") {
                script "../../convert/main.nf"
                process {
                    """
                    input[0] = Channel.of([
                        [ id:'test', single_end:false ], // meta map
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bam/test.single_end.sorted.bam', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bam/test.single_end.sorted.bam.bai', checkIfExists: true)
                    ])
                    input[1] = [[], []]
                    input[2] = [[], []]
                    """
                }
            }
        }

        when {
            process {
                """
                input[0] = WISECONDORX_CONVERT.out.npz
                input[1] = [
                    [ id: "reference" ],
                    file("reference.npz")
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
