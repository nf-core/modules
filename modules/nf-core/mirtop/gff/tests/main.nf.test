nextflow_process {

    name "Test Process MIRTOP_GFF"
    script "../main.nf"
    process "MIRTOP_GFF"

    tag "modules"
    tag "modules_nfcore"
    tag "mirtop"
    tag "mirtop_gff"

    test("isomir - bam") {

        when {
            process {
                """
                input[0] = [
                    [ id:'sample_sim_isomir_bam'], // meta map
                    file("https://github.com/nf-core/test-datasets/raw/modules/data/delete_me/mirtop/sim_isomir_sort.bam", checkIfExists: true),
                ]
                input[1] = [
                    [ id:'hairpin'], // meta map
                    file("https://github.com/nf-core/test-datasets/raw/modules/data/delete_me/mirtop/hairpin_mirtop.fa", checkIfExists: true),
                ]
                input[2] = [
                    [ id:'hsa' ], // meta map
                    file("https://github.com/nf-core/test-datasets/raw/modules/data/delete_me/mirtop/hsa.gff3", checkIfExists: true),
                "hsa"]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },

                { assert snapshot(
                    process.out.bam,
                    file(process.out.sample_gff[0][1]).readLines().findAll { it.contains("hsa-let-7a-2	miRBasev21	isomiR	3	25	0	+	.	Read TTGAGGTAGTAGGTTGTATAGTT; UID iso-23-Z0S31NSL0E; Name hsa-let-7a-5p;Parent hsa-let-7a-2; Variant iso_5p:-1; Cigar 23M;Expression 0; Filter Pass; Hits 1;") },
                    file(process.out.mirtop_gff[0][1]).readLines().findAll { it.contains("hsa-let-7a-1	miRBasev21	isomiR	3	26	0	+	.	Read GATGAGGTAGTAGGTTGTATAGTA; UID iso-24-5URPV39QFB; Name hsa-let-7a-5p; Parent hsa-let-7a-1; Variant iso_add3p:1,iso_5p:-2; Cigar 23MA; Expression 0; Filter Pass; Hits 1") },
                    process.out.versions,
                        ).match()
                        }
                )
        }

    }

    test("isomir - bam - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'sample_sim_isomir_bam'], // meta map
                    file("https://github.com/nf-core/test-datasets/raw/modules/data/delete_me/mirtop/sim_isomir_sort.bam", checkIfExists: true),
                ]
                input[1] = [
                    [ id:'hairpin'], // meta map
                    file("https://github.com/nf-core/test-datasets/raw/modules/data/delete_me/mirtop/hairpin_mirtop.fa", checkIfExists: true),
                ]
                input[2] = [
                    [ id:'hsa' ], // meta map
                    file("https://github.com/nf-core/test-datasets/raw/modules/data/delete_me/mirtop/hsa.gff3", checkIfExists: true),
                "hsa"]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
