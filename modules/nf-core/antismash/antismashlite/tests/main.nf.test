nextflow_process {

    name "Test Process ANTISMASH_ANTISMASHLITE"
    script "../main.nf"
    process "ANTISMASH_ANTISMASHLITE"

    tag "modules"
    tag "modules_nfcore"
    tag "antismash"
    tag "antismash/antismashlite"
    // tag "antismash/antismashlitedownloaddatabases"
    tag "gunzip"
    // tag "untar"

    setup {
        // run("UNTAR", alias: "UNTAR_CSS") {
        //     script "modules/nf-core/untar/main.nf"
        //     process {
        //     """
        //     input[0] = [
        //         [ ],
        //         file('https://github.com/nf-core/test-datasets/raw/59ddeb5929f89ddddaff292d67f9025812762b87/data/delete_me/antismash/css.tar.gz', checkIfExists: true)
        //     ]
        //     """
        //     }
        // }

        // run("UNTAR", alias: "UNTAR_DETECTION") {
        //     script "modules/nf-core/untar/main.nf"
        //     process {
        //     """
        //     input[0] = [
        //         [ ],
        //         file('https://github.com/nf-core/test-datasets/raw/59ddeb5929f89ddddaff292d67f9025812762b87/data/delete_me/antismash/detection.tar.gz', checkIfExists: true)
        //     ]
        //     """
        //     }
        // }

        // run("UNTAR", alias: "UNTAR_MODULES") {
        //     script "modules/nf-core/untar/main.nf"
        //     process {
        //     """
        //     input[0] = [
        //         [ ],
        //         file('https://github.com/nf-core/test-datasets/raw/59ddeb5929f89ddddaff292d67f9025812762b87/data/delete_me/antismash/modules.tar.gz', checkIfExists: true)
        //     ]
        //     """
        //     }
        // }

        // run("ANTISMASH_ANTISMASHLITEDOWNLOADDATABASES") {
        //     script "modules/nf-core/antismash/antismashlitedownloaddatabases"
        //     process {
        //         """
        //         input[0] = UNTAR_CSS.out.untar.map{ it[1] }
        //         input[1] = UNTAR_DETECTION.out.untar.map{ it[1] }
        //         input[2] = UNTAR_MODULES.out.untar.map{ it[1] }
        //         """
        //     }
        // }

        run("GUNZIP", alias: "GUNZIP1") {
            script "modules/nf-core/gunzip/main.nf"
            process {
                """
                input[0] = [
                    [ id:'test' ],
                    file(params.test_data['bacteroides_fragilis']['genome']['genome_fna_gz'], checkIfExists: true)
                ]
                """
            }
        }

        run("GUNZIP", alias: "GUNZIP2") {
            script "modules/nf-core/gunzip/main.nf"
            process {
                """
                input[0] = [
                    [ id:'test' ],
                    file(params.test_data['bacteroides_fragilis']['genome']['genome_gff_gz'], checkIfExists: true)
                ]
                """
            }
        }
    }

    // test("antismashlite - bacteroides_fragilis - genome") {

    //     when {
    //         process {
    //             """
    //             input[0] = GUNZIP1.out.gunzip
    //             input[1] = ANTISMASH_ANTISMASHLITEDOWNLOADDATABASES.out.database
    //             input[2] = ANTISMASH_ANTISMASHLITEDOWNLOADDATABASES.out.antismash_dir
    //             input[3] = GUNZIP2.out.gunzip.map{ it[1] }
    //             """
    //         }
    //     }

    //     then {
    //         assertAll(
    //             { assert process.success },
    //             { assert snapshot(process.out).match() },
    //             { assert path(process.out.gbk_results.get(0).get(1)).text.contains("##antiSMASH-Data-END##") },
    //             { assert snapshot(process.out.html_accessory_files).match("html_accessory_files") },
    //             { assert path(process.out.gbk_input.get(0).get(1)).text.contains("##antiSMASH-Data-END##") },
    //             { assert path(process.out.json_results.get(0).get(1)).text.contains("genome.fna") },
    //             { assert path(process.out.zip.get(0).get(1)).exists() },
    //             { assert snapshot(process.out.html).match("html") },
    //             { assert path(process.out.json_sideloading.get(0).get(1)).text.contains("\"seq_id\": \"NZ_CP069563.1\"") },
    //             { assert snapshot(process.out.log.get(0).get(1)).text.contains("antiSMASH status: SUCCESS") },
    //             { assert snapshot(process.out.versions).match("versions") }
    //         )
    //     }
    // }

    test("antismashlite - bacteroides_fragilis - genome - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = GUNZIP1.out.gunzip
                input[1] = file("/home/jasmin/antismash7_db")
                input[2] = file("/home/jasmin/miniconda3/envs/antismashlite710/lib/python3.10/site-packages/antismash")
                input[3] = GUNZIP2.out.gunzip.map{ it[1] }
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}
