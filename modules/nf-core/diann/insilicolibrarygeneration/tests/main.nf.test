nextflow_process {

    name "Test Process DIANN_INSILICOLIBRARYGENERATION"
    script "../main.nf"
    process "DIANN_INSILICOLIBRARYGENERATION"
    config "./nextflow.config"

    tag "modules"
    tag "modules_nfcore"
    tag "diann"
    tag "diann/insilicolibrarygeneration"

    test("proteomics - generate spectral library") {

        when {
            process {
                """
                input[0] = Channel.of([
                    [id:'test'],
                    file(params.modules_testdata_base_path + 'proteomics/database/yeast_UPS_mini.fasta', checkIfExists: true)
                ])
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert path("${process.out.log[0][1]}").exists() },
                { assert snapshot(
                    process.out.predict_speclib,
                    process.out.versions
                ).match() }
            )
        }
    }

    test("proteomics - generate spectral library - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = Channel.of([
                    [id:'test'],
                    file(params.modules_testdata_base_path + 'proteomics/database/yeast_UPS_mini.fasta', checkIfExists: true)
                ])
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}
