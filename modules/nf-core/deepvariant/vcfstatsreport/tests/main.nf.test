nextflow_process {

    name "Test Process DEEPVARIANT_VCFSTATSREPORT"
    script "../main.nf"
    process "DEEPVARIANT_VCFSTATSREPORT"

    tag "deepvariant/vcfstatsreport"
    tag "deepvariant"
    tag "modules"
    tag "modules_nfcore"

    test("vcf") {
        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                      file(params.modules_testdata_base_path + '/genomics/sarscov2/illumina/vcf/test.vcf', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("vcf.gz") {
        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                      file(params.modules_testdata_base_path + '/genomics/sarscov2/illumina/vcf/test.vcf.gz', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("bcf") {
        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                      file(params.modules_testdata_base_path + '/genomics/sarscov2/illumina/vcf/test.bcf', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("bcf.gz") {
        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                      file(params.modules_testdata_base_path + '/genomics/sarscov2/illumina/vcf/test.bcf.gz', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("vcf - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                      file(params.modules_testdata_base_path + '/genomics/sarscov2/illumina/vcf/test.vcf', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("vcf.gz - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                      file(params.modules_testdata_base_path + '/genomics/sarscov2/illumina/vcf/test.vcf.gz', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("bcf - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                      file(params.modules_testdata_base_path + '/genomics/sarscov2/illumina/vcf/test.bcf', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("bcf.gz - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                      file(params.modules_testdata_base_path + '/genomics/sarscov2/illumina/vcf/test.bcf.gz', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}
