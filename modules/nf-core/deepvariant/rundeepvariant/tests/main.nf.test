nextflow_process {

    name "Test Process DEEPVARIANT_RUNDEEPVARIANT"
    script "../main.nf"
    process "DEEPVARIANT_RUNDEEPVARIANT"

    tag "deepvariant/rundeepvariant"
    tag "deepvariant"
    tag "modules"
    tag "modules_nfcore"
    config "./nextflow.config"

    test("homo_sapiens - [bam, bai] - fasta - fai") {

        when {
            params {
                module_args = '--regions=\"chr22:0-40001\" --model_type=WGS'
            }
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                      file(params.modules_testdata_base_path + '/genomics/homo_sapiens/illumina/bam/test.paired_end.sorted.bam', checkIfExists: true),
                      file(params.modules_testdata_base_path + '/genomics/homo_sapiens/illumina/bam/test.paired_end.sorted.bam.bai', checkIfExists: true),
                      []
                ]
                input[1] = [
                    [ id:'genome'],
                      file(params.modules_testdata_base_path + '/genomics/homo_sapiens/genome/genome.fasta', checkIfExists: true)
                ]
                input[2] = [
                    [ id:'genome'],
                      file(params.modules_testdata_base_path + '/genomics/homo_sapiens/genome/genome.fasta.fai', checkIfExists: true)
                ]
                input[3] = [
                    [],[]
                ]
                input[4] = [
                    [],[]
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("homo_sapiens - [cram, crai, genome_bed] - fasta - fai") {

        when {
            params {
                module_args = '--model_type=WGS'
            }
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                      file(params.modules_testdata_base_path + '/genomics/homo_sapiens/illumina/cram/test.paired_end.sorted.cram', checkIfExists: true),
                      file(params.modules_testdata_base_path + '/genomics/homo_sapiens/illumina/cram/test.paired_end.sorted.cram.crai', checkIfExists: true),
                      file(params.modules_testdata_base_path + '/genomics/homo_sapiens/genome/genome.bed', checkIfExists: true)
                ]
                input[1] = [
                    [ id:'genome'],
                      file(params.modules_testdata_base_path + '/genomics/homo_sapiens/genome/genome.fasta', checkIfExists: true)
                ]
                input[2] = [
                    [ id:'genome'],
                      file(params.modules_testdata_base_path + '/genomics/homo_sapiens/genome/genome.fasta.fai', checkIfExists: true)
                ]
                input[3] = [
                    [],[]
                ]
                input[4] = [
                    [],[]
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("homo_sapiens - [cram, crai, genome_bed] - fasta - fai - par_bed") {

        when {
            params {
                module_args = '--model_type=WGS --haploid_contigs chr22'
            }
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                      file(params.modules_testdata_base_path + '/genomics/homo_sapiens/illumina/cram/test.paired_end.sorted.cram', checkIfExists: true),
                      file(params.modules_testdata_base_path + '/genomics/homo_sapiens/illumina/cram/test.paired_end.sorted.cram.crai', checkIfExists: true),
                      file(params.modules_testdata_base_path + '/genomics/homo_sapiens/genome/genome.bed', checkIfExists: true)
                ]
                input[1] = [
                    [ id:'genome'],
                      file(params.modules_testdata_base_path + '/genomics/homo_sapiens/genome/genome.fasta', checkIfExists: true)
                ]
                input[2] = [
                    [ id:'genome'],
                      file(params.modules_testdata_base_path + '/genomics/homo_sapiens/genome/genome.fasta.fai', checkIfExists: true)
                ]
                input[3] = [
                    [],[]
                ]
                input[4] = [
                    [ id:'genome'],
                      file(params.modules_testdata_base_path + '/genomics/homo_sapiens/genome/genome.blacklist_intervals.bed', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("homo_sapiens - [bam, bai] - fasta_gz - fasta_gz_fai") {

        when {
            params {
                module_args = '--regions=\"chr22:0-40001\" --model_type=WGS'
            }
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                      file(params.modules_testdata_base_path + '/genomics/homo_sapiens/illumina/bam/test.paired_end.sorted.bam', checkIfExists: true),
                      file(params.modules_testdata_base_path + '/genomics/homo_sapiens/illumina/bam/test.paired_end.sorted.bam.bai', checkIfExists: true),
                      []
                ]
                input[1] = [
                    [ id:'genome'],
                      file(params.modules_testdata_base_path + '/genomics/homo_sapiens/genome/genome.fasta.gz', checkIfExists: true)
                ]
                input[2] = [
                    [ id:'genome'],
                      file(params.modules_testdata_base_path + '/genomics/homo_sapiens/genome/genome.fasta.gz.fai', checkIfExists: true)
                ]
                input[3] = [
                    [ id:'genome'],
                      file(params.modules_testdata_base_path + '/genomics/homo_sapiens/genome/genome.fasta.gz.gzi', checkIfExists: true)
                ]
                input[4] = [
                    [],[]
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("homo_sapiens - [bam, bai] - fasta - fai - stub") {

        options "-stub"

        when {
            params {
                module_args = ''
            }
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                      file(params.modules_testdata_base_path + '/genomics/homo_sapiens/illumina/bam/test.paired_end.sorted.bam', checkIfExists: true),
                      file(params.modules_testdata_base_path + '/genomics/homo_sapiens/illumina/bam/test.paired_end.sorted.bam.bai', checkIfExists: true),
                      []
                ]
                input[1] = [
                    [ id:'genome'],
                      file(params.modules_testdata_base_path + '/genomics/homo_sapiens/genome/genome.fasta', checkIfExists: true)
                ]
                input[2] = [
                    [ id:'genome'],
                      file(params.modules_testdata_base_path + '/genomics/homo_sapiens/genome/genome.fasta.fai', checkIfExists: true)
                ]
                input[3] = [
                    [],[]
                ]
                input[4] = [
                    [],[]
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("homo_sapiens - [bam, bai] - fasta_gz - fasta_gz_fai - stub") {

        options "-stub"

        when {
            params {
                module_args = ''
            }
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                      file(params.modules_testdata_base_path + '/genomics/homo_sapiens/illumina/bam/test.paired_end.sorted.bam', checkIfExists: true),
                      file(params.modules_testdata_base_path + '/genomics/homo_sapiens/illumina/bam/test.paired_end.sorted.bam.bai', checkIfExists: true),
                      []
                ]
                input[1] = [
                    [ id:'genome'],
                      file(params.modules_testdata_base_path + '/genomics/homo_sapiens/genome/genome.fasta.gz', checkIfExists: true)
                ]
                input[2] = [
                    [ id:'genome'],
                      file(params.modules_testdata_base_path + '/genomics/homo_sapiens/genome/genome.fasta.gz.fai', checkIfExists: true)
                ]
                input[3] = [
                    [ id:'genome'],
                      file(params.modules_testdata_base_path + '/genomics/homo_sapiens/genome/genome.fasta.gz.gzi', checkIfExists: true)
                ]
                input[4] = [
                    [],[]
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

}
