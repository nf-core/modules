nextflow_process {

    name "Test Process PARABRICKS_HAPLOTYPECALLER"
    script "../main.nf"
    process "PARABRICKS_HAPLOTYPECALLER"

    tag "modules"
    tag "modules_nfcore"
    tag "parabricks"
    tag "parabricks/haplotypecaller"
    tag "gpu"

    config './nextflow.config'

    test("human - bam") {

        when {
            params {
                 module_args = '--htvc-low-memory'
            }
            process {
                """
                input[0] = [
                    [ id:'test'],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/bam/test2.paired_end.recalibrated.sorted.bam', checkIfExists: true),
                    [], // bam.bai not needed unless using intervals
                    []
                ]
                input[1] = [
                    [ id:'test'],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/sequence/genome.fasta', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    path(process.out.vcf[0][1]).vcf.variantsMD5,
                    process.out.versions,
                    ).match() 
                }
            )
        }

    }

    test("human - bam - intervals") {

        when {
            params {
                 module_args = '--htvc-low-memory'
            }
            process {
                """
                input[0] = [
                    [ id:'test'],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/bam/test2.paired_end.recalibrated.sorted.bam', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/bam/test2.paired_end.recalibrated.sorted.bam.bai', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/sequence/multi_intervals.bed', checkIfExists: true)
                ]
                input[1] = [
                    [ id:'ref'],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/sequence/genome.fasta', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    path(process.out.vcf[0][1]).vcf.variantsMD5,
                    process.out.versions,
                    ).match() 
                }
            )
        }

    }

    test("human - bam - gvcf") {

        when {
            params {
                 module_args = '--gvcf --htvc-low-memory'
            }
            process {
                """
                input[0] = [
                    [ id:'test'],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/bam/test2.paired_end.recalibrated.sorted.bam', checkIfExists: true),
                    [], // bam.bai not needed unless using intervals
                    []
                ]
                input[1] = [
                    [ id:'ref'],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/sequence/genome.fasta', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    path(process.out.gvcf[0][1]).vcf.variantsMD5,
                    process.out.versions,
                    ).match() 
                }
            )
        }

    }

    test("human - bam - intervals - gvcf") {

        when {
            params {
                 module_args = '--gvcf --htvc-low-memory'
            }
            process {
                """
                input[0] = [
                    [ id:'test'],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/bam/test2.paired_end.recalibrated.sorted.bam', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/bam/test2.paired_end.recalibrated.sorted.bam.bai', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/sequence/multi_intervals.bed', checkIfExists: true)
                ]
                input[1] = [
                    [ id:'ref'],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/sequence/genome.fasta', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    path(process.out.gvcf[0][1]).vcf.variantsMD5,
                    process.out.versions,
                    ).match() 
                }
            )
        }

    }

    test("human - bam - stub") {

        options "-stub"

        when {
            params {
                 module_args = '--htvc-low-memory'
            }
            process {
                """
                input[0] = [
                    [ id:'test'],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/bam/test2.paired_end.recalibrated.sorted.bam', checkIfExists: true),
                    [], // bam.bai not needed unless using intervals
                    []
                ]
                input[1] = [
                    [ id:'test'],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/sequence/genome.fasta', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out,
                    path(process.out.versions[0]).yaml
                    ).match() 
                }
            )
        }

    }

    test("human - bam - intervals - gvcf - stub") {

        options "-stub"

        when {
            params {
                 module_args = '--gvcf --htvc-low-memory'
            }
            process {
                """
                input[0] = [
                    [ id:'test'],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/bam/test2.paired_end.recalibrated.sorted.bam', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/bam/test2.paired_end.recalibrated.sorted.bam.bai', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/sequence/multi_intervals.bed', checkIfExists: true)
                ]
                input[1] = [
                    [ id:'test'],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/sequence/genome.fasta', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out,
                    path(process.out.versions[0]).yaml
                    ).match() 
                }
            )
        }

    }

}
