name: "parabricks_minimap2"
description: NVIDIA Clara Parabricks GPU-accelerated minimap2 for aligning long read sequences
  against a large reference database using an accelerated KSW2 to convert FASTQ to BAM/CRAM.
keywords:
  - align
  - sort
  - bqsr
  - duplicates
  - long read
tools:
  - "parabricks":
      description: "NVIDIA Clara Parabricks GPU-accelerated genomics tools"
      homepage: "https://www.nvidia.com/en-us/clara/genomics/"
      documentation: "https://docs.nvidia.com/clara/parabricks/latest/index.html"
      licence: ["custom"]
      identifier: ""
input:
  - - meta:
        type: map
        description: |
          Groovy Map containing sample information
          e.g. [ id:'test', single_end:false ]
    - reads:
        type: file
        description: Input read file, supported formats - 'fastq', 'fastq.gz', 'fq', 'fq.gz', 'bam'
        pattern: "^.*\\.(fastq|fastq\\.gz|fq|fq\\.gz|bam)$"
  - - meta2:
        type: map
        description: |
          Groovy Map containing fasta information
    - fasta:
        type: file
        description: reference fasta file - must be unzipped
        pattern: "*.fasta"
  - - meta3:
        type: map
        description: |
          Groovy Map containing index information
    - interval_file:
        type: file
        description: (optional) file(s) containing genomic intervals for use in base
          quality score recalibration (BQSR)
        pattern: "*.{bed,interval_list,picard,list,intervals}"
  - - meta4:
        type: map
        description: |
          Groovy Map containing known sites information
    - known_sites:
        type: file
        description: (optional) known sites file(s) for calculating BQSR. markdups must
          be true to perform BQSR.
        pattern: "*.vcf.gz"
  - - output_fmt:
        type: string
        description: Output format for the alignment. Options are 'bam' or 'cram'
        pattern: "{bam,cram}"
output:
  - bam:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*.bam":
          type: file
          description: Sorted BAM file
          pattern: "*.bam"
  - bai:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*.bai":
          type: file
          description: index corresponding to sorted BAM file
          pattern: "*.bai"
  - cram:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*.cram":
          type: file
          description: Sorted CRAM file
          pattern: "*.cram"
  - crai:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*.crai":
          type: file
          description: index corresponding to sorted CRAM file
          pattern: "*.crai"
  - bqsr_table:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test']
      - "*.table":
          type: file
          description: (optional) table from base quality score recalibration calculation,
            to be used with parabricks/applybqsr
          pattern: "*.table"
  - qc_metrics:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
      - "*_qc_metrics":
          type: directory
          description: (optional) optional directory of qc metrics
          pattern: "*_qc_metrics"
  - duplicate_metrics:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
      - "*.duplicate-metrics.txt":
          type: file
          description: (optional) metrics calculated from marking duplicates in the bam
            file
          pattern: "*.duplicate-metrics.txt"
  - versions:
      - versions.yml:
          type: file
          description: File containing software versions
          pattern: "versions.yml"
authors:
  - "@haidyi"
maintainers:
  - "@haidyi"
