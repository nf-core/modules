nextflow_process {

    name "Test Process PICRUST2_PIPELINE"
    script "../main.nf"
    process "PICRUST2_PIPELINE"

    tag "modules"
    tag "modules_nfcore"
    tag "picrust2"
    tag "picrust2/pipeline"


    test("picrust2 pipeline [16s otu]") {

        config "./nextflow.config"

        when {
            process {
                """
                input[0] = [
                    [ id: 'test' ],
                    file(params.modules_testdata_base_path + 'metabarcoding/16S_OTU/rep-seq.fasta', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'metabarcoding/16S_OTU/feature-table.tsv', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assert process.success
            assert snapshot(
                process.out.trees,
                process.out.function_abundances,
                process.out.pathway_abundances,
                path(process.out.versions.get(0)).yaml
            ).match()
        }

    }

    test("picrust2 pipeline [16s otu] - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ],
                    file(params.modules_testdata_base_path + 'metabarcoding/16S_OTU/rep-seq.fasta', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'metabarcoding/16S_OTU/feature-table.tsv', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assert process.success
            assert snapshot(
                process.out.trees,
                process.out.function_abundances,
                process.out.pathway_abundances,
                path(process.out.versions.get(0)).yaml
            ).match()
        }

    }

}
