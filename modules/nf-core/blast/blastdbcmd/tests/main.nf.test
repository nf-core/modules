nextflow_process {

    name "Test Process BLAST_BLASTDBCMD"
    script "../main.nf"
    process "BLAST_BLASTDBCMD"
    config "./nextflow.config"
    tag "modules"
    tag "modules_nfcore"
    tag "blast"
    tag "blast/blastdbcmd"
    tag "blast/makeblastdb"

    setup {
        run("BLAST_MAKEBLASTDB") {
            script "../../makeblastdb/main.nf"
            process {
                """
                input[0] = [ [id:'test2'], file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/proteome.fasta', checkIfExists: true) ]
                """
            }
        }
    }


    test("Should query with a protein identifier against a FASTA DB") {

        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] = [ [id: 'test'], 'ENSSASP00005000002.1', [] ]
                input[1] = BLAST_MAKEBLASTDB.out.db
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("Should query with a protein identifier against a FASTA DB - stub") {

        options '-stub'

        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] = [ [id: 'test'], 'ENSSASP00005000002.1', [] ]
                input[1] = BLAST_MAKEBLASTDB.out.db
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("Should query with a file containing a list of protein identifiers against a FASTA DB") {

        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] = [ [id:'test'], '', file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/db/blast/proteome.list', checkIfExists: true) ]
                input[1] = BLAST_MAKEBLASTDB.out.db
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("Should query with a file containing a list of protein identifiers against a FASTA DB - text file") {

        config "./nextflow.txt.config"

        when {
            params {
                outdir = "$outputDir"
            }
            process {

                """
                input[0] = [ [id:'test'], '', file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/db/blast/proteome.list', checkIfExists: true) ]
                input[1] = BLAST_MAKEBLASTDB.out.db
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}