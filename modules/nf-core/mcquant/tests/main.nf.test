nextflow_process {

    name "Test Process MCQUANT"
    script "../main.nf"
    process "MCQUANT"

    tag "modules"
    tag "modules_nfcore"
    tag "mcquant"

    test("imaging - image,mask,marker") {

        when {
            process {
                """
                input[0] = [
                    [ id:'image' ], // meta map
                    file(params.test_data['imaging']['quantification']['image'], checkIfExists: true)
                ]
                input[1] =  [
                    [ id:'mask' ], // meta map
                    file(params.test_data['imaging']['quantification']['mask'], checkIfExists: true)
                ]

                input[2] = [
                    [ id:'marker' ], // meta map
                    file(params.test_data['imaging']['quantification']['markers'], checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out.csv).match("csv") },
                { assert snapshot(process.out.versions).match("versions") }
            )
        }

    }

    test("imaging - image,mask,marker - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'image' ], // meta map
                    file(params.test_data['imaging']['quantification']['image'], checkIfExists: true)
                ]
                input[1] =  [
                    [ id:'mask' ], // meta map
                    file(params.test_data['imaging']['quantification']['mask'], checkIfExists: true)
                ]

                input[2] = [
                    [ id:'marker' ], // meta map
                    file(params.test_data['imaging']['quantification']['markers'], checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
