
nextflow_process {

    name "Test Process SHIGATYPER"
    script "../main.nf"
    process "SHIGATYPER"

    tag "modules"
    tag "modules_nfcore"
    tag "shigatyper"

    test("test-shigatyper-pe") {

        when {
            process {
                """
                input[0] = [
				    [ id:'test', single_end:false, is_ont:false ], // meta map
				    [
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true),
				        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_2.fastq.gz', checkIfExists: true)
                    ]
				]

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("test-shigatyper-se") {

        when {
            process {
                """
                input[0] = [
				    [ id:'test', single_end:true, is_ont:false ], // meta map
				    [
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true)
                    ]
				]

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("test-shigatyper-ont") {

        when {
            process {
                """
                input[0] = [
				    [ id:'test', single_end:true, is_ont:true ], // meta map
				    [
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/nanopore/fastq/test.fastq.gz', checkIfExists: true)
                    ]
				]

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("test-shigatyper-ont-stub") {

        options '-stub'

        when {
            process {
                """
                input[0] = [
				    [ id:'test', single_end:true, is_ont:true ], // meta map
				    [
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/nanopore/fastq/test.fastq.gz', checkIfExists: true)
                    ]
				]

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

}
