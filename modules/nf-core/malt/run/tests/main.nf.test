// TODO nf-core: Once you have added the required tests, please run the following command to build this file:
// nf-core modules test malt/run
nextflow_process {

    name "Test Process MALT_RUN"
    script "../main.nf"
    process "MALT_RUN"
    config './nextflow.config'

    tag "modules"
    tag "modules_nfcore"
    tag "malt"
    tag "malt/run"
    tag "malt/build"
    tag "unzip"

        setup {
        run("UNZIP") {
            script "../../../unzip/main.nf"
            process {
                """
                input[0] = [[], file("s3://ngi-igenomes/test-data/createtaxdb/taxonomy/megan-nucl-Feb2022.db.zip", checkIfExists: true)]
                """
            }
        }
        run("MALT_BUILD") {
            script "../../../malt/build/main.nf"
            process {
                """
                input[0] = file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true)
                input[1] = []
                input[2] = UNZIP.out.unzipped_archive.map { it[1] }
                """
            }
        }
    }

    test("sarscov2 - fastq") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test_1', single_end:false ],
                    [
                        file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'], checkIfExists: true)
                    ]
                ]
                input[1] = MALT_BUILD.out.index
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                        process.out.alignments,
                        file(process.out.rma6[0][1]).name
                    ).match()
                },
                { assert path(process.out.log[0][1]).readLines().last().contains("Peak memory") },
            )
        }

    }

    test("sarscov2 - fastq - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'test_1', single_end:false ],
                    [
                        file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'], checkIfExists: true)
                    ]
                ]
                input[1] = MALT_BUILD.out.index
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
