nextflow_process {

    name "Test Process BWA_MEM"
    tag "modules_nfcore"
    tag "modules"
    tag "bwa"
    tag "bwa/mem"
    script "../main.nf"
    process "BWA_MEM"

    test("Single-End") {

        setup {
            run("BWA_INDEX") {
                script "../../index/main.nf"
                process {
                    """
                    input[0] = [
                        [id: 'test'],
                        file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true)
                    ]
                    """
                }
            }
        }

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:true ], // meta map
                    [
                        file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'], checkIfExists: true)
                    ]
                ]
                input[1] = BWA_INDEX.out.index
                input[2] = false
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("Single-End Sort") {

        setup {
            run("BWA_INDEX") {
                script "../../index/main.nf"
                process {
                    """
                    input[0] = [
                        [id: 'test'],
                        file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true)
                    ]
                    """
                }
            }
        }

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:true ], // meta map
                    [
                        file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'], checkIfExists: true)
                    ]
                ]
                input[1] = BWA_INDEX.out.index
                input[2] = true
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("Paired-End") {

        setup {
            run("BWA_INDEX") {
                script "../../index/main.nf"
                process {
                    """
                    input[0] = [
                        [id: 'test'],
                        file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true)
                    ]
                    """
                }
            }
        }

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    [
                        file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'], checkIfExists: true),
                        file(params.test_data['sarscov2']['illumina']['test_2_fastq_gz'], checkIfExists: true)
                    ]
                ]
                input[1] = BWA_INDEX.out.index
                input[2] = false
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("Paired-End Sort") {

        setup {
            run("BWA_INDEX") {
                script "../../index/main.nf"
                process {
                    """
                    input[0] = [
                        [id: 'test'],
                        file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true)
                    ]
                    """
                }
            }
        }

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    [
                        file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'], checkIfExists: true),
                        file(params.test_data['sarscov2']['illumina']['test_2_fastq_gz'], checkIfExists: true)
                    ]
                ]
                input[1] = BWA_INDEX.out.index
                input[2] = true
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }
}
