nextflow_process {

    name "Test Process QUANTMSUTILS_DIANN2MZTAB"
    script "../main.nf"
    process "QUANTMSUTILS_DIANN2MZTAB"
    config "./nextflow.config"

    tag "modules"
    tag "modules_nfcore"
    tag "quantmsutils"
    tag "quantmsutils/diann2mztab"

    test("proteomics - convert DIA-NN results") {

        when {
            process {
                """
                input[0] = Channel.of([
                    [id:'test_exp'],
                    file(params.modules_testdata_base_path + 'proteomics/diann/diann_report.tsv', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'proteomics/diann/diann_report.pg_matrix.tsv', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'proteomics/diann/diann_report.pr_matrix.tsv', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'proteomics/diann/versions.yml', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'proteomics/diann/RD139_Narrow_UPS1_design.tsv', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'proteomics/diann/RD139_Narrow_UPS1_0_1fmol_inj1_ms_info.parquet', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'proteomics/diann/REF_EColi_K12_UPS1_combined_subset_100.fasta', checkIfExists: true)
                ])
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert path("${process.out.log[0][1]}").exists() },
                { assert snapshot(
                    process.out.out_msstats,
                    process.out.out_triqler,
                    process.out.versions
                ).match() }
            )
        }
    }

    test("proteomics - convert DIA-NN results - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = Channel.of([
                    [id:'test_exp'],
                    file(params.modules_testdata_base_path + 'proteomics/diann/diann_report.tsv', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'proteomics/diann/diann_report.pg_matrix.tsv', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'proteomics/diann/diann_report.pr_matrix.tsv', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'proteomics/diann/versions.yml', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'proteomics/diann/RD139_Narrow_UPS1_design.tsv', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'proteomics/diann/RD139_Narrow_UPS1_0_1fmol_inj1_ms_info.parquet', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'proteomics/diann/REF_EColi_K12_UPS1_combined_subset_100.fasta', checkIfExists: true)
                ])
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}
