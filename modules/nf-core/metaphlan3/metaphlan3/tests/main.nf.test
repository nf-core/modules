nextflow_process {

    name "Test Process METAPHLAN3_METAPHLAN3"
    config "./nextflow.config"
    script "../main.nf"
    process "METAPHLAN3_METAPHLAN3"

    tag "modules"
    tag "modules_nfcore"
    tag "metaphlan"
    tag "untar"

    // config './nextflow.config'

    setup {
        run("UNTAR") {
            script "../../../untar/main.nf"
            process {
            """
            input[0] = [
                        [ id:'test' ], // meta map
                        file(params.modules_testdata_base_path + 'modules/data/delete_me/metaphlan_database.tar.gz', checkIfExists: true)
            ]
            """
            }
        }
    }

    test("metaphlan3 single-end") {

        when {
            // params {
            //     module_args  = ''
            //     module_args2 = '--var_type SNP --sensitivity 99.0'
            // }
            process {
                """
                input[0] = [
                    [ id:'test' ],
                    [ single_end:true ],
                    [ params.modules_testdata_base_path + 'modules/data/delete_me/metaphlan_database', checkIfExists: true ]
                ]
                """
            }
        }
        then {
            assert process.success
            assertAll(
                { assert snapshot(
                    process.out
                    ).match()
                }
            )
        }
    }


    // test("homo sapiens -- stub") {
    //     options '-stub'
    //     when {
    //         params {
    //             module_args  = ''
    //             module_args2 = '--var_type SNP --sensitivity 99.0'
    //         }
    //         process {
    //             """
    //             input[0] = [[id:'test'],
    //                 file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/gatk/haplotypecaller_calls/test2_haplotc.ann.vcf.gz', checkIfExists:true),
    //                 file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/gatk/haplotypecaller_calls/test2_haplotc.ann.vcf.gz.tbi', checkIfExists:true),
    //                 file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/gatk/variantrecalibrator/test2.recal', checkIfExists:true),
    //                 file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/gatk/variantrecalibrator/test2.recal.idx', checkIfExists:true),
    //                 file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/gatk/variantrecalibrator/test2.tranches', checkIfExists:true)
    //                 ]
    //             input[1] = [[:],file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/sequence/genome.fasta', checkIfExists: true)]
    //             input[2] = [[:],file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/sequence/genome.fasta.fai', checkIfExists: true)]
    //             """
    //         }
    //     }
    //     then {
    //         assert process.success
    //         assertAll(
    //             { assert snapshot(
    //                 process.out,
    //                 path(process.out.versions[0]).yaml
    //                 ).match()
    //             }
    //         )
    //     }
    // }
}