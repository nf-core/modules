nextflow_process {
    name "Test Process SRATOOLS_PREFETCH"
    script "../main.nf"
    process "SRATOOLS_PREFETCH"
    tag "modules"
    tag "modules_nfcore"
    tag "sratools"
    tag "sratools/prefetch"

    test("sratools/prefetch") {

        when {
            process {
                """
                input[0] = Channel.of([ [ id:'test', single_end:false ], 'DRR000774' ])
                input[1] = file(params.modules_testdata_base_path + 'generic/config/ncbi_user_settings.mkfg', checkIfExists: true)
                input[2] = []
                """
            }
        }

        then {
            assertAll (
            { assert process.success },
            { assert snapshot(process.out).match() }
            )
        }
    }

    test("sratools/prefetch with sralite") {

        when {
            process {
                """
                input[0] = Channel.of([ [ id:'test', single_end:false ], 'SRR1170046' ])
                input[1] = file(params.modules_testdata_base_path + 'generic/config/ncbi_user_settings.mkfg', checkIfExists: true)
                input[2] = []
                """
            }
        }

        then {
            assertAll (
            { assert process.success },
            { assert snapshot(process.out).match() }
            )
        }
    }

    test("sratools/prefetch/stub") {

        options '-stub'

        when {
            process {
                """
                input[0] = Channel.of([ [ id:'test', single_end:false ], 'DRR000774' ])
                input[1] = file(params.modules_testdata_base_path + 'generic/config/ncbi_user_settings.mkfg', checkIfExists: true)
                input[2] = []
                """
            }
        }

        then {
            assertAll (
            { assert process.success },
            { assert snapshot(process.out).match() }
            )
        }
    }
}
