nextflow_process {

    name "Test Process ADAPTERREMOVAL"
    script "../main.nf"
    config "./nextflow.config"
    process "ADAPTERREMOVAL"

    tag "modules"
    tag "modules_nfcore"
    tag "adapterremoval"

    test("single-end - sarscov2 - [fastq]") {
        when {
            params {
                adapterremoval_args = ""
            }
            process {
                """
                input[0] = [
                            [ id:'test', single_end:true ],
                            file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true)
                ]
                input[1] = []
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out.singles_truncated,
                    process.out.settings,
                    process.out.versions
                ).match() },
            )
        }
    }

    test("paired-end - sarscov2 - [fastq]") {

        when {
            params {
                adapterremoval_args = ""
            }
            process {
                """
                input[0] = [
                            [ id:'test', single_end:false ],
                            [
                                file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true),
                                file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_2.fastq.gz', checkIfExists: true)
                            ]
                ]
                input[1] = []
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out.paired_truncated,
                    process.out.settings,
                    process.out.versions
                ).match() }
            )
        }
    }

    test("paired-end collapse - sarscov2 - [fastq]") {
        when {
            params {
                adapterremoval_args = "--collapse"
            }
            process {
                """
                input[0] = [
                            [ id:'test', single_end:false ],
                            [
                                file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true),
                                file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_2.fastq.gz', checkIfExists: true)
                            ]
                ]
                input[1] = []
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out.paired_truncated,
                    process.out.collapsed,
                    file(process.out.collapsed_truncated[0][1]).name, // Check for present but is empty
                    process.out.settings,
                    process.out.versions
                ).match() }
            )
        }

    }

    test("paired-end adapterlist - sarscov2 - [fastq]") {
        when {
            params {
                adapterremoval_args = ""
            }
            process {
                """
                input[0] = [
                            [ id:'test', single_end:false ],
                            [
                                file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true),
                                file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_2.fastq.gz', checkIfExists: true)
                            ]
                ]
                input[1] = file(params.modules_testdata_base_path + '/delete_me/adapterremoval/adapterremoval_adapterlist.txt', checkIfExists: true)
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out.paired_truncated,
                    process.out.settings,
                    process.out.versions
                ).match() }
            )
        }
    }

    test("paired-end collapse adapterlist - sarscov2 - [fastq] -- stub") {
        options "-stub"
        when {
            params {
                adapterremoval_args = "--collapse"
            }
            process {
                """
                input[0] = [
                            [ id:'test', single_end:false ],
                            [
                                file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true),
                                file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_2.fastq.gz', checkIfExists: true)
                            ]
                ]
                input[1] = file(params.modules_testdata_base_path + '/delete_me/adapterremoval/adapterremoval_adapterlist.txt', checkIfExists: true)
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out,
                    path(process.out.versions[0]).yaml
                ).match() }
            )
        }
    }

    test("single-end - sarscov2 - [fastq] -- stub") {
        options "-stub"
        when {
            params {
                adapterremoval_args = ""
            }
            process {
                """
                input[0] = [
                            [ id:'test', single_end:true ],
                            file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true)
                ]
                input[1] = []
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out,
                    path(process.out.versions[0]).yaml
                ).match() }
            )
        }
    }

    test("paired-end - sarscov2 - [fastq] -- stub") {
        options "-stub"
        when {
            params {
                adapterremoval_args = ""
            }
            process {
                """
                input[0] = [
                            [ id:'test', single_end:false ],
                            [
                                file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true),
                                file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_2.fastq.gz', checkIfExists: true)
                            ]
                ]
                input[1] = []
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out,
                    path(process.out.versions[0]).yaml
                ).match() }
            )
        }

    }

}
