nextflow_process {

    name "Test Process BBMAP_BBMERGE"
    script "../main.nf"
    process "BBMAP_BBMERGE"

    tag "modules"
    tag "modules_nfcore"
    tag "bbmap"
    tag "bbmap/bbmerge"

    test("sarscov2_illumina_paired - fastq_gz") {


        when {
            process {
                """

                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    [file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_2.fastq.gz', checkIfExists: true)]
                    ]
                input[1] = false
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out.versions).match() }
            )
        }

    }

    test("sarscov2_illumina_interleaved - fastq_gz") {


        when {
            process {
                """

                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    [file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_interleaved.fastq.gz', checkIfExists: true)]
                    ]
                input[1] = true
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out.versions).match() }
            )
        }

    }

    test("sarscov2_illumina_paired - fastq_gz - stub") {

        options "-stub"

        when {
            process {
                """

                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    [file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_2.fastq.gz', checkIfExists: true)]
                    ]
                input[1] = false
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("sarscov2_illumina_interleaved - fastq_gz - stub") {

        options "-stub"

        when {
            process {
                """

                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    [file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_interleaved.fastq.gz', checkIfExists: true)]
                    ]
                input[1] = true
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
