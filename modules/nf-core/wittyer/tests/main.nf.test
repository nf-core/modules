nextflow_process {

    name "Test Process WITTYER"
    script "../main.nf"
    process "WITTYER"

    tag "modules"
    tag "modules_nfcore"
    tag "wittyer"

    test("human - simulatedSV - vcf_gz") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file(params.test_data['homo_sapiens']['illumina']['test_sv_vcf'], checkIfExists: true),
                    file(params.test_data['homo_sapiens']['illumina']['test_sv_vcf_tbi'], checkIfExists: true),
                    file(params.test_data['homo_sapiens']['illumina']['test_sv_vcf'], checkIfExists: true),
                    file(params.test_data['homo_sapiens']['illumina']['test_sv_vcf_tbi'], checkIfExists: true),
                    []
                    ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() },
                { assert snapshot(process.out.version).match("version") }
            )
        }

    }

    test("human - simulatedSV - vcf_gz - bed") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file(params.test_data['homo_sapiens']['illumina']['test_sv_vcf'], checkIfExists: true),
                    file(params.test_data['homo_sapiens']['illumina']['test_sv_vcf_tbi'], checkIfExists: true),
                    file(params.test_data['homo_sapiens']['illumina']['test_sv_vcf'], checkIfExists: true),
                    file(params.test_data['homo_sapiens']['illumina']['test_sv_vcf_tbi'], checkIfExists: true),
                    file(params.test_data['homo_sapiens']['genome']['genome_21_multi_interval_bed'], checkIfExists: true)
                    ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() },
            )
        }

    }

    test("human - simulatedSV - vcf_gz - stub") {

        options "-stub"

        when {
            process {
                """             
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file(params.test_data['homo_sapiens']['illumina']['test_sv_vcf'], checkIfExists: true),
                    file(params.test_data['homo_sapiens']['illumina']['test_sv_vcf_tbi'], checkIfExists: true),
                    file(params.test_data['homo_sapiens']['illumina']['test_sv_vcf'], checkIfExists: true),
                    file(params.test_data['homo_sapiens']['illumina']['test_sv_vcf_tbi'], checkIfExists: true),
                    []
                    ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() },
                { assert snapshot(process.out.version).match("stub_version") }
            )
        }

    }

}
