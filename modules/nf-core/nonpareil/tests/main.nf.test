nextflow_process {

    name "Test Process NONPAREIL"
    script "../main.nf"
    process "NONPAREIL"
    config "./nextflow.config"
    tag "modules"
    tag "modules_nfcore"
    tag "nonpareil"

    test("candidatus_portiera_aleyrodidarum - gzipped") {

        when {
            params {
                // define parameters here. Example:
            // outdir = "tests/results"
            }
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file(params.test_data['candidatus_portiera_aleyrodidarum']['illumina']['test_1_fastq_gz'], checkIfExists: true)
                ]
                input[1] = 'fastq'
                input[2] = 'kmer'
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert process.out.npa.get(0).get(1) ==~ ".*/test.npa" },
                { assert process.out.npc.get(0).get(1) ==~ ".*/test.npc" },
                { assert path(process.out.npo.get(0).get(1)).getText().contains("# @impl: Nonpareil") },
                { assert snapshot(path(process.out.npl.get(0).get(1)).md5).match() },
                { assert snapshot(process.out.versions).match("versions") },
            )
        }

    }

    test("candidatus_portiera_aleyrodidarum - uncompressed") {


        setup {
            run("GUNZIP") {
                script "../../gunzip/main.nf"
                process {
                    """
                    input[0] = [
                        [ id:'test', single_end:false ], // meta map
                        file(params.test_data['candidatus_portiera_aleyrodidarum']['illumina']['test_1_fastq_gz'], checkIfExists: true)
                    ]
                    """
                }
            }
        }

        when {
            params {
                // define parameters here. Example:
            // outdir = "tests/results"
            }
            process {
                """
                input[0] = GUNZIP.out.gunzip
                input[1] = 'fastq'
                input[2] = 'kmer'
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert process.out.npa.get(0).get(1) ==~ ".*/test.npa" },
                { assert process.out.npc.get(0).get(1) ==~ ".*/test.npc" },
                { assert path(process.out.npo.get(0).get(1)).getText().contains("# @impl: Nonpareil") },
                { assert snapshot(path(process.out.npl.get(0).get(1)).md5).match() },
                { assert snapshot(process.out.versions).match("versions") },
            )
        }

    }

}
