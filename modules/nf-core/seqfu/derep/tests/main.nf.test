nextflow_process {

    name "Test Process SEQFU_DEREP"
    script "../main.nf"
    process "SEQFU_DEREP"

    tag "modules"
    tag "modules_nfcore"
    tag "seqfu"
    tag "seqfu/derep"

    test("derep - 3 fastas") {
 
        when {
            process {
                """
                input[0] = [
                            [ id:'test' ],
                            [
                                file(params.test_data['sarscov2']['genome']['proteome_fasta'], checkIfExists: true),
                                file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true),
                                file(params.test_data['sarscov2']['genome']['genome_fasta_gz'], checkIfExists: true)
                            ]
                        ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() },
                { assert process.out.fasta },
                { assert process.out.fasta.size() == 1 },
                { assert path(process.out.versions[0]).readLines()[1].contains('.') },
                { assert path(process.out.fasta.get(0).get(1)).md5 == "db73b7edf590972f275915ffb7810933" }  
            )
        }

    }
    test("derep - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file(params.test_data['sarscov2']['illumina']['test_paired_end_bam'], checkIfExists: true)
                    ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
