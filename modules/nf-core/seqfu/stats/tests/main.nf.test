nextflow_process {

    name "Test Process SEQFU_STATS"
    script "../main.nf"
    process "SEQFU_STATS"

    tag "modules"
    tag "modules_nfcore"
    tag "seqfu"
    tag "seqfu/stats"

    test("seqfu stats - faa") {
        // test with 1 FAA file (with  multiple sequences of different length)
        when {
            process {
                """
                input[0] = [
                    [ id:'test_faa' ], 
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/proteome.fasta', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("seqfu stats - multiple files") {
        // test feeding a mix of files including compressed
        when {
            process {
                """
                input[0] = [
                            [ id:'test_multiple' ],
                            [
                                file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/proteome.fasta', checkIfExists: true),
                                file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true),
                                file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta.gz', checkIfExists: true),
                                file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true)
                            ]
                        ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("seqfu stats - faa - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'test_stub' ],
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/proteome.fasta', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success},
                { assert snapshot(
                    process.out,
                    process.out.versions.collect{ path(it).yaml }
                ).match() }
            )
        }

    }

}
