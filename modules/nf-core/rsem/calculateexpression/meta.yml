name: rsem_calculateexpression
description: Calculate expression with RSEM
keywords:
  - rsem
  - expression
  - quantification
tools:
  - rseqc:
      description: |
        RSEM: accurate transcript quantification from RNA-Seq data with or without a reference genome
      homepage: https://github.com/deweylab/RSEM
      documentation: https://github.com/deweylab/RSEM
      doi: 10.1186/1471-2105-12-323
      licence: ["GPL-3.0-or-later"]
      identifier: biotools:rsem
input:
  - - meta:
        type: map
        description: |
          Groovy Map containing sample information
          e.g. [ id:'test', single_end:false ]
    - reads:
        type: file
        description: Input reads for quantification
        pattern: "*.fastq.gz"
  - - index:
        type: file
        description: RSEM index
        pattern: "rsem/*"
output:
  - counts_gene:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'sample1', single_end:false ]`
      - "*.genes.results":
          type: file
          description: Expression counts on gene level
          pattern: "*.genes.results"
  - counts_transcript:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'sample1', single_end:false ]`
      - "*.isoforms.results":
          type: file
          description: Expression counts on transcript level
          pattern: "*.isoforms.results"
  - stat:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'sample1', single_end:false ]`
      - "*.stat":
          type: file
          description: RSEM statistics
          pattern: "*.stat"
  - logs:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'sample1', single_end:false ]`
      - "*.log":
          type: file
          description: RSEM logs
          pattern: "*.log"
  - versions:
      - versions.yml:
          type: file
          description: File containing software versions
          pattern: "versions.yml"
  - bam_star:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'sample1', single_end:false ]`
      - "*.STAR.genome.bam":
          type: file
          description: BAM file generated by STAR (optional)
          pattern: "*.STAR.genome.bam"
  - bam_genome:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'sample1', single_end:false ]`
      - ${prefix}.genome.bam:
          type: file
          description: Genome BAM file (optional)
          pattern: "*.genome.bam"
  - bam_transcript:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'sample1', single_end:false ]`
      - ${prefix}.transcript.bam:
          type: file
          description: Transcript BAM file (optional)
          pattern: "*.transcript.bam"
authors:
  - "@drpatelh"
  - "@kevinmenden"
maintainers:
  - "@drpatelh"
  - "@kevinmenden"
