nextflow_process {

    name "Test Process VRHYME_EXTRACTUNBINNED"

    script "../main.nf"
    process "VRHYME_EXTRACTUNBINNED"

    tag "modules"
    tag "modules_nfcore"
    tag "vrhyme"
    tag "vrhyme/vrhyme"
    tag "vrhyme/extractunbinned"

    setup {

        run("VRHYME_VRHYME") {
            script "../../vrhyme/main.nf"

            process {
                """
                input[0] = [
                    [id:'test',single_end:false],
                    [
                        file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test1_1.fastq.gz', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test1_2.fastq.gz', checkIfExists: true)
                    ]
                ]
                input[1] = [
                    [id:'test',single_end:false],// meta map
                        file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/illumina/fasta/test1.contigs.fa.gz', checkIfExists: true)
                    ]
                """
            }
        }
    }

    test("test_vrhyme_extractunbinned") {

        when {
            process {
                """
                input[0] = VRHYME_VRHYME.out.membership
                input[1] = [
                    [id:'test',single_end:false],// meta map
                        file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/illumina/fasta/test1.contigs.fa.gz', checkIfExists: true)
                    ]
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }


    test("test_vrhyme_extractunbinned -- stub") {
        options '-stub'
        when {
            process {
                """
                input[0] = VRHYME_VRHYME.out.membership
                input[1] = [
                    [id:'test',single_end:false],// meta map
                        file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/illumina/fasta/test1.contigs.fa.gz', checkIfExists: true)
                    ]
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}