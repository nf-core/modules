nextflow_process {

    name "Test Process NANOPLOT"
    tag "modules_nfcore"
    tag "modules"
    tag "nanoplot"
    script "../main.nf"
    process "NANOPLOT"

    test("NanoPlot summary") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    [ file(params.modules_testdata_base_path + 'genomics/sarscov2/nanopore/sequencing_summary/test.sequencing_summary.txt', checkIfExists: true) ]
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out.html[0][1].collect { p -> file(p).name },
                    file(process.out.txt[0][1]).name,
                    // file(process.out.png[0][1]).name, optional
                    // file(process.out.log[0][1]).name, name contains date
                    process.out.versions
                    ).match()
                },
                { assert file(process.out.log[0][1]).text.contains('Finished!') }
            )
        }

    }

    test("NanoPlot FASTQ") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    [ file(params.modules_testdata_base_path + 'genomics/sarscov2/nanopore/fastq/test.fastq.gz', checkIfExists: true) ]
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out.html[0][1].collect { p -> file(p).name },
                    file(process.out.txt[0][1]).name,
                    // file(process.out.png[0][1]).name, optional
                    // file(process.out.log[0][1]).name, name contains date
                    process.out.versions
                    ).match()
                },
                { assert file(process.out.log[0][1]).text.contains('Finished!') }
            )
        }

    }

    test("NanoPlot - stub") {

        options "-stub"
        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    [ file(params.modules_testdata_base_path + 'genomics/sarscov2/nanopore/sequencing_summary/test.sequencing_summary.txt', checkIfExists: true) ]
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }
}
