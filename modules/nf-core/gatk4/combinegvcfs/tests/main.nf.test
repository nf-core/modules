nextflow_process {

    name "Test Process GATK4_COMBINEGVCFS"
    script "../main.nf"
    process "GATK4_COMBINEGVCFS"

    tag "modules"
    tag "modules_nfcore"
    tag "gatk4"
    tag "gatk4/combinegvcfs"

    test("test_gatk4_combinegvcfs") {
        when {
            process {
                """
                input[0] = [ 
                    [ id:'test', single_end:false ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/gvcf/test.genome.vcf', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/gvcf/test.genome.vcf.idx', checkIfExists: true)              
                ]
                input[1] = file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta', checkIfExists: true)
                input[2] = file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta.fai', checkIfExists: true)
                input[3] = file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.dict', checkIfExists: true)
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                // File has a timestamp in it and is in binary format, need to compare only a portion of the file (after header)
                { assert snapshot(path(process.out.combined_gvcf[0][1]).linesGzip[102..-1],
                    process.out.versions
                    ).match() }
            )
        }
    }
}