
nextflow_process {

    name "Test Process GATK4_CONDENSEDEPTHEVIDENCE"
    script "../main.nf"
    process "GATK4_CONDENSEDEPTHEVIDENCE"

    tag "modules"
    tag "modules_nfcore"
    tag "gatk4"
    tag "gatk4/condensedepthevidence"

    test("test-gatk4-condensdepthevidence") {

        when {
            process {
                """
                input[0] = [
				    [ id:'test', single_end:false ], // meta map
				    file("https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/delete_me/condensedepthevidence/testN.rd.txt.gz", checkIfExists: true),
				    file("https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/delete_me/condensedepthevidence/testN.rd.txt.gz.tbi", checkIfExists: true)
				]
				input[1] = file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta', checkIfExists: true)
				input[2] = file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta.fai', checkIfExists: true)
				input[3] = file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.dict', checkIfExists: true)

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
					path(process.out.condensed_evidence[0][1]).linesGzip[0..1],
					file(process.out.condensed_evidence_index[0][1]).name,
					process.out.versions
					).match()
				}
            )
        }
    }

}
