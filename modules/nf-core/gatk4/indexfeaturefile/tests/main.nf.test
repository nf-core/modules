// nf-core modules test gatk4/indexfeaturefile
nextflow_process {

    name "Test Process GATK4_INDEXFEATUREFILE"
    script "../main.nf"
    process "GATK4_INDEXFEATUREFILE"

    tag "modules"
    tag "modules_nfcore"
    tag "gatk4"
    tag "gatk4/indexfeaturefile"

    test("test_gatk4_indexfeaturefile_bed") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.bed', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out.versions).match() },
                { assert snapshot(file(process.out.index.get(0).get(1)).name).match("geneome.bed.idx") },
            )
        }

    }

    test("test_gatk4_indexfeaturefile_bed_gz") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.bed.gz', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() },
                { assert snapshot(file(process.out.index.get(0).get(1)).name).match("genome.bed.gz.tbi") },
            )
        }

    }

    test("test_gatk4_indexfeaturefile_vcf") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/gvcf/test.genome.vcf', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out.versions).match() },
                { assert snapshot(file(process.out.index.get(0).get(1)).name).match("test.genome.vcf.idx") },
            )
        }

    }

    test("test_gatk4_indexfeaturefile_vcf_gz") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/gvcf/test.genome.vcf.gz', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() },
                { assert snapshot(file(process.out.index.get(0).get(1)).name).match("test.genome.vcf.gz.tbi") },
            )
        }

    }

}
