nextflow_process {

    name "Test Process VIBER"
    script "../main.nf"
    process "VIBER"

    tag "modules"
    tag "modules_nfcore"
    tag "viber"

    test("viber - rds") {
        config "./nextflow.config"
        when {
            process {
                """
                input[0] = [
                    meta = [ id : "test", patient : "HCC1395", tumour_sample : "HCC1395_HCC1395T" ],
                    file(params.modules_testdata_base_path + "delete_me/viber/HCC1395_WXS_HCC1395_multi_cnaqc_ALL.rds", checkIfExists: true),
                    [ 'HCC1395_HCC1395T' ]
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out.versions).match() },
                { assert file(process.out.viber_rds[0][1]).exists() },
                { assert file(process.out.viber_heuristic_rds[0][1]).exists() },
                { assert file(process.out.viber_plots_rds[0][1]).exists() },
                { assert file(process.out.viber_heuristic_plots_rds[0][1]).exists() },
                { assert file(process.out.viber_report_rds[0][1]).exists() },
                { assert file(process.out.viber_report_png[0][1]).exists() },
                { assert file(process.out.viber_report_pdf[0][1]).exists() }
            )
        }

    }

    test("viber - rds - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    meta = [ id : "test", patient : "HCC1395", tumour_sample : "HCC1395_HCC1395T" ],
                    file(params.modules_testdata_base_path + 'delete_me/viber/HCC1395_WXS_HCC1395_multi_cnaqc_ALL.rds', checkIfExists: true),
                    [ 'HCC1395_HCC1395T']
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("viber - csv") {
        config "./nextflow.config"
        when {
            process {
                """
                input[0] = [
                    meta = [ id : "test", patient : "HCC1395", tumour_sample : "HCC1395_HCC1395T" ],
                    file(params.modules_testdata_base_path + "delete_me/mobster/HCC1395_WXS_HCC1395_joint_table.csv", checkIfExists: true),
                    [ 'HCC1395_HCC1395T' ]
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out.versions).match() },
                { assert file(process.out.viber_rds[0][1]).exists() },
                { assert file(process.out.viber_heuristic_rds[0][1]).exists() },
                { assert file(process.out.viber_plots_rds[0][1]).exists() },
                { assert file(process.out.viber_heuristic_plots_rds[0][1]).exists() },
                { assert file(process.out.viber_report_rds[0][1]).exists() },
                { assert file(process.out.viber_report_png[0][1]).exists() },
                { assert file(process.out.viber_report_pdf[0][1]).exists() }
            )
        }

    }

    test("viber - csv - stub") {
        options "-stub"
        when {
            process {
                """
                input[0] = [
                    meta = [ id : "test", patient : "HCC1395", tumour_sample : "HCC1395_HCC1395T" ],
                    file(params.modules_testdata_base_path + 'delete_me/mobster/HCC1395_WXS_HCC1395_joint_table.csv', checkIfExists: true),
                    [ 'HCC1395_HCC1395T']
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }


}
