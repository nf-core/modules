nextflow_process {

    name "Test Process PURGEDUPS_CALCUTS"
    script "../main.nf"
    process "PURGEDUPS_CALCUTS"

    tag "modules"
    tag "modules_nfcore"
    tag "purgedups"
    tag "purgedups/pbcstat"
    tag "purgedups/calcuts"

    test("test_purgedups_calcuts") {
        setup {
            run("PURGEDUPS_PBCSTAT") {
                script "../../pbcstat/main.nf"
                process {
                    """
                    input[0] = [
                        [id:'test'],
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.paf', checkIfExists:true)
                    ]
                    """
                }
            }
        }
        when {
            process {
                """
                input[0] = PURGEDUPS_PBCSTAT.out.stat
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("test_purgedups_calcuts -- stub") {
        options "-stub"
        when {
            process {
                """
                input[0] = [[id:'test'], []]
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out,
                    path(process.out.versions[0]).yaml
                ).match() }
            )
        }
    }
}