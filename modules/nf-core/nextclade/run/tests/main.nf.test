
nextflow_process {

    name "Test Process NEXTCLADE_RUN"
    script "../main.nf"
    process "NEXTCLADE_RUN"

    tag "modules"
    tag "modules_nfcore"
    tag "nextclade"
    tag "nextclade/datasetget"
    tag "nextclade/run"

    test("sarscov2 default") {
        setup {
            run("NEXTCLADE_DATASETGET") {
                script "../../datasetget/main.nf"
                process {
                    """
                    input[0] = 'nextstrain/sars-cov-2/wuhan-hu-1/orfs'
                    input[1] = '2024-01-16--20-31-02Z'

                    """
                }
            }

        }

        when {
            process {
                """
                input[0] = Channel.of([
                    [id: 'test'],
                    [file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true) ]
                    ])
				input[1] = NEXTCLADE_DATASETGET.out.dataset
                """
            }
        }

        then {
            assertAll (
                { assert process.success },
                { assert snapshot(
                    path(process.out.json[0][1]).readLines()[3..10],
                    process.out.csv_errors,
                    process.out.csv_insertions,
                    process.out.csv_errors,
                    process.out.tsv,
                    process.out.json_auspice,
                    process.out.ndjson,
                    process.out.fasta_aligned,
                    process.out.fasta_translation,
                    process.out.nwk,
                    ).match() }
            )
        }
    }

    test("sarscov2 default-stub") {
        options '-stub'
        setup {
            run("NEXTCLADE_DATASETGET") {
                script "../../datasetget/main.nf"
                process {
                    """
                    input[0] = 'nextstrain/sars-cov-2/wuhan-hu-1/orfs'
                    input[1] = '2024-01-16--20-31-02Z'

                    """
                }
            }

        }

        when {
            process {
                """
                input[0] = Channel.of([
                    [id: 'test'],
                    [file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true) ]
                    ])
				input[1] = NEXTCLADE_DATASETGET.out.dataset
                """
            }
        }

        then {
            assertAll (
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

}
