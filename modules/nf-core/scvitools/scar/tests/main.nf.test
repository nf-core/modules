nextflow_process {
    name 'Test Process SCVITOOLS_SCAR'
    script '../main.nf'
    process 'SCVITOOLS_SCAR'

    tag "modules"
    tag "modules_nfcore"
    tag "scvitools/scar"
    tag "scvitools"

    test("Should run with default parameters") {
        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/scrnaseq/h5ad/SRR28679756_filtered_matrix.h5ad', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/scrnaseq/h5ad/SRR28679756_raw_matrix.h5ad', checkIfExists: true)
                ]
                input[1] = []
                input[2] = []
                input[3] = 1
                input[4] = 3
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out.versions,
                    file(process.out.h5ad[0][1]).name
                ).match() }
            )
        }
    }

        test("Should run from X to X") {
        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/scrnaseq/h5ad/SRR28679756_filtered_matrix.h5ad', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/scrnaseq/h5ad/SRR28679756_raw_matrix.h5ad', checkIfExists: true)
                ]
                input[1] = 'X'
                input[2] = 'X'
                input[3] = 1
                input[4] = 3
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out.versions,
                    file(process.out.h5ad[0][1]).name
                ).match() }
            )
        }
    }

    test("Should run with custom input and output layers") {
        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/scrnaseq/h5ad/SRR28679756_filtered_matrix.h5ad', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/scrnaseq/h5ad/SRR28679756_raw_matrix.h5ad', checkIfExists: true)
                ]
                input[1] = 'counts'
                input[2] = 'denoised'
                input[3] = 1
                input[4] = 3
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out.versions,
                    file(process.out.h5ad[0][1]).name
                ).match() }
            )
        }
    }

    test("Should fail with invalid input layer") {
        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/scrnaseq/h5ad/SRR28679756_filtered_matrix.h5ad', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/scrnaseq/h5ad/SRR28679756_raw_matrix.h5ad', checkIfExists: true)
                ]
                input[1] = 'invalid'
                input[2] = 'denoised'
                input[3] = 1
                input[4] = 3
                """
            }
        }
        then {
            assertAll(
                { assert process.failed }
            )
        }
    }

    test("Should run with default parameters - stub") {
        options '-stub'

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/scrnaseq/h5ad/SRR28679756_filtered_matrix.h5ad', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/scrnaseq/h5ad/SRR28679756_raw_matrix.h5ad', checkIfExists: true)
                ]
                input[1] = []
                input[2] = []
                input[3] = 1
                input[4] = 3
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}
