nextflow_process {

    name "Test Process SCVITOOLS_SOLO"
    script "../main.nf"
    process "SCVITOOLS_SOLO"

    tag "modules"
    tag "modules_nfcore"
    tag "scvitools"
    tag "scvitools/solo"

    test("Should run without batch column") {
        when {
            process {
                """
                input[0] = [
                    [id: 'test'],
                    file('https://github.com/nf-core/test-datasets/raw/876e5c90169736ddd52d7f6c38d935e57a86007a/samples/SAMN14430799_custom_emptydrops_filter_matrix.h5ad', checkIfExists: true)
                ]
                input[1] = []
                input[2] = 1
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("Should run with batch column") {
        when {
            process {
                """
                input[0] = [
                    [id: 'test'],
                    file('https://github.com/nf-core/test-datasets/raw/876e5c90169736ddd52d7f6c38d935e57a86007a/samples/SAMN14430799_custom_emptydrops_filter_matrix.h5ad', checkIfExists: true)
                ]
                input[1] = 'sample'
                input[2] = 1
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("Should fail with invalid batch column") {
        when {
            process {
                """
                input[0] = [
                    [id: 'test'],
                    file('https://github.com/nf-core/test-datasets/raw/876e5c90169736ddd52d7f6c38d935e57a86007a/samples/SAMN14430799_custom_emptydrops_filter_matrix.h5ad', checkIfExists: true)
                ]
                input[1] = 'invalid'
                input[2] = 1
                """
            }
        }

        then {
            assertAll(
                { assert process.failed }
            )
        }

    }

    test("Should run with batch column - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [id: 'test'],
                    file('https://github.com/nf-core/test-datasets/raw/876e5c90169736ddd52d7f6c38d935e57a86007a/samples/SAMN14430799_custom_emptydrops_filter_matrix.h5ad', checkIfExists: true)
                ]
                input[1] = []
                input[2] = 1
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
