# yaml-language-server: $schema=https://raw.githubusercontent.com/nf-core/modules/master/modules/meta-schema.json
name: "coverm_genome"
description: Calculate read coverage per-genome
keywords:
  - mapping
  - genomics
  - metagenomics
  - coverage
tools:
  - "coverm":
      description: "CoverM aims to be a configurable, easy to use and fast DNA read
        coverage and relative abundance calculator focused on metagenomics applications"
      homepage: "https://github.com/wwood/CoverM"
      documentation: "https://wwood.github.io/CoverM/coverm-contig.html"
      tool_dev_url: "https://github.com/wwood/CoverM"
      doi: "10.5281/zenodo.10531253"
      licence: ["GPL v3"]
      identifier: biotools:coverm

input:
  - - meta:
        type: map
        description: |
          Groovy Map containing sample information
          e.g. `[ id:'sample1', single_end:false ]`

    - input:
        type: file
        description: |
          FASTA/FASTQ containing reads (can be gzipped), or sorted BAM files of reads mapped to a reference.
          If supplying PE fasta for multiple samples, should be in the order "sample1_1, sample1_2, sample2_1, sample2_2...".
        pattern: "*.{fa,fq,fa.gz,fq.gz,bam}"
        ontologies:
          - edam: http://edamontology.org/format_1930 # FASTQ
          - edam: http://edamontology.org/format_2572 # BAM
  - - meta2:
        type: map
        description: |
          Groovy Map containing reference information
          e.g. `[ id:'sample1', single_end:false ]`

    - reference:
        type: file
        description: Genome FASTA file(s) to map reads to, or a directory containing genome FASTA files.
        pattern: "*.{fasta,fasta.gz,mmi,sti,fna,fna.gz,fa,fa.gz}"
        ontologies:
          - edam: http://edamontology.org/format_1929 # FASTA

  - bam_input:
      type: boolean
      description: True if input is bam files

  - interleaved:
      type: boolean
      description: True if input is interleaved fastq file

  - ref_mode:
      type: string
      description: |
        How to interpret the `reference` input:
          - `"dir"`: Treat as a directory containing one or more FASTA files.
          - `"file"`: Treat as a single FASTA file.
          - `"auto"`: Automatically detect based on whether the `reference` path is a directory or file.
        Defaults to `"auto"` if not provided.
      pattern: "^(dir|file|auto)$"

output:
  coverage:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'sample1', single_end:false ]`
      - "*.tsv":
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'sample1', single_end:false ]`
          pattern: "*.{tsv}"
          ontologies:
            - edam: http://edamontology.org/format_3475 # TSV
  versions:
    - versions.yml:
        type: file
        description: File containing software versions
        pattern: "versions.yml"
        ontologies:
          - edam: http://edamontology.org/format_3750 # YAML
authors:
  - "@vinisalazar"
maintainers:
  - "@vinisalazar"
