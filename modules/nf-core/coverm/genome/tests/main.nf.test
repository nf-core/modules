nextflow_process {

    name "Test Process COVERM_GENOME"
    script "../main.nf"
    process "COVERM_GENOME"

    tag "modules"
    tag "modules_nfcore"
    tag "coverm"
    tag "coverm/genome"

    test("coverm_genome - fastq") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    [
                        file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test1_1.fastq.gz', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test1_2.fastq.gz', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test2_1.fastq.gz', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test2_2.fastq.gz', checkIfExists: true),
                    ]
                ]
                input[1] = [
                    [ id:'test_ref' ],
                    file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/genome/genome.fna.gz')
                ]
                input[2] = false
                input[3] = false
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("coverm_genome - bam") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    [
                        file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/illumina/bam/test1.sorted.bam', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/illumina/bam/test2.sorted.bam', checkIfExists: true),
                    ]
                ]
                input[1] = [
                    [ id:'test_ref' ],
                    file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/genome/genome.fna.gz')
                ]
                input[2] = true
                input[3] = false
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    // // This test is disabled until we can figure out how to provide directories from the test data.
    // test("coverm_genome - directory") {

    //     when {
    //         process {
    //             """
    //             def _ = file(
    //                 params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/genome/genome.fna.gz',
    //                 checkIfExists: true,
    //                 stageAs: 'genome/genome.fna.gz'   // creates work/.../genome/ with the file inside
    //             )

    //             input[0] = [
    //                 [ id:'test', single_end:false ], // meta map
    //                 [
    //                     file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test1_1.fastq.gz', checkIfExists: true),
    //                     file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test1_2.fastq.gz', checkIfExists: true),
    //                 ]
    //             ]
    //             input[1] = [
    //                 [ id:'test_ref' ],
    //                 file('genome/', type: 'dir')
    //             ]
    //             input[2] = false
    //             input[3] = false
    //             """
    //         }
    //     }

    //     then {
    //         assertAll(
    //             { assert process.success },
    //             { assert snapshot(process.out).match() }
    //         )
    //     }

    // }

    test("coverm_genome - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    [
                        file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test1_1.fastq.gz', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/illumina/fastq/test1_2.fastq.gz', checkIfExists: true),
                    ]
                ]
                input[1] = [
                    [ id:'test_ref' ],
                    file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/genome/genome.fna.gz')
                ]
                input[2] = false
                input[3] = false
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}