name: "quilt_quilt"
description: QUILT is an R and C++ program for rapid genotype imputation from low-coverage sequence using a large reference panel.
keywords:
  - imputation
  - low-coverage
  - genotype
  - genomics
  - vcf
tools:
  - "quilt":
      description: "Read aware low coverage whole genome sequence imputation from a reference panel"
      homepage: "https://github.com/rwdavies/quilt"
      documentation: "https://github.com/rwdavies/quilt"
      tool_dev_url: "https://github.com/rwdavies/quilt"
      doi: "10.1038/s41588-021-00877-0"
      licence: "['GPL v3']"
input:
  - meta:
      type: map
      description: |
        Groovy Map containing sample information
        e.g. [ id:'test', single_end:false ]
  - bams:
      type: file
      description: (Mandatory) BAM/CRAM files
      pattern: "*.{bam,cram,sam}"
  - bais:
      type: file
      description: (Mandatory) BAM/CRAM index files
      pattern: "*.{bai}"
  - bamlist:
      type: file
      description: (Mandatory) "Path to file with bam file locations. File is one row per entry, path to bam files. Bam index files should exist in same directory as for each bam, suffixed either .bam.bai or .bai.
      pattern: "*.{txt}"
  - reference_haplotype_file:
      type: file
      description: (Mandatory) Reference haplotype file in IMPUTE format (file with no header and no rownames, one row per SNP, one column per reference haplotype, space separated, values must be 0 or 1)
      pattern: "*.{hap.gz}"
  - reference_legend_file:
      type: file
      description: (Mandatory) Reference haplotype legend file in IMPUTE format (file with one row per SNP, and a header including position for the physical position in 1 based coordinates, a0 for the reference allele, and a1 for the alternate allele).
      pattern: "*.{legend.gz}"
  - chr:
      type: string
      description: (Mandatory) What chromosome to run. Should match BAM headers.
  - regions_start:
      type: integer
      description: (Mandatory) When running imputation, where to start from. The 1-based position x is kept if regionStart <= x <= regionEnd.
  - regions_end:
      type: integer
      description: (Mandatory) When running imputation, where to stop.
  - buffer:
      type: integer
      description: Buffer of region to perform imputation over. So imputation is run form regionStart-buffer to regionEnd+buffer, and reported for regionStart to regionEnd, including the bases of regionStart and regionEnd.
  - ngen:
      type: integer
      description: Number of generations since founding or mixing. Note that the algorithm is relatively robust to this. Use nGen = 4 * Ne / K if unsure.
  - genetic_map_file:
      type: file
      description: (Optional) File with genetic map information, a file with 3 white-space delimited entries giving position (1-based), genetic rate map in cM/Mbp, and genetic map in cM. If no file included, rate is based on physical distance and expected rate (expRate).
      pattern: "*.{txt.gz}"
  - meta2:
      type: map
      description: |
        Groovy Map containing sample information
        e.g. [ id:'test', single_end:false ]
  - posfile:
      type: file
      description: (Optional) File with positions of where to impute, lining up one-to-one with genfile. File is tab seperated with no header, one row per SNP, with col 1 = chromosome, col 2 = physical position (sorted from smallest to largest), col 3 = reference base, col 4 = alternate base. Bases are capitalized.
      pattern: "*.{txt}"
  - phasefile:
      type: file
      description: (Optional) File with truth phasing results. Supersedes genfile if both options given. File has a header row with a name for each sample, matching what is found in the bam file. Each subject is then a tab seperated column, with 0 = ref and 1 = alt, separated by a vertical bar |, e.g. 0|0 or 0|1. Note therefore this file has one more row than posfile which has no header.
      pattern: "*.{txt}"
  - meta3:
      type: map
      description: |
        Groovy Map containing sample information
        e.g. [ id:'test', single_end:false ]
  - fasta:
      type: file
      description: (Optional) File with reference genome.
      pattern: "*.{txt.gz}"
output:
  - meta:
      type: map
      description: |
        Groovy Map containing sample information
        e.g. [ id:'test', single_end:false ]
  - versions:
      type: file
      description: File containing software versions
      pattern: "versions.yml"
  - vcf:
      type: file
      description: VCF file with both SNP annotation information and per-sample genotype information.
      pattern: "*.{vcf.gz}"
  - tbi:
      type: file
      description: TBI file of the VCF.
      pattern: "*.{vcf.gz.tbi}"
  - RData:
      type: directory
      description: Optional directory path to prepared RData file with reference objects (useful with --save_prepared_reference=TRUE).
authors:
  - "@atrigila"
maintainers:
  - "@atrigila"
