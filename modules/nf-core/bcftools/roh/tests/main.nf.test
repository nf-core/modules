
nextflow_process {

    name "Test Process BCFTOOLS_ROH"
    script "../main.nf"
    process "BCFTOOLS_ROH"

    tag "modules"
    tag "modules_nfcore"
    tag "bcftools"
    tag "bcftools/roh"

    test("test-bcftools-roh") {

        when {
            process {
                """
                input[0] = [ [ id:'test' ], // meta map
				    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/vcf/test.vcf.gz', checkIfExists: true),
				    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/vcf/test.vcf.gz.tbi', checkIfExists: true)
                ]
				input[1] = [[],[]]
				input[2] = []
				input[3] = []
				input[4] = []
				input[5] = []

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("test-bcftools-roh-stub") {
        options '-stub'
        when {
            process {
                """
                input[0] = [ [ id:'test' ], // meta map
				    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/vcf/test.vcf.gz', checkIfExists: true),
				    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/vcf/test.vcf.gz.tbi', checkIfExists: true)
                ]
				input[1] = [[],[]]
				input[2] = []
				input[3] = []
				input[4] = []
				input[5] = []

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

}
