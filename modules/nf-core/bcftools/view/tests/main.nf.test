nextflow_process {

    name "Test Process BCFTOOLS_VIEW"
    script "../main.nf"
    process "BCFTOOLS_VIEW"

    tag "modules"
    tag "modules_nfcore"
    tag "bcftools"
    tag "bcftools/view"

    config "./nextflow.config"

    test("sarscov2 - [vcf, tbi], [], [], []") {

        when {
            process {
                """
                input[0] = [
                    [ id:'out', single_end:false ], // meta map
                    file(params.test_data['sarscov2']['illumina']['test_vcf_gz'], checkIfExists: true),
                    file(params.test_data['sarscov2']['illumina']['test_vcf_gz_tbi'], checkIfExists: true)
                ]
                input[1] = []
                input[2] = []
                input[3] = []
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out.vcf,
                    process.out.versions
                ).match() }
            )
        }

    }

    test("sarscov2 - [vcf, tbi], vcf, tsv, []") {

        when {
            process {
                """
                input[0] = [
                    [ id:'out', single_end:false ], // meta map
                    file(params.test_data['sarscov2']['illumina']['test_vcf_gz'], checkIfExists: true),
                    file(params.test_data['sarscov2']['illumina']['test_vcf_gz_tbi'], checkIfExists: true)
                ]
                input[1] = file(params.test_data['sarscov2']['illumina']['test3_vcf_gz'], checkIfExists: true)
                input[2] = file(params.test_data['sarscov2']['illumina']['test2_vcf_targets_tsv_gz'], checkIfExists: true)
                input[3] = []
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out.vcf,
                    process.out.versions
                ).match() }
            )
        }

    }

    test("sarscov2 - [vcf, tbi], [], [], [] - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'out', single_end:false ], // meta map
                    file(params.test_data['sarscov2']['illumina']['test_vcf_gz'], checkIfExists: true),
                    file(params.test_data['sarscov2']['illumina']['test_vcf_gz_tbi'], checkIfExists: true)
                ]
                input[1] = []
                input[2] = []
                input[3] = []
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    file(process.out.vcf[0][1]).name,
                    process.out.versions
                ).match() }
            )
        }

    }

}
