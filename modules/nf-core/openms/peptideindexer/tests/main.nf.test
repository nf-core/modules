nextflow_process {

    name "Test Process OPENMS_PEPTIDEINDEXER"
    script "../main.nf"
    process "OPENMS_PEPTIDEINDEXER"
    config "./nextflow.config"

    tag "modules"
    tag "modules_nfcore"
    tag "openms"
    tag "openms/decoydatabase"
    tag "openms/peptideindexer"

    setup {
        run("OPENMS_DECOYDATABASE") {
            script "../../decoydatabase/main.nf"
            process {
                """
                input[0] = [
                    [id:'test'],
                    file(params.test_data['proteomics']['database']['yeast_ups'], checkIfExists: true)
                ]
                """
            }
        }
    }

   test("proteomics - refresh_idxml") {

        when {
            process {
                """
                input[0] = [
                    [id:'test'],
                    file(params.test_data['proteomics']['openms']['idxml1'], checkIfExists: true)
                ]
                input[1] = OPENMS_DECOYDATABASE.out.decoy_fasta

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("proteomics - refresh_idxml - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [id:'test'],
                    file(params.test_data['proteomics']['openms']['idxml1'], checkIfExists: true)
                ]
                input[1] = OPENMS_DECOYDATABASE.out.decoy_fasta

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
