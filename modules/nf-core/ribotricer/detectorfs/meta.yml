# yaml-language-server: $schema=https://raw.githubusercontent.com/nf-core/modules/master/modules/meta-schema.json
name: "ribotricer_detectorfs"
description: "Accurate detection of short and long active ORFs using Ribo-seq data"
keywords:
  - riboseq
  - orf
  - genomics
tools:
  - "ribotricer":
      description: "Python package to detect translating ORF from Ribo-seq data"
      homepage: "https://github.com/smithlabcode/ribotricer"
      documentation: "https://github.com/smithlabcode/ribotricer"
      tool_dev_url: "https://github.com/smithlabcode/ribotricer"
      doi: "10.1093/bioinformatics/btz878"
      licence: ["GNU General Public v3 (GPL v3)"]
      identifier: biotools:ribotricer

input:
  - - meta:
        type: map
        description: |
          Map containing riboseq sample information
          e.g. `[ id:'sample1', single_end:false, strandedness: 'single' ]
    - bam:
        type: file
        description: "BAM/CRAM/SAM file"
        pattern: "*.{bam,cram,sam}"
    - bai:
        type: file
        description: "Index for sorted BAM/CRAM/SAM file"
        pattern: "*.{bai}"
  - - meta2:
        type: map
        description: |
          Map containing reference information for the candidate ORFs
          e.g. `[ id:'Ensembl human v.111' ]`
    - candidate_orfs:
        type: file
        description: "TSV file with candidate ORFs from 'ribotricer prepareorfs'"
        pattern: "*.tsv"
output:
  - protocol:
      - meta:
          type: map
          description: |
            Groovy Map containing riboseq sample information
            e.g. `[ id:'sample1', single_end:false ]
      - "*_protocol.txt":
          type: file
          description: "txt file containing inferred protocol if it was inferred (not
            supplied as input)"
          pattern: "*_protocol.txt"
  - bam_summary:
      - meta:
          type: map
          description: |
            Groovy Map containing riboseq sample information
            e.g. `[ id:'sample1', single_end:false ]
      - "*_bam_summary.txt":
          type: file
          description: "Text summary of reads found in the BAM"
          pattern: "*_bam_summary.txt"
  - read_length_dist:
      - meta:
          type: map
          description: |
            Groovy Map containing riboseq sample information
            e.g. `[ id:'sample1', single_end:false ]
      - "*_read_length_dist.pdf":
          type: file
          description: "PDF-format read length distribution as quality control"
          pattern: "*_read_length_dist.pdf"
  - metagene_profile_5p:
      - meta:
          type: map
          description: |
            Groovy Map containing riboseq sample information
            e.g. `[ id:'sample1', single_end:false ]
      - "*_metagene_profiles_5p.tsv":
          type: file
          description: "Metagene profile aligning with the start codon"
          pattern: "*_metagene_profiles_5p.tsv"
  - metagene_profile_3p:
      - meta:
          type: map
          description: |
            Groovy Map containing riboseq sample information
            e.g. `[ id:'sample1', single_end:false ]
      - "*_metagene_profiles_3p.tsv":
          type: file
          description: "Metagene profile aligning with the stop codon"
          pattern: "*_metagene_profiles_3p.tsv"
  - metagene_plots:
      - meta:
          type: map
          description: |
            Groovy Map containing riboseq sample information
            e.g. `[ id:'sample1', single_end:false ]
      - "*_metagene_plots.pdf":
          type: file
          description: "Metagene plots for quality control"
          pattern: "*_metagene_plots.pdf"
  - psite_offsets:
      - meta:
          type: map
          description: |
            Groovy Map containing riboseq sample information
            e.g. `[ id:'sample1', single_end:false ]
      - "*_psite_offsets.txt":
          type: file
          description: |
            "If the P-site offsets are not provided, txt file containing the
            derived relative offsets"
          pattern: "*_psite_offsets.txt"
  - pos_wig:
      - meta:
          type: map
          description: |
            Groovy Map containing riboseq sample information
            e.g. `[ id:'sample1', single_end:false ]
      - "*_pos.wig":
          type: file
          description: "Positive strand WIG file for visualization in Genome Browser"
          pattern: "*_pos.wig"
  - neg_wig:
      - meta:
          type: map
          description: |
            Groovy Map containing riboseq sample information
            e.g. `[ id:'sample1', single_end:false ]
      - "*_neg.wig":
          type: file
          description: "Negative strand WIG file for visualization in Genome Browser"
          pattern: "*_neg.wig"
  - orfs:
      - meta:
          type: map
          description: |
            Groovy Map containing riboseq sample information
            e.g. `[ id:'sample1', single_end:false ]
      - "*_translating_ORFs.tsv":
          type: file
          description: |
            "TSV with ORFs assessed as translating in this BAM file. You can output
            all ORFs regardless of the translation status with option --report_all"
          pattern: "*_translating_ORFs.tsv"
  - versions:
      - versions.yml:
          type: file
          description: File containing software versions
          pattern: "versions.yml"
authors:
  - "@pinin4fjords"
maintainers:
  - "@pinin4fjords"
