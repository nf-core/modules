nextflow_process {

    name "Test Process VCLUST_ALIGN"
    script "../main.nf"
    process "VCLUST_ALIGN"

    tag "modules"
    tag "modules_nfcore"
    tag "vclust"
    tag "vclust/align"
    tag "vclust/prefilter"

    test("sarscov2 - contigs") {

        when {
            process {
                """

                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fasta/contigs.fasta', checkIfExists: true),
                ]
                input[1] = [[:], []]
                input[2] = false
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("sarscov2 - contigs - save alignment") {

        when {
            process {
                """

                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fasta/contigs.fasta', checkIfExists: true),
                ]
                input[1] = [[:], []]
                input[2] = true
                """
            }
        }

        then {
            def sorted_alignment = path(process.out.aln[0][1]).csv(sep:"\t").sort() // even when sorted snapshot's don't match, table to big for readable snapshot
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out.tsv,
                    process.out.ids,
                    sorted_alignment.columnNames,
                    sorted_alignment.rowCount,
                    process.out.versions).match()
                }
            )
        }

    }

    test("sarscov2 - contigs - with prefilter") {

        setup {
            run("VCLUST_PREFILTER") {
                script "../../prefilter/main.nf"
                process {
                    """
                    input[0] = [
                        [ id:'test', single_end:false ], // meta map
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fasta/contigs.fasta', checkIfExists: true),
                    ]
                    """
                }
            }
        }

        when {
            process {
                """

                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fasta/contigs.fasta', checkIfExists: true),
                ]
                input[1] = VCLUST_PREFILTER.out.txt
                input[2] = false
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("sarscov2 - contigs - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fasta/contigs.fasta', checkIfExists: true),
                ]
                input[1] = [[:], []]
                input[2] = false
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
