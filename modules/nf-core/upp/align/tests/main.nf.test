nextflow_process {

    name "Test Process UPP_ALIGN"
    script "../main.nf"
    process "UPP_ALIGN"

    tag "modules"
    tag "modules_nfcore"
    tag "upp"
    tag "upp/align"
    tag "famsa/guidetree"

    test("fasta - align_sequence - uncompressed") {
        config "./nextflow.config"

        when {
            process {
                """
                    input[0] = [ [ id:'test' ],
                    file("https://raw.githubusercontent.com/nf-core/test-datasets/multiplesequencealign/testdata/setoxin-ref.fa", checkIfExists: true)
                    ]
                    input[1] = [[:],[]]
                    input[2] = false
                    """
            }
        }

        then {
            assertAll(
                    { assert process.success },
                    { assert snapshot(process.out).match() }
                    )
        }
    }

    test("fasta - with_tree - compressed") {
        config "./nextflow.config"

        setup {

            run("FAMSA_GUIDETREE") {
                script "../../../famsa/guidetree/main.nf"
                process {
                    """
                    input[0] = [ [ id:'tree' ],
                                file("https://raw.githubusercontent.com/nf-core/test-datasets/multiplesequencealign/testdata/setoxin-ref.fa", checkIfExists: true)
                               ]

                    """
                }
            }
        }
        when {
            process {
                """
                    input[0] = [ [ id:'test_tree' ],
                    file("https://raw.githubusercontent.com/nf-core/test-datasets/multiplesequencealign/testdata/setoxin-ref.fa", checkIfExists: true)
                    ]
                    input[1] = FAMSA_GUIDETREE.out.tree.collect{ meta, tree -> tree }.map{ tree -> [[ id: 'test_tree'], tree]}
                    input[2] = true
                    """
            }
        }

        then {
            assertAll(
                    { assert process.success },
                    { assert snapshot(process.out).match()}
            )
        }
    }

    test("stub") {
        config "./nextflow.config"

        options "-stub"
        when {
            process {
                """
                    input[0] = [ [ id:'test' ],
                    file("https://raw.githubusercontent.com/nf-core/test-datasets/multiplesequencealign/testdata/setoxin-ref.fa", checkIfExists: true)
                    ]
                    input[1] = [[:],[]]
                    input[2] = false
                    """
            }
        }

        then {
            assertAll(
                    { assert process.success },
                    { assert snapshot(process.out).match()}
                    )
        }
    }
}
