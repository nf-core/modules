# yaml-language-server: $schema=https://raw.githubusercontent.com/nf-core/modules/master/modules/yaml-schema.json
name: "ngscheckmate_patterngenerator"
description: Determining whether sequencing data comes from the same individual by
  using SNP matching. This module generates PT files from a bed file containing individual
  positions.
keywords:
  - ngscheckmate
  - matching
  - snp
  - qc
tools:
  - ngscheckmate:
      description: NGSCheckMate is a software package for identifying next generation
        sequencing (NGS) data files from the same individual, including matching between
        DNA and RNA.
      homepage: https://github.com/parklab/NGSCheckMate
      documentation: https://github.com/parklab/NGSCheckMate
      tool_dev_url: https://github.com/parklab/NGSCheckMate
      doi: "10.1093/nar/gkx193"
      licence: ["MIT"]
      identifier: biotools:ngscheckmate
input:
  - - meta:
        type: map
        description: |
          Groovy Map containing sample information about the bed file
          e.g. `[ id:'test', single_end:false ]`
    - bed:
        type: file
        description: BED file containing population-level SNPs to use
        pattern: "*.bed"
  - - meta2:
        type: map
        description: |
          Groovy Map containing sample information about the fasta genome
          e.g. `[ id:'test', single_end:false ]`
    - fasta:
        type: file
        description: Genome fasta file
        pattern: "*.fasta"
  - - meta3:
        type: map
        description: |
          Groovy Map containing sample information
          e.g. `[ id:'sample1', single_end:false ]`
    - bowtie_index:
        type: directory
        description: Folder of Bowtie genome index files
output:
  - pt:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. `[ id:'test', single_end:false ]`
      - "*.pt":
          type: file
          description: Generated binary pattern file, containing FASTQ strings to match
            from within raw data
          pattern: "*.pt"
  - versions:
      - versions.yml:
          type: file
          description: File containing software versions
          pattern: "versions.yml"
authors:
  - "@sppearce"
maintainers:
  - "@sppearce"
