nextflow_process {

    name "Test Process NGSCHECKMATE_FASTQ"
    script "../main.nf"
    process "NGSCHECKMATE_FASTQ"
    config "./nextflow.config"

    tag "modules"
    tag "modules_nfcore"
    tag "ngscheckmate"
    tag "ngscheckmate/fastq"
    tag "ngscheckmate/patterngenerator"
    tag "gawk"
    tag "bedtools/makewindows"
    tag "bowtie/build"

    setup {

        run("GAWK" , alias: "GAWK_FAI") {
            script "../../../gawk/main.nf"
            process {
                """
                input[0] = [
                    [ id: 'sarscov2' ],
                    file(params.test_data['sarscov2']['genome']['genome_fasta_fai'], checkIfExists: true)
                    ]
                input[1] = []
                """
            }
        }

        run("BEDTOOLS_MAKEWINDOWS") {
            script "../../../bedtools/makewindows/main.nf"
            process {
                """
                input[0] = GAWK_FAI.out.output
                """
            }
        }

        run("GAWK" , alias: "GAWK_BED") {
            script "../../../gawk/main.nf"
            process {
                """
                input[0] = BEDTOOLS_MAKEWINDOWS.out.bed
                input[1] = []
                """
            }
        }

        run("BOWTIE_BUILD") {
            script "../../../bowtie/build/main.nf"
            process {
                """
                input[0] = file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true)
                """
            }
        }

        run("NGSCHECKMATE_PATTERNGENERATOR") {
            script "../../patterngenerator/main.nf"
            process {
                """
                input[0] = GAWK_BED.out.output
                input[1] = [
                    [ id: 'sarscov2' ],
                    file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true)
                ]
                input[2] = BOWTIE_BUILD.out.index
                """
            }
        }

    }

    test("sarscov2 - bam") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test_paired', single_end:false ], // meta map
                    [
                        file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'], checkIfExists: true),
                        file(params.test_data['sarscov2']['illumina']['test_2_fastq_gz'], checkIfExists: true)
                    ]
                ]
                input[1] = NGSCHECKMATE_PATTERNGENERATOR.out.pt
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("sarscov2 - bam - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'test_paired', single_end:false ], // meta map
                    [
                        file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'], checkIfExists: true),
                        file(params.test_data['sarscov2']['illumina']['test_2_fastq_gz'], checkIfExists: true)
                    ]
                ]
                input[1] = NGSCHECKMATE_PATTERNGENERATOR.out.pt
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
