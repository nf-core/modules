
nextflow_process {

    name "Test Process PYDAMAGE_ANALYZE"
    script "../main.nf"
    process "PYDAMAGE_ANALYZE"

    tag "modules"
    tag "modules_nfcore"
    tag "pydamage"
    tag "pydamage/analyze"

    test("homo_sapiens") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ],
				    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/bam/test.paired_end.sorted.bam', checkIfExists: true),
				    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/bam/test.paired_end.sorted.bam.bai', checkIfExists: true)
                ]

                """
            }
        }

        then {
            assert process.success
            assertAll(
                { assert snapshot(
                    process.out,
                    path(process.out.versions[0]).yaml
                    ).match()
                }
            )
        }
    }

    test("homo_sapiens -- stub") {
        options '-stub'
        when {
            process {
                """
                input[0] = [
                    [ id:'test'],
				    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/bam/test.paired_end.sorted.bam', checkIfExists: true),
				    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/bam/test.paired_end.sorted.bam.bai', checkIfExists: true)
                ]

                """
            }
        }

        then {
            assert process.success
            assertAll(
                { assert snapshot(
                    process.out,
                    path(process.out.versions[0]).yaml
                    ).match()
                }
            )
        }
    }

}
