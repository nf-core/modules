nextflow_process {

    name "Test Process MODKIT_BEDMETHYLTOBIGWIG"
    script "../main.nf"
    process "MODKIT_BEDMETHYLTOBIGWIG"

    tag "modules"
    tag "modules_nfcore"
    tag "modkit"
    tag "modkit/bedmethyltobigwig"
    tag "modkit/pileup"

    setup {
        run("MODKIT_PILEUP"){
            script "../../pileup/main.nf"
            process {
                """
                input[0] = [
                    [ id: 'test' ],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/nanopore/bam/test.sorted.phased.bam', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/nanopore/bam/test.sorted.phased.bam.bai', checkIfExists: true)
                ]
                input[1] = [[],[],[]]
                input[2] = [[],[]]
                """
            }
        }
    }

    test("homo sapiens - bedmethyl, fai, list") {

        when {
            process {
                """
                input[0] = MODKIT_PILEUP.out.bed
                input[1] = [
                    [ id : 'hg38' ],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta.fai', checkIfExists: true)
                ]
                input[2] = ['h', 'm']
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("homo sapiens - bedmethyl, fai, string") {

        when {
            process {
                """
                input[0] = MODKIT_PILEUP.out.bed
                input[1] = [
                    [ id : 'hg38' ],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta.fai', checkIfExists: true)
                ]
                input[2] = 'h,m'
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("homo sapiens - bedmethyl, fai, list - stub") {

        when {
            process {
                """
                input[0] = MODKIT_PILEUP.out.bed
                input[1] = [
                    [ id : 'hg38' ],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta.fai', checkIfExists: true)
                ]
                input[2] = ['h', 'm']
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}
