nextflow_process {
    name 'Test Process CELLBENDER_MERGE'
    script '../main.nf'
    process 'CELLBENDER_MERGE'

    tag "modules"
    tag "modules_nfcore"
    tag "cellbender/merge"
    tag "cellbender"

    test("test_cellbender_merge") {
        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/scrnaseq/h5ad/SRR28679759_filtered_matrix.h5ad', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/scrnaseq/h5ad/SRR28679759_raw_matrix.h5ad', checkIfExists: true),
                    file("https://raw.githubusercontent.com/nf-core/test-datasets/scdownstream/intermediates/SRR28679759_cellbender.h5", checkIfExists: true)
                ]
                """
            }
        }
        then {
            assertAll(
                {assert process.success},
                {assert snapshot(process.out).match()},
            )
        }
    }

    test("test_cellbender_merge - stub") {
        options '-stub'
        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/scrnaseq/h5ad/SRR28679759_filtered_matrix.h5ad', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/scrnaseq/h5ad/SRR28679759_raw_matrix.h5ad', checkIfExists: true),
                    file("https://raw.githubusercontent.com/nf-core/test-datasets/scdownstream/intermediates/SRR28679759_cellbender.h5", checkIfExists: true)
                ]
                """
            }
        }
        then {
            assertAll(
                {assert process.success},
                {assert snapshot(process.out).match()}
            )
        }
    }
}
