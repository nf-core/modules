nextflow_process {

    name "Test Process PBBAM_PBMERGE"
    script "../main.nf"
    config "./nextflow.config"
    process "PBBAM_PBMERGE"

    tag "modules"
    tag "modules_nfcore"
    tag "pbbam"
    tag "pbbam/pbmerge"

    test("PacBio pbbam - Merging Bam test") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    [
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/pacbio/bam/alz.ccs.fl.NEB_5p--NEB_Clontech_3p.flnc.clustered.bam'           , checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/pacbio/bam/alz.ccs.fl.NEB_5p--NEB_Clontech_3p.flnc.clustered.singletons.bam', checkIfExists: true)
                    ]
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("PacBio pbbam - Merging Bam test - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    [
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/pacbio/bam/alz.ccs.fl.NEB_5p--NEB_Clontech_3p.flnc.clustered.bam'           , checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/pacbio/bam/alz.ccs.fl.NEB_5p--NEB_Clontech_3p.flnc.clustered.singletons.bam', checkIfExists: true)
                    ]
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}
