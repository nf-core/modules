name: fast2q
description: A program that counts sequence occurrences in FASTQ files.
keywords:
  - CRISPRi
  - FASTQ
  - genomics
tools:
  - 2FAST2Q:
      description: |
        2FAST2Q is ideal for CRISPRi-Seq, and for extracting and counting any kind of information from reads in the fastq format, such as barcodes in Bar-seq experiments.
        2FAST2Q can work with sequence mismatches, Phred-score, and be used to find and extract unknown sequences delimited by known sequences.
        2FAST2Q can extract multiple features per read using either fixed positions or delimiting search sequences.
      homepage: https://github.com/afombravo/2FAST2Q
      doi: 10.7717/peerj.14041
      licence: ["GPL-3.0-or-later"]
      identifier: ""

input:
  - - meta:
        type: map
        description: |
          Groovy Map containing output name.
          e.g. [ id:'test']
    - fastq:
        type: directory
        description: Folder with FASTQ file(s). 2FAST2Q automatically picks up all the FASTQ files inside the provided folder.
        pattern: "*.{fastq,gz}"

  - - meta2:
        type: map
        description: |
          Groovy Map containing sample information
          e.g. [ id:'library_name', multiple_features_per_read:false ]
    - library:
        type: file
        description: .csv library file following the ´Feature_name,sequence´ or ´Feature_name,sequence1:sequence2´ format. See 2FAST2Q instructions for more information.
        pattern: "*.csv"

output:
  - count_matrix:
      - meta:
          type: map
          description: |
            Groovy Map containing output name.
            e.g. [ id:'test' ]
      - ${prefix}.csv:
          type: file
          description: |
            Count matrix csv file
  - stats:
      - meta:
          type: map
          description: |
            Groovy Map containing output name.
            e.g. [ id:'test' ]
      - ${prefix}_stats.csv:
          type: file
          description: |
            File containing all the relevant statistics such as quality passing reads, aligned reads, total reads, and sample run times.
  - distribution_plot:
      - meta:
          type: map
          description: |
            Groovy Map containing output name.
            e.g. [ id:'test' ]
      - ${prefix}_distribution_plot.png:
          type: file
          description: |
            Violin plot of the distribution of reads per feature across all samples.
  - reads_plot:
      - meta:
          type: map
          description: |
            Groovy Map containing output name.
            e.g. [ id:'test' ]
      - ${prefix}_reads_plot.png:
          type: file
          description: |
            Bar plot with the distribution of reads, in absolute numbers, binned to the different quality metrics indicated in the statistics.csv
  - reads_plot_percentage:
      - meta:
          type: map
          description: |
            Groovy Map containing output name.
            e.g. [ id:'test' ]
      - ${prefix}_reads_plot_percentage.png:
          type: file
          description: |
            Bar plot with the distribution of reads, in percentage, binned to the different quality metrics indicated in the statistics.csv
  - versions:
      - versions.yml:
          type: file
          description: File containing software versions
          pattern: "versions.yml"
authors:
  - "@afombravo"
maintainers:
  - "@afombravo"
