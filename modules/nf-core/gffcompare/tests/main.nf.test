
nextflow_process {

    name "Test Process GFFCOMPARE"
    script "../main.nf"
    process "GFFCOMPARE"

    tag "modules"
    tag "modules_nfcore"
    tag "gffcompare"

    test("test-gffcompare") {

        when {
            process {
                """
                input[0] = [
				    [ id:'test' ], // meta map
				    [ file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.gff3', checkIfExists: true) ],
				]
				input[1] = [
				    [ id:'sarscov2' ], // meta map
				    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true),
				    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta.fai', checkIfExists: true)
				]
				input[2] = [
				    [ id:'sarscov2' ], // meta map
				    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.gtf', checkIfExists: true)
				]

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("test-gffcompare-combine") {

        when {
            process {
                """
                input[0] = [ [ id:'test' ], // meta map
				    [
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.gff3', checkIfExists: true),
				        file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.gtf', checkIfExists: true)
                    ]
				]
				input[1] = [
				    [ id:'sarscov2' ], // meta map
				    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true),
				    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta.fai', checkIfExists: true)
				]
				input[2] = [[id:'sarscov2'], []]

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("test-gffcompare-combine-stub") {
        options '-stub'
        when {
            process {
                """
                input[0] = [ [ id:'test' ], // meta map
				    [
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.gff3', checkIfExists: true),
				        file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.gtf', checkIfExists: true)
                    ]
				]
				input[1] = [
				    [ id:'sarscov2' ], // meta map
				    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true),
				    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta.fai', checkIfExists: true)
				]
				input[2] = [[id:'sarscov2'], []]

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

}
