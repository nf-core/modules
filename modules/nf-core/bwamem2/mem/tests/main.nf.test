nextflow_process {

    name "Test Process BWAMEM2_MEM"
    script "../main.nf"
    process "BWAMEM2_MEM"

    tag "modules"
    tag "modules_nfcore"
    tag "bwamem2"
    tag "bwamem2/mem"
    tag "bwamem2/index"

    test("sarscov2 - fastq, index, false") {

        setup {
            run("BWAMEM2_INDEX") {
                script "../../index/main.nf"
                process {
                    """
                    input[0] = Channel.of([
                        [:], // meta map
                        [file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)]
                    ])
                    """
                }
            }
        }

        when {
            process {
                """
                input[0] = Channel.of([
                    [ id:'test', single_end:true ], // meta map
                    [file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true)]
                ])
                input[1] = BWAMEM2_INDEX.out.index
                input[2] = false
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    file(process.out.bam[0][1]).name,
                    process.out.versions
                ).match() }
            )
        }

    }

    test("sarscov2 - fastq, index, true") {

        setup {
            run("BWAMEM2_INDEX") {
                script "../../index/main.nf"
                process {
                    """
                    input[0] = Channel.of([
                        [:], // meta map
                        [file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)]
                    ])
                    """
                }
            }
        }

        when {
            process {
                """
                input[0] = Channel.of([
                    [ id:'test', single_end:true ], // meta map
                    [file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true)]
                ])
                input[1] = BWAMEM2_INDEX.out.index
                input[2] = true
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    file(process.out.bam[0][1]).name,
                    process.out.versions
                ).match() }
            )
        }

    }

    test("sarscov2 - [fastq1, fastq2], index, false") {

        setup {
            run("BWAMEM2_INDEX") {
                script "../../index/main.nf"
                process {
                    """
                    input[0] = Channel.of([
                        [:], // meta map
                        [file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)]
                    ])
                    """
                }
            }
        }

        when {
            process {
                """
                input[0] = Channel.of([
                    [ id:'test', single_end:false ], // meta map
                    [
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_2.fastq.gz', checkIfExists: true)
                    ]
                ])
                input[1] = BWAMEM2_INDEX.out.index
                input[2] = false
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    file(process.out.bam[0][1]).name,
                    process.out.versions
                ).match() }
            )
        }

    }

    test("sarscov2 - [fastq1, fastq2], index, true") {

        setup {
            run("BWAMEM2_INDEX") {
                script "../../index/main.nf"
                process {
                    """
                    input[0] = Channel.of([
                        [:], // meta map
                        [file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)]
                    ])
                    """
                }
            }
        }

        when {
            process {
                """
                input[0] = Channel.of([
                    [ id:'test', single_end:false ], // meta map
                    [
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_2.fastq.gz', checkIfExists: true)
                    ]
                ])
                input[1] = BWAMEM2_INDEX.out.index
                input[2] = true
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    file(process.out.bam[0][1]).name,
                    process.out.versions
                ).match() }
            )
        }

    }

    test("sarscov2 - [fastq1, fastq2], index, true - stub") {

        options "-stub"

        setup {
            run("BWAMEM2_INDEX") {
                script "../../index/main.nf"
                process {
                    """
                    input[0] = Channel.of([
                        [:], // meta map
                        [file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)]
                    ])
                    """
                }
            }
        }

        when {
            process {
                """
                input[0] = Channel.of([
                    [ id:'test', single_end:false ], // meta map
                    [
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_2.fastq.gz', checkIfExists: true)
                    ]
                ])
                input[1] = BWAMEM2_INDEX.out.index
                input[2] = true
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    file(process.out.bam[0][1]).name,
                    process.out.versions
                ).match() }
            )
        }

    }

}
