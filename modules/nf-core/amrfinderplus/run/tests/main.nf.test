nextflow_process {

    name "Test Process AMRFINDERPLUS_RUN"
    script "../main.nf"
    process "AMRFINDERPLUS_RUN"

    tag "modules"
    tag "modules_nfcore"
    tag "amrfinderplus"
    tag "amrfinderplus/run"
    tag "amrfinderplus/update"

    setup {

        run("AMRFINDERPLUS_UPDATE") {
            script "modules/nf-core/amrfinderplus/update/main.nf"
            process {
                """
                """
            }
        }
    }

    test("amrfinderplus/run - haemophilus_influenzae - genome_fna_gz") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/prokaryotes/haemophilus_influenzae/genome/genome.fna.gz', checkIfExists: true)
                ]
                input[1] = AMRFINDERPLUS_UPDATE.out.db
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("amrfinderplus/run - haemophilus_influenzae - genome_fna_gz - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/prokaryotes/haemophilus_influenzae/genome/genome.fna.gz', checkIfExists: true)
                ]
                input[1] = AMRFINDERPLUS_UPDATE.out.db
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}
