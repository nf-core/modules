nextflow_process {

    name "Test Process RAW2OMETIFF"
    script "../main.nf"
    process "RAW2OMETIFF"

    tag "modules"
    tag "modules_nfcore"
    tag "raw2ometiff"
    tag "untar"

    test("raw2ometiff - zarr") {
        setup {
            run ("UNTAR") {
               script "../../untar/main.nf"
               process {
                    """
                    input[0] = Channel.fromList([
                        tuple([ id:'test'], // meta map
                        file(params.modules_testdata_base_path + 'imaging/ome-zarr/zarr.tar', checkIfExists: true))
                    ])
                    """
               }
            }
        }

        when {
            process {
                """
                input[0] =  UNTAR.out.untar
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out.versions,
                file(process.out.ometiff[0][1]).name).match() }
            )
        }
    }

    test("raw2ometiff - zarr - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = Channel.fromList([
                        tuple([ id:'test'], // meta map
                        file(params.modules_testdata_base_path + 'imaging/ome-zarr/zarr.tar', checkIfExists: true))
                    ])
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}
