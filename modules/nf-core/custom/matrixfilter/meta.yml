name: "custom_matrixfilter"
description: filter a matrix based on a minimum value and numbers of samples that
  must pass.
keywords:
  - matrix
  - filter
  - abundance
  - na
tools:
  - "matrixfilter":
      description: "filter a matrix based on a minimum value and numbers of samples"
      tool_dev_url: "https://github.com/nf-core/modules/blob/master/modules/nf-core/custom/matrixfilter/main.nf"
      identifier: ""
input:
  - - meta:
        type: map
        description: |
          Groovy Map containing information on matrix to be filtered, at a
          minimum an id. e.g. [ id:'test' ]
    - abundance:
        type: file
        description: |
          Raw TSV or CSV format abundance matrix with features (e.g.
          genes) by row and observations (e.g. samples) by column. All rownames
          from the sample sheet should be present in the columns.
  - - samplesheet_meta:
        type: map
        description: |
          Where samplesheet is provided, aroovy Map containing information on
          sample sheet, at a minimum an id.  e.g. [ id:'test' ]
    - samplesheet:
        type: file
        description: |
          Optional CSV or TSV format sample sheet with sample metadata. If
          provided this is used to infer minimum passing samples from group sizes
          present (see grouping_variable), but also to validate matrix columns.
          If not provided, all numeric columns are selected.
output:
  - filtered:
      - meta:
          type: map
          description: |
            Groovy Map containing information on experiment.
            e.g. [ id:'test' ]
      - "*.filtered.tsv":
          type: file
          description: Filtered version of input matrix
          pattern: "*.filtered.tsv"
  - tests:
      - meta:
          type: map
          description: |
            Groovy Map containing information on experiment.
            e.g. [ id:'test' ]
      - "*.tests.tsv":
          type: file
          description: Boolean matrix with pass/ fail status for each test on each feature
          pattern: "*.tests.tsv"
  - session_info:
      - meta:
          type: map
          description: |
            Groovy Map containing information on experiment.
            e.g. [ id:'test' ]
      - R_sessionInfo.log:
          type: file
          description: Log file containing R session information
          pattern: "*.log"
  - versions:
      - versions.yml:
          type: file
          description: File containing software versions
          pattern: "versions.yml"
authors:
  - "@pinin4fjords"
maintainers:
  - "@pinin4fjords"
