nextflow_process {

    name "Test Process CUSTOM_TABULARTOGSEACHIP"
    script "../main.nf"
    process "CUSTOM_TABULARTOGSEACHIP"

    tag "modules"
    tag "modules_nfcore"
    tag "custom"
    tag "custom/tabulartogseachip"

    test("test tsv to chip") {

        when {
            process {
                """
                input[0] = Channel
                    .fromPath(params.modules_testdata_base_path + 'genomics/mus_musculus/rnaseq_expression/SRP254919.salmon.merged.gene_counts.top1000cov.tsv', checkIfExists: true)
                    .map { it -> [
                        [id:it.baseName], it
                    ]}
                input[1] = Channel.of(['gene_id', 'gene_name'])
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out.chip,
                    process.out.versions
                ).match() }
            )
        }

    }

    test("test tsv to chip - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = Channel
                    .fromPath(params.modules_testdata_base_path + 'genomics/mus_musculus/rnaseq_expression/SRP254919.salmon.merged.gene_counts.top1000cov.tsv', checkIfExists: true)
                    .map { it -> [
                        [id:it.baseName], it
                    ]}
                input[1] = Channel.of(['gene_id', 'gene_name'])
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out.chip,
                    process.out.versions
                ).match() }
            )
        }

    }

}
