nextflow_process {

    name "Test Process CUSTOM_SHORTENFASTAIDS"
    script "../main.nf"
    process "CUSTOM_SHORTENFASTAIDS"

    tag "modules"
    tag "modules_nfcore"
    tag "custom"
    tag "custom/shortenfastaids"

    test("homo_sapiens-genome_fasta-no_change") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ],
                    file(params.test_data['homo_sapiens']['genome']['genome_fasta'], checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("sarscov2-genome_fasta-pattern_change") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ],
                    file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("homo_sapiens-genome2_fasta-length_change") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ],
                    file(params.test_data['homo_sapiens']['genome']['genome2_fasta'], checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("custom_fasta-comment_change") {

        when {
            process {
                """
                input[0] = Channel.of('>Chr1 This is a test comment', 'AGCTAGCT')
                | collectFile(name: 'sample.fasta', newLine: true)
                | map { file -> [ [ id:'test' ], file ] }
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ],
                    file(params.test_data['homo_sapiens']['genome']['genome_fasta'], checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
