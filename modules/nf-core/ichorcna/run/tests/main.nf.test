nextflow_process {

    name "Test Process ICHORCNA_RUN"
    script "../main.nf"
    process "ICHORCNA_RUN"

    tag "modules"
    tag "modules_nfcore"
    tag "ichorcna"
    tag "ichorcna/run"

    test("no_panel") {
        config "./nextflow.config"
        when {
            process {
                """
                input[0] = [ [ id:'test'], // meta map
                       file("https://raw.githubusercontent.com/gavinhalab/ichorCNA/master/inst/extdata/MBC_315.ctDNA.reads.wig", checkIfExists: true)
                     ]
                input[1] = file("https://raw.githubusercontent.com/gavinhalab/ichorCNA/master/inst/extdata/gc_hg19_1000kb.wig", checkIfExists: true)
                input[2] = file("https://raw.githubusercontent.com/gavinhalab/ichorCNA/master/inst/extdata/map_hg19_1000kb.wig", checkIfExists: true)
                input[3] = []
                input[4] = []
                input[5] = file("https://raw.githubusercontent.com/gavinhalab/ichorCNA/master/inst/extdata/GRCh37.p13_centromere_UCSC-gapTable.txt", checkIfExists: true)
                input[6] = []
                input[7] = []
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out.versions,
                    file(process.out.genome_plot.get(0).get(1)).name,
                    file(process.out.rdata.get(0).get(1)).name,
                    process.out.plots.get(0).get(1).size(),
                    path(process.out.cna_seg.get(0).get(1)).readLines()[0],
                    path(process.out.seg.get(0).get(1)).readLines()[0],
                    path(process.out.seg_txt.get(0).get(1)).readLines()[0],
                    path(process.out.corrected_depth.get(0).get(1)).readLines()[0],
                    path(process.out.ichorcna_params.get(0).get(1)).readLines()[0]
                ).match() }
            )
        }

    }

    test("no_panel - stub") {
        options "-stub"
        when {
            process {
                """
                input[0] = [ [ id:'test'], // meta map
                       file("https://raw.githubusercontent.com/gavinhalab/ichorCNA/master/inst/extdata/MBC_315.ctDNA.reads.wig", checkIfExists: true)
                     ]
                input[1] = file("https://raw.githubusercontent.com/gavinhalab/ichorCNA/master/inst/extdata/gc_hg19_1000kb.wig", checkIfExists: true)
                input[2] = file("https://raw.githubusercontent.com/gavinhalab/ichorCNA/master/inst/extdata/map_hg19_1000kb.wig", checkIfExists: true)
                input[3] = []
                input[4] = []
                input[5] = file("https://raw.githubusercontent.com/gavinhalab/ichorCNA/master/inst/extdata/GRCh37.p13_centromere_UCSC-gapTable.txt", checkIfExists: true)
                input[6] = []
                input[7] = []
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
