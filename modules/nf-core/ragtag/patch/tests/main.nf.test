// TODO nf-core: Once you have added the required tests, please run the following command to build this file:
// nf-core modules test ragtag/patch
nextflow_process {

    name "Test Process RAGTAG_PATCH"
    script "../main.nf"
    process "RAGTAG_PATCH"

    tag "modules"
    tag "modules_nfcore"
    tag "ragtag"
    tag "ragtag/patch"

    // TODO nf-core: Change the test name preferably indicating the test-data and file-format used
test("A. thaliana Col-0 test data - ragtag - patch") {

        when {
            process {
                """
                input[0] = [
                    [ id:'Col-0_2MB' ], // meta map
                    file('https://raw.githubusercontent.com/nf-core/test-datasets/genomeassembler/A_thaliana_Col-0_2mb/ONT-Col-0_flye_assembly.fasta.gz', checkIfExists: true),
                    file('https://raw.githubusercontent.com/nf-core/test-datasets/genomeassembler/A_thaliana_Col-0_2mb/Col-CEN_v1.2.Chr1_5MB-7MB.fasta.gz', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }
    test("A. thaliana Col-0 test data - ragtag - patch - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'Col-0_2MB' ], // meta map
                    file('https://raw.githubusercontent.com/nf-core/test-datasets/genomeassembler/A_thaliana_Col-0_2mb/ONT-Col-0_flye_assembly.fasta.gz', checkIfExists: true),
                    file('https://raw.githubusercontent.com/nf-core/test-datasets/genomeassembler/A_thaliana_Col-0_2mb/Col-CEN_v1.2.Chr1_5MB-7MB.fasta.gz', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

}
