nextflow_process {

    name "Test Process BIOMFORMAT_CONVERT"
    script "../main.nf"
    process "BIOMFORMAT_CONVERT"
    config "./nextflow.config"

    tag "modules"
    tag "modules_nfcore"
    tag "vsearch/cluster"
    tag "gunzip"
    tag "biomformat"
    tag "biomformat/convert"

    test("convert - to text") {

        setup {
            run ("VSEARCH_CLUSTER") {
                script "../../../vsearch/cluster/main.nf"
                process {
                    """
                    input[0] = [
                        [ id:'test', single_end:false ], // meta map
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true)
                    ]
                    """
                }
            }

            run ("GUNZIP") {

                script "../../../gunzip/main.nf"
                process {
                    """
                    input[0] = VSEARCH_CLUSTER.out.biom
                    """
                }
            }            
        }

        when {
            params {
                module_args   = '--to-tsv'
                vsearch_args  = '--id 0.8'
                vsearch_args2 = '--cluster_fast'
                vsearch_args3 = '--biomout'
            }

            process {
                """
                input[0] = GUNZIP.out.gunzip
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("convert - to json biom") {

        setup {
            run ("VSEARCH_CLUSTER") {
                script "../../../vsearch/cluster/main.nf"
                process {
                    """
                    input[0] = [
                        [ id:'test', single_end:false ], // meta map
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true)
                    ]
                    """
                }
            }

            run ("GUNZIP") {

                script "../../../gunzip/main.nf"
                process {
                    """
                    input[0] = VSEARCH_CLUSTER.out.otu
                    """
                }
            }            
        }

        when {
            params {
                module_args   = '--table-type="OTU table" --to-json'
                vsearch_args  = '--id 0.8'
                vsearch_args2 = '--cluster_fast'
                vsearch_args3 = '--otutabout'
            }

            process {
                """
                input[0] = GUNZIP.out.gunzip
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    path(process.out.biom[0][1]).json.findAll{it.key != "date"}.toString().md5(),
                    process.out.versions
                    ).match() 
                }
            )
        }

    }

    test("fails on identical filenames") {

        setup {
            run ("VSEARCH_CLUSTER") {
                script "../../../vsearch/cluster/main.nf"
                process {
                    """
                    input[0] = [
                        [ id:'test', single_end:false ], // meta map
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true)
                    ]
                    """
                }
            }

            run ("GUNZIP") {

                script "../../../gunzip/main.nf"
                process {
                    """
                    input[0] = VSEARCH_CLUSTER.out.biom
                    """
                }
            }            
        }

        when {
            params {
                module_args   = '-table-type="OTU table" --to-hdf5'
                vsearch_args  = '--id 0.8'
                vsearch_args2 = '--cluster_fast'
                vsearch_args3 = '--biomout'
            }            

            process {
                """
                input[0] = GUNZIP.out.gunzip
                """
            }
        }

        then {
            assertAll(
                { assert !process.success }
            )
        }

    }

    test("convert - to json biom - stub") {

        setup {
            run ("VSEARCH_CLUSTER") {
                script "../../../vsearch/cluster/main.nf"
                process {
                    """
                    input[0] = [
                        [ id:'test', single_end:false ], // meta map
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true)
                    ]
                    """
                }
            }

            run ("GUNZIP") {

                script "../../../gunzip/main.nf"
                process {
                    """
                    input[0] = VSEARCH_CLUSTER.out.otu
                    """
                }
            }            
        }

        options "-stub"

        when {
            params {
                module_args   = '--table-type="OTU table" --to-json'
                vsearch_args  = '--id 0.8'
                vsearch_args2 = '--cluster_fast'
                vsearch_args3 = '--otutabout'
            }

            process {
                """
                input[0] = GUNZIP.out.gunzip
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("convert - to text - stub") {

        setup {
            run ("VSEARCH_CLUSTER") {
                script "../../../vsearch/cluster/main.nf"
                process {
                    """
                    input[0] = [
                        [ id:'test', single_end:false ], // meta map
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true)
                    ]
                    """
                }
            }

            run ("GUNZIP") {

                script "../../../gunzip/main.nf"
                process {
                    """
                    input[0] = VSEARCH_CLUSTER.out.biom
                    """
                }
            }            
        }

        options "-stub"

        when {
            params {
                module_args   = '--to-tsv'
                vsearch_args  = '--id 0.8'
                vsearch_args2 = '--cluster_fast'
                vsearch_args3 = '--biomout'
            }            

            process {
                """
                input[0] = GUNZIP.out.gunzip
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
