nextflow_process {

    name "Test Process DEEPTOOLS_PLOTFINGERPRINT"
    script "../main.nf"
    process "DEEPTOOLS_PLOTFINGERPRINT"

    tag "modules"
    tag "modules_nfcore"
    tag "deeptools"
    tag "deeptools/plotfingerprint"

    test("homo_sampiens - bam") {

        when {
            process {
                """                
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/bam/test.paired_end.sorted.bam', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/bam/test.paired_end.sorted.bam.bai', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(file(process.out.pdf.get(0).get(1)).name,
                                  file(process.out.matrix.get(0).get(1)).name,
                                  process.out.metrics.collect { file(it[1]).readLines().contains("0.24184576629880325") },                                
                                  process.out.versions)
                                  .match()
                }
            )
        }
    }

    test("homo_sampiens - bam - stub") {

        options "-stub"

        when {
            process {
                """                
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/bam/test.paired_end.sorted.bam', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/bam/test.paired_end.sorted.bam.bai', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
            { assert process.success },
            { assert snapshot(process.out).match() }
            )
        }
    }
}
