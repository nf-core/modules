nextflow_process {

    name "Test Process DEEPTOOLS_BIGWIGCOMPARE"
    script "../main.nf"
    process "DEEPTOOLS_BIGWIGCOMPARE"

    tag "modules"
    tag "modules_nfcore"
    tag "deeptools"
    tag "deeptools/bigwigcompare"

    test("sarscov2 - 2 bigwig files") {

        when {
            process {
                """
                def bigwig1 = file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bigwig/test.bigwig', checkIfExists: true)
                def bigwig2 = file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bigwig/test.bigwig', checkIfExists: true).copyTo('test2.bigwig')

                input[0] = [
                    [ id:'test' ],
                    bigwig1, bigwig2
                ]
                input[1] = []
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("sarscov2 - 2 bigwig files - with blacklist") {

        when {
            process {
                """
                def bigwig1 = file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bigwig/test.bigwig', checkIfExists: true)
                def bigwig2 = file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bigwig/test.bigwig', checkIfExists: true).copyTo('test2.bigwig')

                input[0] = [
                    [ id:'test' ],
                    bigwig1, bigwig2
                ]
                input[1] = file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/bed/test.bed', checkIfExists: true)
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("sarscov2 - 2 bigwig files - bedgraph output") {

        config "./nextflow.config"

        when {
            process {
                """
                def bigwig1 = file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bigwig/test.bigwig', checkIfExists: true)
                def bigwig2 = file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bigwig/test.bigwig', checkIfExists: true).copyTo('test2.bigwig')

                input[0] = [
                    [ id:'test' ],
                    bigwig1, bigwig2
                ]
                input[1] = []
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("sarscov2 - 2 bigwig files - stub") {

        options "-stub"

        when {
            process {
                """
                def bigwig1 = file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bigwig/test.bigwig', checkIfExists: true)
                def bigwig2 = file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bigwig/test.bigwig', checkIfExists: true).copyTo('test2.bigwig')

                input[0] = [
                    [ id:'test' ],
                    bigwig1, bigwig2
                ]
                input[1] = []
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}