nextflow_process {

    name "Test Process HAMRONIZATION_RGI"
    script "../main.nf"
    process "HAMRONIZATION_RGI"

    tag "modules"
    tag "modules_nfcore"
    tag "hamronization"
    tag "hamronization/rgi"
    tag "rgi/main"
    tag "rgi/cardannotation"
    tag "untar"

    setup {

        run("UNTAR") {
            script "modules/nf-core/untar/main.nf"
            process {
            """
            file('https://card.mcmaster.ca/latest/data', checkIfExists: true).copyTo('data.tar.gz')

            input[0] = [
                [ ],
                file("data.tar.gz")
            ]
            """
            }
        }

        run("RGI_CARDANNOTATION") {
            script "modules/nf-core/rgi/cardannotation/main.nf"
            process {
                """
                input[0] = UNTAR.out.untar.map{ it[1] }
                """
            }
        }

        run("RGI_MAIN") {
            script "modules/nf-core/rgi/main/main.nf"
            process {
                """
                input[0] = [                                                                                                                                                                     
                    [ id:'test', single_end:false ], // meta map                                                                                                                              
                    file(params.test_data['haemophilus_influenzae']['genome']['genome_fna_gz'], checkIfExists: true)                                                                          
                ]
                input[1] = RGI_CARDANNOTATION.out.db
                input[2] = []
                """
            }
        }
    }

    test("hamronization/rgi - haemophilus_influenzae - genome - fna.gz") {

        when {
            process {
                """
                input[0] = RGI_MAIN.out.tsv
                input[1] = 'tsv'
                input[2] = '1.0.2'
                input[3] = '3.2.3'
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("hamronization/rgi - haemophilus_influenzae - genome - fna.gz - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = RGI_MAIN.out.tsv
                input[1] = 'tsv'
                input[2] = '1.0.2'
                input[3] = '3.2.3'
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}
