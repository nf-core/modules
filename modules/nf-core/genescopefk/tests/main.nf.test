nextflow_process {

    name "Test Process GENESCOPEFK"
    config "./nextflow.config"
    script "../main.nf"
    process "GENESCOPEFK"

    tag "modules"
    tag "modules_nfcore"
    tag "fastk"
    tag "fastk/fastk"
    tag "fastk/histex"
    tag "genescopefk"

    setup {
        run("FASTK_FASTK") {
            script "../../fastk/fastk/main.nf"

            process {
                """
                input[0] = [
                    [id:'test', single_end:true],// meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/fastq/test_1.fastq.gz',checkIfExists:true)
                ]
                """
            }
        }

        run("FASTK_HISTEX") {
            script "../../fastk/histex/main.nf"

            process {
                """
                input[0] = FASTK_FASTK.out.hist
                """
            }
        }
    }

    test("homo_sapiens - hist") {
        when {
            params {
                fastk_histex_arg = "-G"
                genescopefk_arg  = "--kmer_length 40 --ploidy 1"
            }
            process {
                """
                input[0] = FASTK_HISTEX.out.hist
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("homo_sapiens - hist -- stub") {
        options '-stub'
        when {
            params {
                fastk_histex_arg = "-G"
                genescopefk_arg  = "--kmer_length 40 --ploidy 1"
            }
            process {
                """
                input[0] = FASTK_HISTEX.out.hist
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out,
                    path(process.out.versions[0]).yaml
                ).match() }
            )
        }
    }
}