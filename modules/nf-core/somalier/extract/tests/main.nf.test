nextflow_process {

    name "Test Process SOMALIER_EXTRACT"
    script "../main.nf"
    process "SOMALIER_EXTRACT"

    tag "modules"
    tag "modules_nfcore"
    tag "somalier"
    tag "somalier/extract"

    test("homo_sapiens - [ bam, bai ], fasta, fai, sites") {

        when {
            process {
                """
                input[0] = [
                 [ id:'test', single_end:false ], // meta map
                 file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/bam/test.paired_end.markduplicates.sorted.bam', checkIfExists: true),
                 file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/bam/test.paired_end.markduplicates.sorted.bam.bai', checkIfExists: true)
                ]
                input[1] = [
                 [ id:'genome' ], // meta map
                 file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/sequence/genome.fasta', checkIfExists: true)
                ]
                input[2] = [
                 [ id:'genome' ], // meta map
                 file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/sequence/genome.fasta.fai', checkIfExists: true)
                ]
                input[3] = [
                 [ id:'genome' ], // meta map
                 file(params.modules_testdata_base_path + 'delete_me/somalier/sites_chr21.hg38.vcf.gz', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("homo_sapiens - [ bam, bai ], fasta, fai, sites -stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                 [ id:'test', single_end:false ], // meta map
                 file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/bam/test.paired_end.markduplicates.sorted.bam', checkIfExists: true),
                 file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/bam/test.paired_end.markduplicates.sorted.bam.bai', checkIfExists: true)
                ]
                input[1] = [
                 [ id:'genome' ], // meta map
                 file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta', checkIfExists: true)
                ]
                input[2] = [
                 [ id:'genome' ], // meta map
                 file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta.fai', checkIfExists: true)
                ]
                input[3] = [
                 [ id:'genome' ], // meta map
                 file(params.modules_testdata_base_path + 'delete_me/somalier/sites_chr21.hg38.vcf.gz', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}