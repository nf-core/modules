name: "nanocomp"
description: Compare multiple runs of long read sequencing data and alignments
keywords:
  - bam
  - fasta
  - fastq
  - qc
  - nanopore
tools:
  - "nanocomp":
      description: "Compare multiple runs of long read sequencing data and alignments"
      homepage: "https://github.com/wdecoster/nanocomp"
      documentation: "https://github.com/wdecoster/nanocomp"
      licence: ["MIT License"]
      identifier: biotools:nanocomp
input:
  - - meta:
        type: map
        description: Groovy Map containing sample information e.g. [ id:'test', single_end:false
          ]
    - filelist:
        type: file
        description: List of all the files you want to compare, they have to be all
          the same filetype (either fastq, fasta, bam or Nanopore sequencing summary)
        pattern: "*.{fastq,fq,fna,ffn,faa,frn,fa,fasta,txt,bam}"
output:
  - report_html:
      - meta:
          type: map
          description: Groovy Map containing sample information e.g. [ id:'test', single_end:false
            ]
      - "*NanoComp-report.html":
          type: file
          description: Summary of all collected statistics
          pattern: "*NanoComp-report.html"
  - lengths_violin_html:
      - meta:
          type: map
          description: Groovy Map containing sample information e.g. [ id:'test', single_end:false
            ]
      - "*NanoComp_lengths_violin.html":
          type: file
          description: Violin plot of the sequence lengths
          pattern: "*NanoComp_lengths_violin.html"
  - log_length_violin_html:
      - meta:
          type: map
          description: Groovy Map containing sample information e.g. [ id:'test', single_end:false
            ]
      - "*NanoComp_log_length_violin.html":
          type: file
          description: Violin plot of the sequence lengths, log function applied
          pattern: "*NanoComp_log_length_violin.html"
  - n50_html:
      - meta:
          type: map
          description: Groovy Map containing sample information e.g. [ id:'test', single_end:false
            ]
      - "*NanoComp_N50.html":
          type: file
          description: Bar plot of N50 sequence length per sample
          pattern: "*NanoComp_N50.html"
  - number_of_reads_html:
      - meta:
          type: map
          description: Groovy Map containing sample information e.g. [ id:'test', single_end:false
            ]
      - "*NanoComp_number_of_reads.html":
          type: file
          description: Bar plot of number of reads per sample
          pattern: "*NanoComp_number_of_reads.html"
  - overlay_histogram_html:
      - meta:
          type: map
          description: Groovy Map containing sample information e.g. [ id:'test', single_end:false
            ]
      - "*NanoComp_OverlayHistogram.html":
          type: file
          description: Histogram of all read lengths per sample
          pattern: "*NanoComp_OverlayHistogram.html"
  - overlay_histogram_normalized_html:
      - meta:
          type: map
          description: Groovy Map containing sample information e.g. [ id:'test', single_end:false
            ]
      - "*NanoComp_OverlayHistogram_Normalized.html":
          type: file
          description: Normalized histogram of all read lengths per sample
          pattern: "*NanoComp_OverlayHistogram_Normalized.html"
  - overlay_log_histogram_html:
      - meta:
          type: map
          description: Groovy Map containing sample information e.g. [ id:'test', single_end:false
            ]
      - "*NanoComp_OverlayLogHistogram.html":
          type: file
          description: Histogram of all read lengths per sample, log function applied
          pattern: "*NanoComp_OverlayLogHistogram.html"
  - overlay_log_histogram_normalized_html:
      - meta:
          type: map
          description: Groovy Map containing sample information e.g. [ id:'test', single_end:false
            ]
      - "*NanoComp_OverlayLogHistogram_Normalized.html":
          type: file
          description: Normalized histogram of all read lengths per sample, log function
            applied
          pattern: "*NanoComp_OverlayLogHistogram_Normalized.html"
  - total_throughput_html:
      - meta:
          type: map
          description: Groovy Map containing sample information e.g. [ id:'test', single_end:false
            ]
      - "*NanoComp_total_throughput.html":
          type: file
          description: Barplot comparing throughput in bases
          pattern: "*NanoComp_total_throughput.html"
  - quals_violin_html:
      - meta:
          type: map
          description: Groovy Map containing sample information e.g. [ id:'test', single_end:false
            ]
      - "*NanoComp_quals_violin.html":
          type: file
          description: Violin plot of base qualities, only for bam, fastq and sequencing
            summary input
          pattern: "*NanoComp_quals_violin.html"
  - overlay_histogram_identity_html:
      - meta:
          type: map
          description: Groovy Map containing sample information e.g. [ id:'test', single_end:false
            ]
      - "*NanoComp_OverlayHistogram_Identity.html":
          type: file
          description: Histogram of perfect reference identity, only for bam input
          pattern: "*NanoComp_OverlayHistogram_Identity.html"
  - overlay_histogram_phredscore_html:
      - meta:
          type: map
          description: Groovy Map containing sample information e.g. [ id:'test', single_end:false
            ]
      - "*NanoComp_OverlayHistogram_PhredScore.html":
          type: file
          description: Histogram of phred scores, only for bam input
          pattern: "*NanoComp_OverlayHistogram_PhredScore.html"
  - percent_identity_violin_html:
      - meta:
          type: map
          description: Groovy Map containing sample information e.g. [ id:'test', single_end:false
            ]
      - "*NanoComp_percentIdentity_violin.html":
          type: file
          description: Violin plot comparing perfect reference identity, only for bam
            input
          pattern: "*NanoComp_percentIdentity_violin.html"
  - active_pores_over_time_html:
      - meta:
          type: map
          description: Groovy Map containing sample information e.g. [ id:'test', single_end:false
            ]
      - "*NanoComp_ActivePoresOverTime.html":
          type: file
          description: Scatter plot of active pores over time, only for sequencing summary
            input
          pattern: "*NanoComp_ActivePoresOverTime.html"
  - cumulative_yield_plot_gigabases_html:
      - meta:
          type: map
          description: Groovy Map containing sample information e.g. [ id:'test', single_end:false
            ]
      - "*NanoComp_CumulativeYieldPlot_Gigabases.html":
          type: file
          description: Scatter plot of cumulative yield, only for sequencing summary input
          pattern: "*NanoComp_CumulativeYieldPlot_Gigabases.html"
  - sequencing_speed_over_time_html:
      - meta:
          type: map
          description: Groovy Map containing sample information e.g. [ id:'test', single_end:false
            ]
      - "*NanoComp_sequencing_speed_over_time.html":
          type: file
          description: Scatter plot of sequencing speed over time, only for sequencing
            summary input
          pattern: "*NanoComp_sequencing_speed_over_time.html"
  - stats_txt:
      - meta:
          type: map
          description: Groovy Map containing sample information e.g. [ id:'test', single_end:false
            ]
      - "*NanoStats.txt":
          type: file
          description: txt file with basic statistics
          pattern: "*NanoStats.txt"
  - versions:
      - versions.yml:
          type: file
          description: File containing software versions
          pattern: "versions.yml"
authors:
  - "@paulwolk"
maintainers:
  - "@paulwolk"
