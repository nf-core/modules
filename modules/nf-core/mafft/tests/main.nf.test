nextflow_process {

    name "Test Process MAFFT"
    script "../main.nf"
    process "MAFFT"
    tag "modules"
    tag "modules_nfcore"
    tag "mafft"

    test("SARS-CoV-2 scaffolds fasta - uncompressed") {
        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                        file(params.test_data['sarscov2']['illumina']['scaffolds_fasta'], checkIfExists: true)
                    ]
                input[1] = [[:], []]
                input[2] = [[:], []]
                input[3] = [[:], []]
                input[4] = [[:], []]
                input[5] = [[:], []]
                input[6] = false
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match("SARS-CoV-2 scaffolds fasta - uncompressed")}
            )
        }

    }

    test("SARS-CoV-2 scaffolds fasta - compressed") {
        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                        file(params.test_data['sarscov2']['illumina']['scaffolds_fasta'], checkIfExists: true)
                    ]
                input[1] = [[:], []]
                input[2] = [[:], []]
                input[3] = [[:], []]
                input[4] = [[:], []]
                input[5] = [[:], []]
                input[6] = true
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match("SARS-CoV-2 scaffolds fasta - compressed")}
            )
        }

    }

    test("SARS-CoV-2 scaffolds fasta - add informative sites fasta normal") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                        file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true)
                    ]
                input[1] = [[ id:'test', single_end:false ], // meta map
                        file(params.test_data['sarscov2']['genome']['informative_sites_fas'], checkIfExists: true)
                    ]
                input[2] = [[:], []]
                input[3] = [[:], []]
                input[4] = [[:], []]
                input[5] = [[:], []]
                input[6] = true
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match("SARS-CoV-2 scaffolds fasta - add informative sites fasta normal") }
            )
        }
    }

    test("SARS-CoV-2 scaffolds fasta - add informative sites fasta fragments") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                        file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true)
                    ]
                input[1] = [[:], []]
                input[2] = [
                    [ id:'test', single_end:false ], // meta map
                        file(params.test_data['sarscov2']['genome']['informative_sites_fas'], checkIfExists: true)
                    ]
                input[3] = [[:], []]
                input[4] = [[:], []]
                input[5] = [[:], []]
                input[6] = true
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match("SARS-CoV-2 scaffolds fasta - add informative sites fasta fragments") }
            )
        }
    }

    test("SARS-CoV-2 scaffolds fasta - add informative sites fasta full") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                        file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true)
                    ]
                input[1] = [[:], []]
                input[2] = [[:], []]
                input[3] = [[ id:'test', single_end:false ], // meta map
                        file(params.test_data['sarscov2']['genome']['informative_sites_fas'], checkIfExists: true)
                    ]
                input[4] = [[:], []]
                input[5] = [[:], []]
                input[6] = true
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match("SARS-CoV-2 scaffolds fasta - add informative sites fasta full") }
            )
        }

    }

    test("SARS-CoV-2 scaffolds fasta - add informative sites fasta profile") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                        file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true)
                    ]
                input[1] = [[:], []]
                input[2] = [[:], []]
                input[3] = [[:], []]
                input[4] = [[ id:'test', single_end:false ], // meta map
                        file(params.test_data['sarscov2']['genome']['informative_sites_fas'], checkIfExists: true)
                    ]
                input[5] = [[:], []]
                input[6] = true
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match("SARS-CoV-2 scaffolds fasta - add informative sites fasta profile") }
            )
        }

    }

    test("SARS-CoV-2 scaffolds fasta - add informative sites fasta long") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                        file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true)
                    ]
                input[1] = [[:], []]
                input[2] = [[:], []]
                input[3] = [[:], []]
                input[4] = [[:], []]
                input[5] =  [
                    [ id:'test', single_end:false ], // meta map
                        file(params.test_data['sarscov2']['genome']['informative_sites_fas'], checkIfExists: true)
                    ]
                input[6] = true
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match("SARS-CoV-2 scaffolds fasta - add informative sites fasta long") }
            )
        }

    }

    test("SARS-CoV-2 scaffolds fasta - add informative sites all sites fasta multiple") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                        file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true)
                    ]
                input[1] = [
                    [ id:'test', single_end:false ], // meta map
                        file(params.test_data['sarscov2']['genome']['all_sites_fas'], checkIfExists: true)
                    ]
                input[2] = [
                    [ id:'test', single_end:false ], // meta map
                        file(params.test_data['sarscov2']['genome']['informative_sites_fas'], checkIfExists: true)
                    ]
                input[3] = [[:], []]
                input[4] = [[:], []]
                input[5] = [[:], []]
                input[6] = true
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match("SARS-CoV-2 scaffolds fasta - add informative sites fasta multiple") }
            )
        }

    }

}