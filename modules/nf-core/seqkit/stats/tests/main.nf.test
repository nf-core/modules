nextflow_process {

    name "Test Process SEQKIT_STATS"
    script "../main.nf"
    process "SEQKIT_STATS"

    tag "modules"
    tag "modules_nfcore"
    tag "seqkit"
    tag "seqkit/stats"

    test("single_end") {

        when {
            process {
                """
                input[0] = [[ id:'test', single_end:true ], // meta map
                 file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'], checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("paired_end") {

        when {
            process {
                """
                input[0] = [[ id:'test', single_end:false ], // meta map
                 file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'], checkIfExists: true),
                 file(params.test_data['sarscov2']['illumina']['test_2_fastq_gz'], checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("nanopore") {

        when {
            process {
                """
                input[0] = [[ id:'test', single_end:true ], // meta map
                 file(params.test_data['sarscov2']['nanopore']['test_fastq_gz'], checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("genome_fasta") {

        when {
            process {
                """
                input[0] = [[ id:'test', single_end:false ], // meta map
                 file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("transcriptome_fasta") {

        when {
            process {
                """
                input[0] = [[ id:'test', single_end:false ], // meta map
                 file(params.test_data['sarscov2']['genome']['transcriptome_fasta'], checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("single_end - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [[ id:'test', single_end:true ], // meta map
                 file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'], checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
