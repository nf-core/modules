nextflow_process {

    name "Test Process SEQKIT_GREP"
    script "../main.nf"
    process "SEQKIT_GREP"

    tag "modules"
    tag "modules_nfcore"
    tag "seqkit"
    tag "seqkit/grep"

    test("with_file") {

        when {
            process {
                """
                input[0] = [[ id:'test', single_end:false ], // meta map
                            file(params.test_data['homo_sapiens']['genome']['genome_21_fasta'], checkIfExists: true)
                            ]
                input[1] = file(params.test_data['homo_sapiens']['genome']['genome_header'], checkIfExists: true)
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("with_pattern") {
        config "./nextflow.config"
        when {
            process {
                """
                input[0] = [[ id:'test', single_end:false ], // meta map
                            file(params.test_data['homo_sapiens']['genome']['genome_21_fasta'], checkIfExists: true)
                            ]
                input[1] = []
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("with_file - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [[ id:'test', single_end:false ], // meta map
                            file(params.test_data['homo_sapiens']['genome']['genome_21_fasta'], checkIfExists: true)
                            ]
                input[1] = file(params.test_data['homo_sapiens']['genome']['genome_header'], checkIfExists: true)
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
