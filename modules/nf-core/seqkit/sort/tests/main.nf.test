nextflow_process {

    name "Test Process SEQKIT_SORT"
    script "../main.nf"
    process "SEQKIT_SORT"
    config './nextflow.config'

    tag "modules"
    tag "modules_nfcore"
    tag "seqkit"
    tag "seqkit/sort"

    test("sarscov2-genome_fasta") {
        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() },
                { assert snapshot(process.out.versions).match("versions") }
            )
        }

    }

    test("sarscov2-genome_fasta_gz") {
        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.test_data['sarscov2']['genome']['genome_fasta_gz'], checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() },
                { assert snapshot(process.out.versions).match("versions") }
            )
        }

    }

    test("sarscov2-test_1_fastq_gz") {
        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'], checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() },
                { assert snapshot(process.out.versions).match("versions") }
            )
        }

    }

    test("file_name_conflict-fail_with_error") {
        when {
            process {
                """
                input[0] = [
                    [ id:'test_1' ], // meta map
                    file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'], checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert !process.success },
                { assert process.stdout.toString().contains("Input and output names are the same,") }
            )
        }

    }

    test("sarscov2-genome_fasta-stub") {

        options '-stub'

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() },
                { assert snapshot(process.out.versions).match("versions") }
            )
        }

    }

    test("file_name_conflict-fail_with_error-stub") {

        options '-stub'

        when {
            process {
                """
                input[0] = [
                    [ id:'genome' ], // meta map
                    file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert !process.success },
                { assert process.stdout.toString().contains("Input and output names are the same") }
            )
        }

    }

}
