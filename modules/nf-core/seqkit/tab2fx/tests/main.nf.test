nextflow_process {

    name "Test Process SEQKIT_TAB2FX"
    script "../main.nf"
    process "SEQKIT_TAB2FX"

    tag "modules"
    tag "modules_nfcore"
    tag "seqkit"
    tag "seqkit/tab2fx"

    test("fasta") {

        when {
            process {
                """
                input[0] = [ [ id:'test' ],   // meta map
                       [ file(params.test_data['sarscov2']['genome']['genome_fasta_txt_zst'], checkIfExists: true) ]
                     ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("fastq") {
        config "./fq.config"
        when {
            process {
                """
                input[0] = [ [ id:'test' ],   // meta map
                       [ file(params.test_data['sarscov2']['illumina']['test_1_fastq_txt_zst'], checkIfExists: true) ]
                     ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("fasta_gz") {
        config "./gz.config"
        when {
            process {
                """
                input[0] = [ [ id:'test' ],   // meta map
                       [ file(params.test_data['sarscov2']['genome']['genome_fasta_txt_zst'], checkIfExists: true) ]
                     ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("fastq_gz") {
        config "./fq_gz.config"
        when {
            process {
                """
                input[0] = [ [ id:'test' ],   // meta map
                       [ file(params.test_data['sarscov2']['illumina']['test_1_fastq_txt_zst'], checkIfExists: true) ]
                     ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("fasta - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [ [ id:'test' ],   // meta map
                       [ file(params.test_data['sarscov2']['genome']['genome_fasta_txt_zst'], checkIfExists: true) ]
                     ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
