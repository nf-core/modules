nextflow_process {

    name "Test Process PEDDY"
    script "modules/nf-core/peddy/main.nf"
    process "PEDDY"

    tag "modules"
    tag "modules_nfcore"
    tag "peddy"

    test("test - peddy - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/pacbio/vcf/FAM_snvs_annotated_ranked.vcf.gz', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/pacbio/vcf/FAM_snvs_annotated_ranked.vcf.gz.tbi', checkIfExists: true)
                ]
                input[1] = [ id:'ped_file' ],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/pacbio/vcf/FAM.ped', checkIfExists: true)
                input[1] = [ id:'sites_file' ],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/pacbio/vcf/peddy.sites', checkIfExists: true)
                """
            }
        }

        then {
            assert process.success
            assert snapshot(process.out).match()
        }

    }

    test("test - peddy") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/pacbio/vcf/FAM_snvs_annotated_ranked.vcf.gz', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/pacbio/vcf/FAM_snvs_annotated_ranked.vcf.gz.tbi', checkIfExists: true)
                ]
                input[1] = [ id:'ped_file' ],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/pacbio/vcf/FAM.ped', checkIfExists: true)
                input[1] = [ id:'sites_file' ],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/pacbio/vcf/peddy.sites', checkIfExists: true)
                """
            }
        }

        then {
            assert process.success
            assert snapshot(process.out).match()
        }

    }

    test("test - peddy - double_sites") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/pacbio/vcf/FAM_snvs_annotated_ranked.vcf.gz', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/pacbio/vcf/FAM_snvs_annotated_ranked.vcf.gz.tbi', checkIfExists: true)
                ]
                input[1] = [ id:'ped_file' ],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/pacbio/vcf/FAM.ped', checkIfExists: true)
                input[1] = [ id:'sites_file' ],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/pacbio/vcf/peddy.sites', checkIfExists: true)
                """
            }
            task {
                ext {
                    args = '--sites hg38'
            }
        }

        then {
            assert !process.success
            assert process.exitStatus != 0
        }

    }

