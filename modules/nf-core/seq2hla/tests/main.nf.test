nextflow_process {

    name "Test Process SEQ2HLA"
    script "../main.nf"
    process "SEQ2HLA"

    tag "modules"
    tag "modules_nfcore"
    tag "seq2hla"

    test("homo_sapiens - fastq") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    [
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/fastq/test_rnaseq_1.fastq.gz', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/fastq/test_rnaseq_2.fastq.gz', checkIfExists: true)
                    ]
                ]
                """
            }
        }

        then {
            assert process.success
            assertAll(
                { assert snapshot(
                    process.out.class1_bowtielog,
                    process.out.class1_genotype_2d,
                    process.out.class1_genotype_4d,
                    process.out.class1_nonclass_bowtielog,
                    process.out.class1_nonclass_genotype_2d,
                    process.out.class1_nonclass_genotype_4d,
                    process.out.class2_bowtielog,
                    process.out.class2_genotype_2d,
                    process.out.class2_genotype_4d,
                    process.out.ambiguity,
                    process.out.versions
                ).match() },
                { assert file(process.out.class1_expression[0][1]).name.endsWith("ClassI-class.expression") },
                { assert file(process.out.class2_expression[0][1]).name.endsWith("ClassII.expression") },
                { assert file(process.out.class1_nonclass_expression[0][1]).name.endsWith("ClassI-nonclass.expression") }
            )
        }

    }

    test("homo_sapiens - fastq - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    [
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/fastq/test_rnaseq_1.fastq.gz', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/fastq/test_rnaseq_2.fastq.gz', checkIfExists: true)
                    ]
                ]
                """
            }
        }

        then {
            assert process.success
            assertAll(
                { assert snapshot(process.out).match() }
            )
        }

    }

}
