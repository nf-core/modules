# yaml-language-server: $schema=https://raw.githubusercontent.com/nf-core/modules/master/modules/meta-schema.json
name: vuegen
description: >
  The VueGen nf-core module is designed to automate report generation from outputs
  produced by other modules, subworkflows, or pipelines. The module integrates the
  VueGen Python library and customizes it for compatibility with the Nextflow environment.
  VueGen automates the creation of reports from bioinformatics outputs, supporting formats
  like PDF, HTML, DOCX, ODT, PPTX, Reveal.js, Jupyter notebooks, and Streamlit web applications.
keywords:
  - reports
  - data-visualization
  - streamlit
  - quarto
tools:
  - "vuegen":
      description: >
        The VueGen nf-core module is designed to automate report generation from outputs
        produced by other modules, subworkflows, or pipelines. The module integrates the
        VueGen Python library and customizes it for compatibility with the Nextflow environment.
        VueGen automates the creation of reports from bioinformatics outputs, supporting formats
        like PDF, HTML, DOCX, ODT, PPTX, Reveal.js, Jupyter notebooks, and Streamlit web applications.
      homepage: https://github.com/Multiomics-Analytics-Group/vuegen
      documentation: https://vuegen.readthedocs.io/
      tool_dev_url: https://github.com/Multiomics-Analytics-Group/vuegen
      doi: 10.1101/2025.03.05.641152
      licence: ["MIT"]
      identifier: ""
input:
  - - input_type:
        type: string
        pattern: "^(config|directory)$"
        description: Specifies whether the input is a configuration file ('config') or a directory ('directory').
  - - input_path:
        type: file
        description: Path to the input directory or configuration file used by VueGen.
  - - report_type:
        type: string
        pattern: "^(streamlit|html|pdf|docx|odt|revealjs|pptx|jupyter)$"
        description: The type of report to generate. Options include 'streamlit', 'html', 'pdf', 'docx', 'odt', 'revealjs', 'pptx', and 'jupyter'.
output:
  - output_folder:
      - "*report":
          type: directory
          description: |
            The output directory containing the generated report files.
            - If `report_type` is 'streamlit', a 'streamlit_report' directory is created, containing subfolders for each section with Python scripts corresponding to the web application's pages.
            - For other report types, a 'quarto_report' directory is generated, containing a Quarto Markdown (qmd) file that structures the entire report.
          pattern: "*report"
  - versions:
      - versions.yml:
          type: file
          description: File containing software versions
          pattern: "versions.yml"
authors:
  - "@sayalaruano"
  - "@enryH"
  - "@albsantosdel"
maintainers:
  - "@sayalaruano"
  - "@enryH"
  - "@albsantosdel"
