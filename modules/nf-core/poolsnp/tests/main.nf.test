// TODO nf-core: Once you have added the required tests, please run the following command to build this file:
// nf-core modules test poolsnp
nextflow_process {

    name "Test Process POOLSNP"
    script "../main.nf"
    process "POOLSNP"
    config "./nextflow.config"
    tag "modules"
    tag "modules_nfcore"
    tag "poolsnp"

    // TODO nf-core: Change the test name preferably indicating the test-data and file-format used
    test("poolsnp-test - mpileup") {

        // TODO nf-core: If you are created a test for a chained module
        // (the module requires running more than one process to generate the required output)
        // add the 'setup' method here.
        // You can find more information about how to use a 'setup' method in the docs (https://nf-co.re/docs/contributing/modules#steps-for-creating-nf-test-for-chained-modules).

        setup {
            run("SAMTOOLS_MPILEUP") {
                script "../../samtools/mpileup/main.nf"
                process {
                    """
                    input[0] = Channel.of([
                        [ id:'test', single_end:false ], // meta map
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bam/test.paired_end.sorted.bam', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/bed/test.bed', checkIfExists: true)
                    ])
                    input[1] = Channel.of([ file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true) ])
                    """
                }
            }
        }

        when {
            process {
                """
                // TODO nf-core: define inputs of the process here. Example:
                
                input[0] = SAMTOOLS_MPILEUP.out.mpileup
                input[1] = Channel.of([ 
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)
                ])
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
                //TODO nf-core: Add all required assertions to verify the test output.
                // See https://nf-co.re/docs/contributing/tutorials/nf-test_assertions for more information and examples.
            )
        }

    }

}
