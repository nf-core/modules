---
# yaml-language-server: $schema=https://raw.githubusercontent.com/nf-core/modules/master/modules/meta-schema.json
name: "poolsnp"
description: PoolSNP is a heuristic SNP caller, which uses an MPILEUP file and a reference genome in FASTA format as inputs.
keywords:
  - poolseq
  - mpileup
  - variant-calling
tools:
  - "poolsnp":
      description: "PoolSNP is a heuristic SNP caller, which uses an MPILEUP file and a reference genome in FASTA format as inputs."
      homepage: "https://github.com/capoony/PoolSNP"
      documentation: "https://github.com/capoony/PoolSNP/blob/master/README.md"
      licence: ["Apache-2.0"]
      args_id: "$args"

input:
  - meta:
      type: map
      description: |
        Groovy Map containing sample information.
        e.g. `[ id:'sample1', single_end:false ]`

  - mpileup:
      type: file
      description: |
        MPILEUP file. This file contains the base calls and alignment information 
        for each position in the reference genome.
        It is used as input for variant calling and other downstream analyses.
      pattern: "*.mpileup"

  - meta2:
      type: map
      description: |
        Groovy Map containing sample information.
        e.g. `[ id:'sample1' ]`

  - reference:
      type: file
      description: |
        Reference genome in FASTA format. 
        May NOT contain any special characters such as "/|,:"
      pattern: "*.{fasta,fa}"

  - max_cov:
      type: integer
      description: |
        Maximum coverage is calculated for every library and chromosomal arm 
        as the percentile of a coverage distribution,
        e.g. max-cov=0.98 will only consider positions within the 98% coverage percentile
        for a given sample and chromosomal arm. 
        Read more: https://github.com/capoony/PoolSNP

  - min_cov:
      type: integer
      description: |
        Minimum coverage across all libraries, 
        e.g. min-cov=10 will only consider positions with a minimum coverage >10.

  - min_count:
      type: integer
      description: |
        Minimum allele count of a minor allele across all libraries combined,
        e.g. min-count=10 will only consider a position as polymorphic
        if the cumulative count of a minor allele across all samples
        in the input mpileup is equal or larger than the threshold.

  - min_freq:
      type: float
      description: |
        Minimum allele frequency of a minor allele across all libraries combined,
        e.g. min-freq=10 will only consider

  - miss_frac:
      type: float
      description: |
        Missing fraction is the maximum percentage of libraries that are allowed
        to NOT fulfill all the other criteria, 
        e.g. miss-frac=0.2 will report sites event if 20% of all samples
        do not fulfill the other criteria.

  - allsites:
      type: integer
      description: |
        If set to 1, all sites will be reported, irrespective of whether they are polymorphic.
        Note: disables the miss-frac parameter.

  - badsites:
      type: integer
      description: |
        If set to 1, a Bad-sites file (*BS.txt.gz) will be generated, containing a list of 
        (variable and invariable) sites that did not pass the SNP calling criteria.
      optional: true

output:
  - meta:
      type: map
      description: |
        Groovy Map containing sample information
        e.g. `[ id:'sample1', single_end:false ]`

  - vcf:
      type: file
      description: Gzipped VCF file containing allele counts and frequencies for every position and library
      pattern: "*.vcf.gz"

  - max_cov:
      type: file
      description: File containing the maximum coverage thresholds for all chromosomal arms and libraries
      pattern: "*cov-*.txt"

  - bad_sites:
      type: file
      description: File containing a list of sites (variable and invariable) that did not pass the SNP calling criteria
      pattern: "*BS.txt.gz"

  - versions:
      type: file
      description: File containing software versions
      pattern: "versions.yml"

authors:
  - "@abhilesh"
maintainers:
  - "@abhilesh"
