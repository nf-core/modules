name: maxbin2
description: MaxBin is a software that is capable of clustering metagenomic contigs
keywords:
  - metagenomics
  - assembly
  - binning
  - maxbin2
  - de novo assembly
  - mags
  - metagenome-assembled genomes
  - contigs
tools:
  - maxbin2:
      description: MaxBin is software for binning assembled metagenomic sequences based
        on an Expectation-Maximization algorithm.
      homepage: https://sourceforge.net/projects/maxbin/
      documentation: https://sourceforge.net/projects/maxbin/
      tool_dev_url: https://sourceforge.net/projects/maxbin/
      doi: "10.1093/bioinformatics/btv638"
      licence: ["BSD 3-clause"]
      identifier: ""
input:
  - - meta:
        type: map
        description: |
          Groovy Map containing sample information
          e.g. [ id:'test', single_end:false ]
    - contigs:
        type: file
        description: Multi FASTA file containing assembled contigs of a given sample
        pattern: "*.fasta"
    - reads:
        type: file
        description: Reads used to assemble contigs in FASTA or FASTQ format. Do not
          supply at the same time as abundance files.
        pattern: "*.fasta"
    - abund:
        type: list
        description: One or more contig abundance files, i.e. average depth of reads against each contig. See MaxBin2
          README for details. Do not supply at the same time as read files.
output:
  - binned_fastas:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*.fasta.gz":
          type: file
          description: Binned contigs, one per bin designated with numeric IDs
          pattern: "*.fasta.gz"
  - summary:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*.summary":
          type: file
          description: Summary file describing which contigs are being classified into
            which bin
          pattern: "*.summary"
  - abundance:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*.abundance":
          type: file
          description: Abundance of each bin if multiple abundance files were supplied
            which bin
          pattern: "*.abundance"
  - log:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*.log.gz":
          type: file
          description: Log file recording the core steps of MaxBin algorithm
          pattern: "*.log.gz"
  - marker_counts:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*.marker.gz":
          type: file
          description: Marker counts
          pattern: "*.marker.gz"
  - unbinned_fasta:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*.noclass.gz":
          type: file
          description: All sequences that pass the minimum length threshold but are not
            classified successfully.
          pattern: "*.noclass.gz"
  - tooshort_fasta:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*.tooshort.gz":
          type: file
          description: All sequences that do not meet the minimum length threshold.
          pattern: "*.tooshort.gz"
  - marker_bins:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*_bin.tar.gz":
          type: file
          description: Marker bins
          pattern: "*_bin.tar.gz"
  - marker_genes:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*_gene.tar.gz":
          type: file
          description: Marker genes
          pattern: "*_gene.tar.gz"
  - versions:
      - versions.yml:
          type: file
          description: File containing software versions
          pattern: "versions.yml"
authors:
  - "@jfy133"
maintainers:
  - "@jfy133"
