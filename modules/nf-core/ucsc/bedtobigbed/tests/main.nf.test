nextflow_process {

    name "Test Process UCSC_BEDTOBIGBED"
    config "./nextflow.config"
    script "../main.nf"
    process "UCSC_BEDTOBIGBED"

    tag "modules"
    tag "modules_nfcore"
    tag "ucsc"
    tag "ucsc/bedtobigbed"



    test("test_ucsc_bedtobigbed") {

        when {
            params {
                module_args = ''
            }
            process {
                """
                input[0] = [[id:'test'],// meta map
                    [file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/bed/test.bed',checkIfExists:true)]
                    ]
                input[1] = file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.sizes',checkIfExists:true)
                input[2] = []
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }



    test("test_ucsc_bedtobigbed_autosql") {

        when {
            params {
                module_args = "-type=bed3+3"
            }
            process {
                """
                input[0] = [[id:'test'],// meta map
                    [file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/bed/test.bed',checkIfExists:true)]
                    ]
                input[1] = file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.sizes',checkIfExists:true)
                input[2] = file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/bed/bed6alt.as',checkIfExists:true)
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }


    test("test_ucsc_bedtobigbed -- stub") {
        options '-stub'
        when {
            params {
                module_args = ''
            }
            process {
                """
                input[0] = [[id:'test'],// meta map
                    [file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/bed/test.bed',checkIfExists:true)]
                    ]
                input[1] = file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.sizes',checkIfExists:true)
                input[2] = []
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }


    test("test_ucsc_bedtobigbed_autosql -- stub") {
        options '-stub'
        when {
            params {
                module_args = "-type=bed3+3"
            }
            process {
                """
                input[0] = [[id:'test'],// meta map
                    [file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/bed/test.bed',checkIfExists:true)]
                    ]
                input[1] = file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.sizes',checkIfExists:true)
                input[2] = file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/bed/bed6alt.as',checkIfExists:true)
                """
            }
        }
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}