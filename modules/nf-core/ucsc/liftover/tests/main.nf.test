nextflow_process {

    name "Test Process UCSC_LIFTOVER"
    script "../main.nf"
    process "UCSC_LIFTOVER"
    tag "modules"
    tag "modules_nfcore"
    tag "ucsc"
    tag "ucsc/liftover"
    config "./test.config"

    test("genome - bed") {

        when {
            process {
                """
                input[0] = Channel.of([
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + "genomics/homo_sapiens/genome/genome.bed", checkIfExists: true)
                ])
                input[1] = Channel.of(file(params.modules_testdata_base_path + "genomics/homo_sapiens/genome/genome.chain.gz", checkIfExists: true))
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out.lifted,
                    file(process.out.unlifted[0][1]).name
                ).match() },

            )
        }
    }

    test("genome - bed - stub") {
        options "-stub"

        when {
            process {
                """
                input[0] = Channel.of([
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + "genomics/homo_sapiens/genome/genome.bed", checkIfExists: true)
                ])
                input[1] = Channel.of(file(params.modules_testdata_base_path + "genomics/homo_sapiens/genome/genome.chain.gz", checkIfExists: true))
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}