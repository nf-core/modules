nextflow_process {

    name "Test Process INFERNAL_CMSEARCH"
    script "../main.nf"
    process "INFERNAL_CMSEARCH"

    tag "modules"
    tag "modules_nfcore"
    tag "gunzip"
    tag "infernal"
    tag "infernal/cmsearch"

    test("rfam rrna - bacteroides fragilis") {

        setup {
            run("GUNZIP") {
                script "../../../gunzip/main.nf"
                process {
                    """
                    input[0] = [
                        [ id:'test', single_end:false ], // meta map
                        file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/genome/genome.fna.gz', checkIfExists: true)
                    ]
                    """
                }
            }
        }

        when {
            process {
                """
                input[0] = Channel.of([
                    [ id:'test', single_end:false ], // meta map
                    file('https://github.com/sanger-tol/metagenomeassembly/raw/refs/heads/dev/assets/rRNA.cm', checkIfExists: true)
                ]).combine(GUNZIP.out.gunzip, by: 0)
                input[1] = true
                input[2] = true
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("rfam rrna - bacteroides fragilis - gz") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file('https://github.com/sanger-tol/metagenomeassembly/raw/refs/heads/dev/assets/rRNA.cm', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/genome/genome.fna.gz', checkIfExists: true)
                ]
                input[1] = true
                input[2] = true
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("rfam rrna - bacteroides fragilis - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    file('https://github.com/sanger-tol/metagenomeassembly/raw/refs/heads/dev/assets/rRNA.cm', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/genome/genome.fna.gz', checkIfExists: true)
                ]
                input[1] = true
                input[2] = true
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
