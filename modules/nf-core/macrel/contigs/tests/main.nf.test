
nextflow_process {

    name "Test Process MACREL_CONTIGS"
    script "../main.nf"
    process "MACREL_CONTIGS"

    tag "modules"
    tag "modules_nfcore"
    tag "macrel"
    tag "macrel/contigs"

    test("test-macrel-contigs") {

        when {
            process {
                """
                input[0] = [
				    [ id:'test', single_end:false ], // meta map
				    file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/illumina/fasta/test1.contigs.fa.gz', checkIfExists: true)
				]

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
					process.out.smorfs,
					path(process.out.all_orfs[0][1]).linesGzip[0],
					process.out.amp_prediction,
					process.out.readme_file,
					file(process.out.log_file[0][1]).name,
					process.out.versions
					).match()
				}
            )
        }
    }

    test("test-macrel-contigs-stub") {
        options '-stub'

        when {
            process {
                """
                input[0] = [
				    [ id:'test', single_end:false ], // meta map
				    file(params.modules_testdata_base_path + 'genomics/prokaryotes/bacteroides_fragilis/illumina/fasta/test1.contigs.fa.gz', checkIfExists: true)
				]

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

}
