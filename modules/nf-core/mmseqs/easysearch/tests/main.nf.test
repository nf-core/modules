nextflow_process {

    name "Test Process MMSEQS_EASYSEARCH"
    script "../main.nf"
    process "MMSEQS_EASYSEARCH"
    config './nextflow.config'

    tag "modules"
    tag "modules_nfcore"
    tag "mmseqs"
    tag "mmseqs/easysearch"
    tag "mmseqs/createdb"

    setup {

        run("MMSEQS_CREATEDB") {
            script "../../createdb/main.nf"
            process {
                """
                input[0] = [ [id: 'test_query', single_end: true], file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fasta/contigs.fasta', checkIfExists: true) ]
                """
            }
        }
    }

    test("sarscov2 - illumina - contigs - fasta") {

        when {
            process {
                """
                input[0] = [ [id: 'test_scaffolds', single_end: true], file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fasta/scaffolds.fasta', checkIfExists: true) ]
                input[1] = MMSEQS_CREATEDB.out.db
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("sarscov2 - illumina - contigs - fasta - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [ [id: 'test_scaffolds', single_end: true], file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fasta/scaffolds.fasta', checkIfExists: true) ]
                input[1] = MMSEQS_CREATEDB.out.db
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
