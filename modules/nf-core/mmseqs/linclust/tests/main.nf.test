nextflow_process {

    name "Test Process MMSEQS_LINCLUST"
    script "../main.nf"
    process "MMSEQS_LINCLUST"
    config "./nextflow.config"
    tag "modules"
    tag "modules_nfcore"
    tag "mmseqs"
    tag "mmseqs/linclust"

    test("Should cluster an mmseqs database") {

        setup {
            run("UNTAR") {
                script "modules/nf-core/untar/main.nf"
                process {
                    """
                    input[0] = [ [id:'test'], file(params.test_data['sarscov2']['genome']['mmseqs_tar_gz'], checkIfExists: true) ]
                    """
                }
            }
        }

        when {
            process {
                """
                input[0] = UNTAR.out.untar
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert process.out.db_cluster.size() == 1 },
                {
                    with(process.out.db_cluster) {
                        File folder = new File(get(0).get(1))
                        File[] listOfFiles = folder.listFiles()
                        listOfFiles = listOfFiles.sort { it.name }
                        assert listOfFiles.length == 4
                        assert snapshot("${get(0).get(1)}/${listOfFiles[0].name}").match("test_output_cluster.0")
                        assert snapshot("${get(0).get(1)}/${listOfFiles[2].name}").match("test_output_cluster.dbtype")
                        assert snapshot("${get(0).get(1)}/${listOfFiles[3].name}").match("test_output_cluster.index")
                    }
                },
                { assert process.out.versions }
            )
        }
    }
}
