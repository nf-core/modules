name: star_align
description: Align reads to a reference genome using STAR
keywords:
  - align
  - fasta
  - genome
  - reference
tools:
  - star:
      description: |
        STAR is a software package for mapping DNA sequences against
        a large reference genome, such as the human genome.
      homepage: https://github.com/alexdobin/STAR
      manual: https://github.com/alexdobin/STAR/blob/master/doc/STARmanual.pdf
      doi: 10.1093/bioinformatics/bts635
      licence: ["MIT"]
      identifier: biotools:star
input:
  - - meta:
        type: map
        description: |
          Groovy Map containing sample information
          e.g. [ id:'test', single_end:false ]
    - reads:
        type: file
        description: |
          List of input FastQ files of size 1 and 2 for single-end and paired-end data,
          respectively.
  - - meta2:
        type: map
        description: |
          Groovy Map containing reference information
          e.g. [ id:'test' ]
    - index:
        type: directory
        description: STAR genome index
        pattern: "star"
  - - meta3:
        type: map
        description: |
          Groovy Map containing reference information
          e.g. [ id:'test' ]
    - gtf:
        type: file
        description: Annotation GTF file
        pattern: "*.{gtf}"
  - - star_ignore_sjdbgtf:
        type: boolean
        description: Ignore annotation GTF file
  - - seq_platform:
        type: string
        description: Sequencing platform
  - - seq_center:
        type: string
        description: Sequencing center
output:
  - log_final:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*Log.final.out":
          type: file
          description: STAR final log file
          pattern: "*Log.final.out"
  - log_out:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*Log.out":
          type: file
          description: STAR lot out file
          pattern: "*Log.out"
  - log_progress:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*Log.progress.out":
          type: file
          description: STAR log progress file
          pattern: "*Log.progress.out"
  - versions:
      - versions.yml:
          type: file
          description: File containing software versions
          pattern: "versions.yml"
  - bam:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*d.out.bam":
          type: file
          description: Output BAM file containing read alignments
          pattern: "*.{bam}"
  - bam_sorted:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.sortedByCoord.out.bam:
          type: file
          description: Sorted BAM file of read alignments (optional)
          pattern: "*sortedByCoord.out.bam"
  - bam_sorted_aligned:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.Aligned.sortedByCoord.out.bam:
          type: file
          description: Sorted BAM file of read alignments (optional)
          pattern: "*.Aligned.sortedByCoord.out.bam"
  - bam_transcript:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*toTranscriptome.out.bam":
          type: file
          description: Output BAM file of transcriptome alignment (optional)
          pattern: "*toTranscriptome.out.bam"
  - bam_unsorted:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*Aligned.unsort.out.bam":
          type: file
          description: Unsorted BAM file of read alignments (optional)
          pattern: "*Aligned.unsort.out.bam"
  - fastq:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*fastq.gz":
          type: file
          description: Unmapped FastQ files (optional)
          pattern: "*fastq.gz"
  - tab:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*.tab":
          type: file
          description: STAR output tab file(s) (optional)
          pattern: "*.tab"
  - spl_junc_tab:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*.SJ.out.tab":
          type: file
          description: STAR output splice junction tab file
          pattern: "*.SJ.out.tab"
  - read_per_gene_tab:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*.ReadsPerGene.out.tab":
          type: file
          description: STAR output read per gene tab file
          pattern: "*.ReadsPerGene.out.tab"
  - junction:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*.out.junction":
          type: file
          description: STAR chimeric junction output file (optional)
          pattern: "*.out.junction"
  - sam:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
          pattern: "*.out.sam"
      - "*.out.sam":
          type: file
          description: STAR output SAM file(s) (optional)
          pattern: "*.out.sam"
  - wig:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*.wig":
          type: file
          description: STAR output wiggle format file(s) (optional)
          pattern: "*.wig"
  - bedgraph:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*.bg":
          type: file
          description: STAR output bedGraph format file(s) (optional)
          pattern: "*.bg"
authors:
  - "@kevinmenden"
  - "@drpatelh"
  - "@praveenraj2018"
maintainers:
  - "@kevinmenden"
  - "@drpatelh"
  - "@praveenraj2018"
