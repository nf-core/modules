name: filtlong
description: Filtlong filters long reads based on quality measures or short read data.
keywords:
  - nanopore
  - quality control
  - QC
  - filtering
  - long reads
  - short reads
tools:
  - filtlong:
      description: Filtlong is a tool for filtering long reads. It can take a set of
        long reads and produce a smaller, better subset. It uses both read length (longer
        is better) and read identity (higher is better) when choosing which reads pass
        the filter.
      homepage: https://anaconda.org/bioconda/filtlong
      tool_dev_url: https://github.com/rrwick/Filtlong
      licence: ["GPL v3"]
      identifier: biotools:filtlong
input:
  - - meta:
        type: map
        description: |
          Groovy Map containing sample information
          e.g. [ id:'test', single_end:false ]
    - shortreads:
        type: file
        description: fastq file
        pattern: "*.{fq,fastq,fq.gz,fastq.gz}"
        ontologies:
          - edam: http://edamontology.org/format_1930 # FASTQ
    - longreads:
        type: file
        description: fastq file
        pattern: "*.{fq,fastq,fq.gz,fastq.gz}"
        ontologies:
          - edam: http://edamontology.org/format_1930 # FASTQ
output:
  reads:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*.fastq.gz":
          type: file
          description: Filtered (compressed) fastq file
          pattern: "*.fastq.gz"
          ontologies:
            - edam: http://edamontology.org/format_3989 # GZIP format
  log:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - "*.log":
          type: file
          description: Standard error logging file containing summary statistics
          pattern: "*.log"
          ontologies: []
  versions:
    - versions.yml:
        type: file
        description: File containing software versions
        pattern: "versions.yml"
        ontologies:
          - edam: http://edamontology.org/format_3750 # YAML
authors:
  - "@d4straub"
  - "@sofstam"
maintainers:
  - "@d4straub"
  - "@sofstam"
