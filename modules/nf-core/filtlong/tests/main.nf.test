nextflow_process {

    name "Test Process FILTLONG"
    script "../main.nf"
    process "FILTLONG"
    config "./nextflow.config"
    tag "filtlong"
    tag "modules"
    tag "modules_nfcore"

    test("sarscov2 nanopore [fastq]") {

        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] = [
                            [ id:'test', single_end:false ], // meta map
                            [],
                            [ file(params.test_data['sarscov2']['nanopore']['test_fastq_gz'], checkIfExists: true) ]
                           ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert path(process.out.log.get(0).get(1)).readLines().contains("Scoring long reads")},
                { assert snapshot(process.out.reads).match("nanopore") },
                { assert snapshot(process.out.versions).match("versions") }
            )
        }

    }


    test("sarscov2 nanopore [fastq] + Illumina single-end [fastq]") {

        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] = [
                            [ id:'test', single_end:true ], // meta map
                            [ file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'], checkIfExists: true) ],
                            [ file(params.test_data['sarscov2']['nanopore']['test_fastq_gz'], checkIfExists: true) ]
                           ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert path(process.out.log.get(0).get(1)).readLines().contains("Scoring long reads")},
                { assert snapshot(process.out.reads).match("nanopore_illumina_se") },
                { assert snapshot(process.out.versions).match("versions") }
            )
        }

    }


    test("sarscov2 nanopore [fastq] + Illumina paired-end [fastq]") {

        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] = [
                            [ id:'test', single_end:false ], // meta map
                            [ file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'], checkIfExists: true),
                              file(params.test_data['sarscov2']['illumina']['test_2_fastq_gz'], checkIfExists: true) ],
                            [ file(params.test_data['sarscov2']['nanopore']['test_fastq_gz'], checkIfExists: true) ]
                           ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert path(process.out.log.get(0).get(1)).readLines().contains("Scoring long reads")},
                { assert snapshot(process.out.reads).match("nanopore_illumina_pe") },
                { assert snapshot(process.out.versions).match("versions") }
            )
        }

    }


}
