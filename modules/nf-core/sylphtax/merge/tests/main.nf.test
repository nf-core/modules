nextflow_process {

    name "Test Process SYLPHTAX_MERGE"
    script "../main.nf"
    process "SYLPHTAX_MERGE"

    tag "modules"
    tag "modules_nfcore"
    tag "sylph"
    tag "sylph/profile"
    tag "sylphtax"
    tag "sylphtax/taxprof"
    tag "sylphtax/merge"


    test("sarscov2 illumina single-end [fastq_gz]") {
        setup {
            run("SYLPH_PROFILE") {
                script "../../../sylph/profile/main.nf"
                process {
                """
                input[0] = [
                            [ id:'test', single_end:false ], // meta map
                            [ file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true),
                            file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_2.fastq.gz', checkIfExists: true) ]
                ]
                input[1] = file(params.modules_testdata_base_path +'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)
                """
                }
            }
            run("SYLPHTAX_TAXPROF")
            {
                script "../../../sylphtax/taxprof/main.nf"
                process {
                """
                input[0] = SYLPH_PROFILE.out.profile_out
                input[1] = file('https://github.com/nf-core/test-datasets/raw/taxprofiler/data/database/sylph/test_taxonomy.tsv.gz', checkIfExists: true)
                """
                }
            }

        }
        when {

            process {
                """
                input[0] = SYLPHTAX_TAXPROF.out.taxprof_output
                input[1] = "relative_abundance"
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out.versions,
                    process.out.tsv
                ).match() }
            )
        }

    }

    test("sarscov2 illumina single-end [fastq_gz]-stub") {

        options '-stub'

        setup {
            run("SYLPH_PROFILE") {
                script "../../../sylph/profile/main.nf"
                process {
                """
                input[0] = [
                            [ id:'test', single_end:false ], // meta map
                            [ file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true),
                            file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_2.fastq.gz', checkIfExists: true) ]
                ]
                input[1] = file(params.modules_testdata_base_path +'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)
                """
                }
            }
            run("SYLPHTAX_TAXPROF")
            {
                script "../../../sylphtax/taxprof/main.nf"
                process {
                """
                input[0] = SYLPH_PROFILE.out.profile_out
                input[1] = file('https://github.com/nf-core/test-datasets/raw/taxprofiler/data/database/sylph/test_taxonomy.tsv.gz', checkIfExists: true)
                """
                }
            }

        }
        when {

            process {
                """
                input[0] = SYLPHTAX_TAXPROF.out.taxprof_output
                input[1] = "relative_abundance"
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out.versions,
                    process.out.tsv
                ).match() }
            )
        }

    }
}
