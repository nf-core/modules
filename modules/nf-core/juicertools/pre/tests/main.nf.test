nextflow_process {

    name "Test Process JUICERTOOLS_PRE"
    script "../main.nf"
    process "JUICERTOOLS_PRE"
    config "./nextflow.config"

    tag "modules"
    tag "modules_nfcore"
    tag "juicertools"
    tag "juicertools/pre"
    tag "gawk"

    setup {
        run("GAWK") {
            script "../../../gawk/main.nf"
            process {
                """
                input[0] = [
                    [id: "test"],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/cooler/cload/hg19/hg19.sample1.pairs', checkIfExists: true)
                ]
                input[1] = []
                input[2] = false
                """
            }
        }
    }

    test("homo sapiens - pairs - chrom.sizes") {

        when {

            params {
                gawk_args2 = "'BEGIN { OFS = \"\\t\" } { gsub(\"+\", \"0\"); gsub(\"-\", \"1\"); print \$3, \$1, \$2, 0, \$6, \$4, \$5, 1}'"
                gawk_suffix = "pairs"
                module_args = "-n"
            }

            process {
                """
                input[0] = GAWK.out.output
                input[1] = [
                    [ id:'test', single_end:false ], // meta map
                    [],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/cooler/cload/hg19/hg19.chrom.sizes', checkIfExists: true),
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("homo sapiens - pairs - hg19") {

        when {

            params {
                gawk_args2 = "'BEGIN { OFS = \"\\t\" } { gsub(\"+\", \"0\"); gsub(\"-\", \"1\"); print \$3, \$1, \$2, 0, \$6, \$4, \$5, 1}'"
                gawk_suffix = "pairs"
                module_args = "-n"
            }

            process {
                """
                input[0] = GAWK.out.output
                input[1] = [
                    [ id:'test', single_end:false ], // meta map
                    "hg19",
                    []
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("homo sapiens - pairs - chrom.sizes - stub") {

        options "-stub"

        when {

            params {
                gawk_args2  = "'BEGIN { OFS = \"\\t\" } { gsub(\"+\", \"0\"); gsub(\"-\", \"1\"); print \$3, \$1, \$2, 0, \$6, \$4, \$5, 1}'"
                gawk_suffix = "pairs"
                module_args = "-n"
            }

            process {
                """
                input[0] = GAWK.out.output
                input[1] = [
                    [ id:'test', single_end:false ], // meta map
                    [],
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/cooler/cload/hg19/hg19.chrom.sizes', checkIfExists: true),
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out,
                    path(process.out.versions[0]).yaml
                    ).match()
                }
            )
        }

    }

}
