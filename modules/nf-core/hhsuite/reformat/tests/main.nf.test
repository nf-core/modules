nextflow_process {

    name "Test Process HHSUITE_REFORMAT"
    script "../main.nf"
    process "HHSUITE_REFORMAT"

    tag "modules"
    tag "modules_nfcore"
    tag "hhsuite"
    tag "hhsuite/reformat"

    test("multiplesequencealign - setoxin - fas - sto") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + '../../multiplesequencealign/testdata/setoxin.ref', checkIfExists: true)
                ]
                input[1] = "fas"
                input[2] = "sto"
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("multiplesequencealign - setoxin - sto - a3m") {

        setup {
            run("HHSUITE_REFORMAT", alias: "HHSUITE_REFORMAT_SETUP") {
                script "modules/nf-core/hhsuite/reformat/main.nf"
                process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + '../../multiplesequencealign/testdata/setoxin.ref', checkIfExists: true)
                ]
                input[1] = "fas"
                input[2] = "sto"
                """
                }
            }
        }

        when {
            process {
                """
                input[0] = HHSUITE_REFORMAT_SETUP.out.msa
                input[1] = "sto"
                input[2] = "a3m"
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("multiplesequencealign - setoxin - fas - sto - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + '../../multiplesequencealign/testdata/setoxin.ref', checkIfExists: true)
                ]
                input[1] = "fas"
                input[2] = "sto"
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
