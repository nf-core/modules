
nextflow_process {

    name "Test Process SNPSIFT_DBNSFP"
    script "../main.nf"
    process "SNPSIFT_DBNSFP"
    config "./nextflow.config"

    tag "modules"
    tag "modules_nfcore"
    tag "snpsift"
    tag "snpsift/dbnsfp"

    test("test-snpsift-dbnsfp") {

        when {
            process {
                """
                input[0] = [
				    [ id:'test', single_end:false ], // meta map
				    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/vcf/test.genome_21.somatic_sv.vcf.gz', checkIfExists: true),
				    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/vcf/test.genome_21.somatic_sv.vcf.gz.tbi', checkIfExists: true)
				]
				input[1] = [
				    [ id:'databases'],
				    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/germlineresources/dbNSFP4.1a.21.txt.gz', checkIfExists: true),
				    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/germlineresources/dbNSFP4.1a.21.txt.gz.tbi', checkIfExists: true)
				]

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
					path(process.out.vcf[0][1]).vcf.summary,
					process.out.versions
					).match()
				}
            )
        }
    }

    test("test-snpsift-dbnsfp-uncompressed") {

        when {
            process {
                """
                input[0] = [
				    [ id:'tester', single_end:false ], // meta map
				    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/vcf/test.genome_21.somatic_sv.vcf.gz', checkIfExists: true),
				    []
				]
				input[1] = [
				    [id:'databases'],
				    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/germlineresources/dbNSFP4.1a.21.txt.gz', checkIfExists: true),
				    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/germlineresources/dbNSFP4.1a.21.txt.gz.tbi', checkIfExists: true)
				]

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
					path(process.out.vcf[0][1]).vcf.summary,
					process.out.versions
					).match()
				}
            )
        }
    }

    test("test-snpsift-dbnsfp-uncompressed-stub") {
        options '-stub'
        when {
            process {
                """
                input[0] = [
				    [ id:'tester', single_end:false ], // meta map
				    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/vcf/test.genome_21.somatic_sv.vcf.gz', checkIfExists: true),
				    []
				]
				input[1] = [
				    [id:'databases'],
				    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/germlineresources/dbNSFP4.1a.21.txt.gz', checkIfExists: true),
				    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/chr21/germlineresources/dbNSFP4.1a.21.txt.gz.tbi', checkIfExists: true)
				]

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

}
