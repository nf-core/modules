nextflow_process {

    name "Test Process MINIMAP2_ALIGN"
    script "../main.nf"
    process "MINIMAP2_ALIGN"

    tag "modules"
    tag "modules_nfcore"
    tag "minimap2"
    tag "minimap2/align"

    test("sarscov2 - fastq, fasta, true, [], false, false") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:true ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true)
                ]
                input[1] = [
                    [ id:'test_ref' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)
                ]
                input[2] = true
                input[3] = []
                input[4] = false
                input[5] = false
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    file(process.out.bam[0][1]).name,
                    process.out.versions
                ).match() }
            )
        }

    }

    test("sarscov2 - fastq, fasta, true, 'bai', false, false") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:true ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true)
                ]
                input[1] = [
                    [ id:'test_ref' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)
                ]
                input[2] = true
                input[3] = 'bai'
                input[4] = false
                input[5] = false
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    file(process.out.bam[0][1]).name,
                    file(process.out.index[0][1]).name,
                    process.out.versions
                ).match() }
            )
        }

    }

    test("sarscov2 - [fastq1, fastq2], fasta, true, false, false") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:false ], // meta map
                    [
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_2.fastq.gz', checkIfExists: true)
                    ]
                ]
                input[1] = [
                    [ id:'test_ref' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)
                ]
                input[2] = true
                input[3] = []
                input[4] = false
                input[5] = false
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    file(process.out.bam[0][1]).name,
                    process.out.versions
                ).match() }
            )
        }

    }

    test("sarscov2 - fastq, [], true, false, false") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:true ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true),
                ]
                input[1] = [
                    [ id:'test_ref' ], // meta map
                    []
                ]
                input[2] = true
                input[3] = []
                input[4] = false
                input[5] = false
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    file(process.out.bam[0][1]).name,
                    process.out.versions
                ).match() }
            )
        }

    }

    test("sarscov2 - fastq, fasta, true, [], false, false - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:true ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true)
                ]
                input[1] = [
                    [ id:'test_ref' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)
                ]
                input[2] = true
                input[3] = []
                input[4] = false
                input[5] = false
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("sarscov2 - fastq, fasta, true, 'bai', false, false - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:true ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true)
                ]
                input[1] = [
                    [ id:'test_ref' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)
                ]
                input[2] = true
                input[3] = 'bai'
                input[4] = false
                input[5] = false
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("sarscov2 - fastq, fasta, false, [], false, false - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'test', single_end:true ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true)
                ]
                input[1] = [
                    [ id:'test_ref' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)
                ]
                input[2] = false
                input[3] = []
                input[4] = false
                input[5] = false
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}