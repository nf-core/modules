---
# yaml-language-server: $schema=https://raw.githubusercontent.com/nf-core/modules/master/modules/meta-schema.json
name: "agat_spmergeannotations"
description: |
  This script merge different gff annotation files in one. It uses the AGAT parser that takes care of duplicated names and fixes other oddities met in those files.
keywords:
  - genomics
  - gff
  - merge
  - combine
tools:
  - "agat":
      description: "Another Gff Analysis Toolkit (AGAT). Suite of tools to handle gene annotations in any GTF/GFF format."
      homepage: "https://agat.readthedocs.io/en/latest/"
      documentation: "https://agat.readthedocs.io/en/latest/tools/agat_sp_merge_annotations.html"
      tool_dev_url: "https://github.com/NBISweden/AGAT"
      doi: "10.5281/zenodo.3552717"
      licence: ["GPL v3"]
input:
  - meta:
      type: map
      description: |
        Groovy Map containing sample information
        e.g. `[ id:'sample1' ]`
  - gffs:
      type: list
      description: A list of GFFs to merge
      pattern: "[ *.{gff,gff3} ]"
  - config:
      type: file
      description: |
        Input agat config file. By default AGAT takes as input agat_config.yaml file from the working directory if any,
        otherwise it takes the orignal agat_config.yaml shipped with AGAT. To get the agat_config.yaml
        locally type: "agat config --expose". The --config option gives you the possibility to use your
        own AGAT config file (located elsewhere or named differently).
      pattern: "*.yaml"
output:
  - meta:
      type: map
      description: |
        Groovy Map containing sample information
        e.g. `[ id:'sample1' ]`
  - versions:
      type: file
      description: File containing software versions
      pattern: "versions.yml"
  - gff:
      type: file
      description: Output GFF file.
      pattern: "*.gff"
authors:
  - "@GallVp"
maintainers:
  - "@GallVp"
