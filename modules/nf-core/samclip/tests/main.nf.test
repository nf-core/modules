nextflow_process {

    name "Test Process SAMCLIP"
    script "../main.nf"
    process "SAMCLIP"
    config "./nextflow.config"

    tag "modules"
    tag "modules_nfcore"
    tag "samclip"
    tag "samtools/view"

    test("test-data - NA12878.chr22.bam") {
        config "./nextflow.config"

        when {
            process {
                """
                input[0] = [
                    [ id:'NA12878_chr22' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/bam/NA12878.chr22.bam', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/bam/NA12878.chr22.bam.bai', checkIfExists: true),

                ]

                input[1] = [
                    [ id:'chr22_ref' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta.fai', checkIfExists: true),
                ]

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("test-data - NA12878.chr22.bam - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'NA12878_chr22' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/bam/NA12878.chr22.bam', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/bam/NA12878.chr22.bam.bai', checkIfExists: true),

                ]

                input[1] = [
                    [ id:'chr22_ref' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta', checkIfExists: true),
                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta.fai', checkIfExists: true),
                ]

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                        process.out,
                        process.out.versions.collect{ path(it).yaml }
                    ).match() }
            )
        }

    }

}
