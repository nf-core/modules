
nextflow_process {

    name "Test Process ATLAS_CALL"
    script "../main.nf"
    process "ATLAS_CALL"

    tag "modules"
    tag "modules_nfcore"
    tag "atlas"
    tag "atlas/call"

    test("test-atlas-call") {

        when {
            process {
                """
                input[0] = [
				    [ id:'test', single_end:false ], // meta map
				    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bam/test.paired_end.sorted.bam', checkIfExists: true),
				    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bam/test.paired_end.sorted.bam.bai', checkIfExists: true),
				    [],
				    []
				]
				input[1] = file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)
				input[2] = file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta.fai', checkIfExists: true)
				input[3] = []
				input[4] = 'randomBase'

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
					path(process.out.vcf[0][1]).vcf.summary,
					process.out.versions
					).match()
				}
            )
        }
    }

}
