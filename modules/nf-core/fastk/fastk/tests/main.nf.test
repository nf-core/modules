nextflow_process {

    name "Test Process FASTK_FASTK"
    script "../main.nf"
    config './nextflow.config'
    process "FASTK_FASTK"

    tag "modules"
    tag "modules_nfcore"
    tag "fastk"
    tag "fastk/fastk"

    test("test_fastk_fastk_single_end") {
        when {
            process {
                """
                input[0] = [
                    [ id:'test' , single_end: true ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("test_fastk_fastk_paired_end") {

        when {
            process {
                """
                input[0] = [
                    [ id:'test' , single_end: false ], // meta map
                    [
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_2.fastq.gz', checkIfExists: true)
                    ]
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("test_fastk_fastk_single_end_stub") {

        options '-stub'

        when {
            process {
                """
                input[0] = [
                    [ id:'test' , single_end: true ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("test_fastk_fastk_paired_end_stub") {

        options '-stub'

        when {
            process {
                """
                input[0] = [
                    [ id:'test' , single_end: false ], // meta map
                    [
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_2.fastq.gz', checkIfExists: true)
                    ]
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
