name: "segemehl_align"
description: A multi-split mapping algorithm for circular RNA, splicing, trans-splicing
  and fusion detection
keywords:
  - alignment
  - circrna
  - splicing
  - fusions
tools:
  - "segemehl":
      description: "A multi-split mapping algorithm for circular RNA, splicing, trans-splicing
        and fusion detection"
      homepage: "https://www.bioinf.uni-leipzig.de/Software/segemehl/"
      documentation: "https://www.bioinf.uni-leipzig.de/Software/segemehl/"
      doi: "10.1186/gb-2014-15-2-r34"
      licence: ["GPL v3"]
      identifier: biotools:segemehl
input:
  - - meta:
        type: map
        description: |
          Groovy Map containing sample information
          e.g. [ id:'test', single_end:false ]
    - reads:
        type: file
        description: FASTA or FASTQ files
        pattern: "*.{fa,fasta,fq,fastq,fq.gz,fastq.gz}"
  - - fasta:
        type: file
        description: Reference genome FASTA file used to construct Segemehl
        pattern: "*.{fa,fasta}"
  - - index:
        type: file
        description: Segemehl Index file from SEGEMEHL_INDEX
        pattern: "*.idx"
output:
  - alignment:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}/${prefix}.${suffix}:
          type: file
          description: |
            File containing genomic alignments in SAM format
              (please add "-b" flag to task.ext.args for BAM)
          pattern: "*.{sam,bam}"
  - trans_alignments:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}/${prefix}.trns.txt:
          type: file
          description: |
            Custom text file containing all single split alignments predicted to be in trans
              (optional, only if -S flag is set in task.ext.args)
          pattern: "*.trns.txt"
  - multi_bed:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}/${prefix}.mult.bed:
          type: file
          description: |
            Bed file containing all splice events predicted
            in the split read alignments.
              (optional, only if -S flag is set in task.ext.args)
          pattern: "*.mult.bed"
  - single_bed:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}/${prefix}.sngl.bed:
          type: file
          description: |
            Bed file containing all single splice events predicted
            in the split read alignments.
              (optional, only if -S flag is set in task.ext.args)
          pattern: "*.sngl.bed"
  - versions:
      - versions.yml:
          type: file
          description: File containing software versions
          pattern: "versions.yml"
authors:
  - "@BarryDigby"
  - "@nictru"
maintainers:
  - "@nictru"
