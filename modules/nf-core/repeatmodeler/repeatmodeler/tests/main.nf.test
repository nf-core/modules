nextflow_process {

    name "Test Process REPEATMODELER_REPEATMODELER"
    script "../main.nf"
    process "REPEATMODELER_REPEATMODELER"

    tag "modules"
    tag "modules_nfcore"
    tag "repeatmodeler"
    tag "repeatmodeler/repeatmodeler"
    tag "repeatmodeler/builddatabase"

    test("homo_sapiens-genome_fasta") {

        setup {
            run("REPEATMODELER_BUILDDATABASE") {
                script "../../../../nf-core/repeatmodeler/builddatabase"

                process {
                    """
                    input[0] = [
                        [ id:'test' ], // meta map
                        file(params.test_data['homo_sapiens']['genome']['genome_fasta'], checkIfExists: true)
                    ]
                    """
                }
            }
        }

        when {
            process {
                """
                input[0] = REPEATMODELER_BUILDDATABASE.out.db
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out.fasta).match("fasta") },
                { assert snapshot(process.out.stk).match("stk") },
                { assert file(process.out.log[0][1]).text.contains('1 families discovered.') },
                { assert snapshot(process.out.versions).match("versions") }
            )
        }

    }

    test("homo_sapiens-genome_fasta-stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.test_data['homo_sapiens']['genome']['genome_fasta'], checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}