
nextflow_process {

    name "Test Process HICAP"
    script "../main.nf"
    process "HICAP"

    tag "modules"
    tag "modules_nfcore"
    tag "hicap"

    test("test-hicap") {

        when {
            process {
                """
                input[0] = [
				    [ id:'test', single_end:false ], // meta map
				    file(params.modules_testdata_base_path + 'genomics/prokaryotes/haemophilus_influenzae/genome/genome.fna.gz', checkIfExists: true)
				]
				input[1] = []
				input[2] = []

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
					file(process.out.gbk[0][1]).readLines()[3..7],
					file(process.out.svg[0][1]).readLines()[3..7],
					process.out.tsv,
					process.out.versions
					).match()
				}
            )
        }
    }

    test("test-hicap-stub") {
        options '-stub'

        when {
            process {
                """
                input[0] = [
				    [ id:'test', single_end:false ], // meta map
				    file(params.modules_testdata_base_path + 'genomics/prokaryotes/haemophilus_influenzae/genome/genome.fna.gz', checkIfExists: true)
				]
				input[1] = []
				input[2] = []

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

}
