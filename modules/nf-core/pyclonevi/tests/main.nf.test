nextflow_process {

    name "Test Process PYCLONEVI"
    script "../main.nf"
    process "PYCLONEVI"

    tag "modules"
    tag "modules_nfcore"
    tag "pyclonevi"

    test("test_pyclone_single_sample") {


        config "./nextflow.config"

        when {
            process {
                """
                input[0] = [
                    [ id:'test'], // meta map
                    [ file(params.modules_testdata_base_path + 'delete_me/pyclonevi/HCC1395_WXS_HCC1395_joint_table.tsv', checkIfExists: true) ],
                    [ 'HCC1395_HCC1395T'] // tumour_samples
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out.ctree_input,
                    process.out.pyclone_input,
                    process.out.pyclone_all_fits,
                    process.out.pyclone_best_fit,
                    process.out.versions).match() }
            )
        }

    }

    test("test_pyclonevi - singlesample - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'test'], // meta map
                    [ file(params.modules_testdata_base_path + 'delete_me/pyclonevi/HCC1395_WXS_HCC1395_joint_table.tsv', checkIfExists: true) ],
                    [ 'HCC1395_HCC1395T'] // tumour_samples
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
