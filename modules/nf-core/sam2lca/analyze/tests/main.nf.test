
nextflow_process {

    name "Test Process SAM2LCA_ANALYZE"
    script "../main.nf"
    process "SAM2LCA_ANALYZE"
    config "./nextflow.config"

    tag "modules"
    tag "modules_nfcore"
    tag "sam2lca"
    tag "sam2lca/analyze"

    test("test-sam2lca-analyze") {

        when {
            process {
                """
                input[0] = [
				    [ id:'test', single_end:false ], // meta map
				    file("https://raw.githubusercontent.com/maxibor/sam2lca/1.1.2/tests/data/microtest.sorted.bam", checkIfExists: true),
				    file("https://raw.githubusercontent.com/maxibor/sam2lca/1.1.2/tests/data/microtest.sorted.bam.bai", checkIfExists: true)
				]
				input[1] = []

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    file(process.out.csv[0][1]).name,
                    process.out.json,
                    process.out.bam,
                    process.out.versions
                    ).match()
                }
            )
        }
    }

    test("test-sam2lca-analyze-stub") {
        options '-stub'

        when {
            process {
                """
                input[0] = [
				    [ id:'test', single_end:false ], // meta map
				    file("https://raw.githubusercontent.com/maxibor/sam2lca/1.1.2/tests/data/microtest.sorted.bam", checkIfExists: true),
				    file("https://raw.githubusercontent.com/maxibor/sam2lca/1.1.2/tests/data/microtest.sorted.bam.bai", checkIfExists: true)
				]
				input[1] = []

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

}
