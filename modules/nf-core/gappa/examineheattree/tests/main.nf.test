
nextflow_process {

    name "Test Process GAPPA_EXAMINEHEATTREE"
    script "../main.nf"
    process "GAPPA_EXAMINEHEATTREE"
    config "./nextflow.config"

    tag "modules"
    tag "modules_nfcore"
    tag "gappa"
    tag "gappa/examineheattree"

    test("test-gappa-examineheattree") {

        when {
            process {
                """
                input[0] = [
				    [ id:'test' ], // meta map
				    file('https://github.com/nf-core/test-datasets/raw/modules/data/delete_me/gappa/epa_result.jplace.gz', checkIfExists: true)
				]

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
					process.out.newick,
					process.out.nexus,
					process.out.phyloxml,
					file(process.out.svg[0][1]).readLines()[3..7],
					file(process.out.colours[0][1]).readLines()[3..5],
					file(process.out.log[0][1]).name,
					process.out.versions
					).match()
				}
            )
        }
    }

    test("test-gappa-examineheattree-stub") {
        options '-stub'

        when {
            process {
                """
                input[0] = [
				    [ id:'test' ], // meta map
				    file('https://github.com/nf-core/test-datasets/raw/modules/data/delete_me/gappa/epa_result.jplace.gz', checkIfExists: true)
				]

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

}
