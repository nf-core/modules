name: "gappa_examineassign"
description: assigns taxonomy to query sequences in phylogenetic placement output
keywords:
  - phylogeny
  - phylogenetic placement
  - classification
  - taxonomy
tools:
  - "gappa":
      description: "Genesis Applications for Phylogenetic Placement Analysis"
      homepage: "https://github.com/lczech/gappa"
      documentation: "https://github.com/lczech/gappa/wiki"
      tool_dev_url: "https://github.com/lczech/gappa"
      doi: "10.1093/bioinformatics/btaa070"
      licence: ["GPL v3"]
      identifier: biotools:GAPPA
input:
  - - meta:
        type: map
        description: |
          Groovy Map containing sample information
          e.g. [ id:'test' ]
    - jplace:
        type: file
        description: jplace file output from phylogenetic placement, e.g. EPA-NG, gzipped
          or not
        pattern: "*.{jplace,jplace.gz}"
    - taxonomy:
        type: file
        description: taxonomy file
output:
  - examineassign:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test' ]
      - ./.:
          type: directory
          description: Execution directory
  - profile:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test' ]
      - "*profile.tsv":
          type: file
          description: profile tsv file
          pattern: "*profile.tsv"
  - labelled_tree:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test' ]
      - "*labelled_tree.newick":
          type: file
          description: labelled tree in newick format
          pattern: "*labelled_tree.newick"
  - per_query:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test' ]
      - "*per_query.tsv":
          type: file
          description: per query taxonomy assignments in tsv format
          pattern: "*per_query.tsv"
  - krona:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test' ]
      - "*krona.profile":
          type: file
          description: krona profile file
          pattern: "*krona.profile"
  - sativa:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test' ]
      - "*sativa.tsv":
          type: file
          description: sativa output file
          pattern: "*sativa.tsv"
  - versions:
      - versions.yml:
          type: file
          description: File containing software versions
          pattern: "versions.yml"
authors:
  - "@erikrikarddaniel"
maintainers:
  - "@erikrikarddaniel"
