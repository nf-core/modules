name: "merquryfk_merquryfk"
description: FastK based version of Merqury
keywords:
  - Merqury
  - reference-free
  - assembly evaluation
tools:
  - "merquryfk":
      description: "FastK based version of Merqury"
      homepage: "https://github.com/thegenemyers/MERQURY.FK"
      tool_dev_url: "https://github.com/thegenemyers/MERQURY.FK"
      licence: ["https://github.com/thegenemyers/MERQURY.FK/blob/main/LICENSE"]
      identifier: ""
input:
  - - meta:
        type: map
        description: |
          Groovy Map containing sample information
          e.g. [ id:'test', single_end:false ]
    - fastk_hist:
        type: file
        description: A histogram files from the program FastK
        pattern: "*.hist"
        ontologies: []
    - fastk_ktab:
        type: file
        description: Histogram ktab files from the program FastK (option -t)
        pattern: "*.ktab*"
        ontologies: []
    - assembly:
        type: file
        description: Genome (primary) assembly files (fasta format)
        pattern: ".fasta"
        ontologies: []
    - haplotigs:
        type: file
        description: Assembly haplotigs (fasta format)
        pattern: ".fasta"
        ontologies: []
  - - meta2:
        type: map
        description: |
          Groovy Map containing maternal sample information
          e.g. [ id:'test', single_end:false ]
    - mathaptab:
        type: file
        description: trio maternal histogram ktab files from the program FastK (option
          -t)
        pattern: "*.ktab*"
        ontologies: []
  - - meta3:
        type: map
        description: |
          Groovy Map containing paternal sample information
          e.g. [ id:'test', single_end:false ]
    - pathaptab:
        type: file
        description: trio paternal histogram ktab files from the program FastK (option
          -t)
        pattern: "*.ktab*"
        ontologies: []
output:
  stats:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.completeness.stats:
          type: file
          description: Assembly statistics file
          pattern: "*.completeness.stats"
          ontologies: []
  bed:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.*_only.bed:
          type: file
          description: Assembly only kmer positions not supported by reads in bed format
          pattern: "*_only.bed"
          ontologies: []
  assembly_qv:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.*.qv:
          type: file
          description: "error and qv table for each scaffold of the assembly"
          pattern: "*.qv"
          ontologies: []
  spectra_cn_fl:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.*.spectra-cn.fl.{png,pdf}:
          type: file
          description: "Unstacked copy number spectra filled plot in PNG or PDF format"
          pattern: "*.spectra-cn.fl.{png,pdf}"
          ontologies: []
  spectra_cn_ln:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.*.spectra-cn.ln.{png,pdf}:
          type: file
          description: "Unstacked copy number spectra line plot in PNG or PDF format"
          pattern: "*.spectra-cn.ln.{png,pdf}"
          ontologies: []
  spectra_cn_st:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.*.spectra-cn.st.{png,pdf}:
          type: file
          description: "Stacked copy number spectra line plot in PNG or PDF format"
          pattern: "*.spectra-cn.st.{png,pdf}"
          ontologies: []
  qv:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.qv:
          type: file
          description: "error and qv of each assembly as a whole"
          pattern: "*.qv"
          ontologies: []
  spectra_asm_fl:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.spectra-asm.fl.{png,pdf}:
          type: file
          description: "Unstacked assembly spectra filled plot in PNG or PDF format"
          pattern: "*.spectra-asm.fl.{png,pdf}"
          ontologies: []
  spectra_asm_ln:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.spectra-asm.ln.{png,pdf}:
          type: file
          description: "Unstacked assembly spectra line plot in PNG or PDF format"
          pattern: "*.spectra-asm.ln.{png,pdf}"
          ontologies: []
  spectra_asm_st:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.spectra-asm.st.{png,pdf}:
          type: file
          description: "Stacked assembly spectra line plot in PNG or PDF format"
          pattern: "*.spectra-asm.st.{png,pdf}"
          ontologies: []
  phased_block_bed:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.phased_block.bed:
          type: file
          description: Assembly kmer positions separated by block in bed format
          pattern: "*.phased.block.bed"
          ontologies: []
  phased_block_stats:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.phased_block.stats:
          type: file
          description: phased assembly statistics file
          pattern: "*.phased.block.stats"
          ontologies: []
  continuity_N:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.continuity.N.{pdf,png}:
          type: file
          description: "Stacked assembly N continuity plot in PNG or PDF format"
          pattern: "*.continuity.N.{png,pdf}"
          ontologies: []
  block_N:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.block.N.{pdf,png}:
          type: file
          description: "Stacked assembly N continuity by block plot in PNG or PDF format"
          pattern: "*.block.N.{png,pdf}"
          ontologies: []
  block_blob:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.block.blob.{pdf,png}:
          type: file
          description: "Stacked assembly block plot in PNG or PDF format"
          pattern: "*.block.blob.{png,pdf}"
          ontologies: []
  hapmers_blob:
    - - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.hapmers.blob.{pdf,png}:
          type: file
          description: "Stacked assembly hapmers block plot in PNG or PDF format"
          pattern: "*.hapmers.blob.{png,pdf}"
          ontologies: []
  versions:
    - versions.yml:
        type: file
        description: File containing software versions
        pattern: "versions.yml"
        ontologies:
          - edam: http://edamontology.org/format_3750 # YAML
authors:
  - "@mahesh-panchal"
  - "@yumisims"
maintainers:
  - "@mahesh-panchal"
  - "@yumisims"
