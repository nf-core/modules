nextflow_function {

    name "Test Functions"
    script "../main.nf"
    
    //
    // Test function for deriving strandedness from Salmon numbers
    //

    test("Test Function getSalmonInferredStrandedness unstranded") {

        function "getSalmonInferredStrandedness"

        when {
            function {
                """
                import groovy.json.JsonOutput

                // Define the JSON contents for the test
                def json_contents = JsonOutput.toJson([
                    "SF": 0,
                    "SR": 0,
                    "ISF": 100,
                    "ISR": 100,
                    "IU": 0,
                    "U": 0
                ])
                def jsonFile = file("${workDir}/salmonUnstranded.json")
                jsonFile.write(json_contents)

                input[0] = jsonFile
                input[1] = 0.8
                input[2] = 0.1
                """
            }
        }

        then {
            assertAll(
                { assert function.success },
                { assert snapshot(function.result).match() }
            )
        }

    }

    test("Test Function getSalmonInferredStrandedness forward") {

        function "getSalmonInferredStrandedness"

        when {
            function {
                """
                import groovy.json.JsonOutput

                def json_contents = JsonOutput.toJson([
                    "SF": 0,
                    "SR": 0,
                    "ISF": 100,
                    "ISR": 0,
                    "IU": 0,
                    "U": 0
                ])
                def jsonFile = file("${workDir}/salmonForward.json")
                jsonFile.write(json_contents)

                input[0] = jsonFile
                input[1] = 0.8
                input[2] = 0.1
                """
            }
        }

        then {
            assertAll(
                { assert function.success },
                { assert snapshot(function.result).match() }
            )
        }

    }

    test("Test Function getSalmonInferredStrandedness reverse") {

        function "getSalmonInferredStrandedness"

        when {
            function {
                """
                import groovy.json.JsonOutput

                def json_contents = JsonOutput.toJson([
                    "SF": 0,
                    "SR": 0,
                    "ISF": 0,
                    "ISR": 100,
                    "IU": 0,
                    "U": 0
                ])
                def jsonFile = file("${workDir}/salmonReverse.json")
                jsonFile.write(json_contents)

                input[0] = jsonFile
                input[1] = 0.8
                input[2] = 0.1
                """
            }
        }

        then {
            assertAll(
                { assert function.success },
                { assert snapshot(function.result).match() }
            )
        }

    }
}
