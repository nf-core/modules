nextflow_workflow {

    name "Test Subworkflow MMSEQS_CONTIG_TAXONOMY"
    script "../main.nf"
    workflow "MMSEQS_CONTIG_TAXONOMY"
    config './nextflow.config'

    tag "subworkflows"
    tag "subworkflows_nfcore"
    tag "subworkflows/mmseqs_contig_taxonomy"
    tag "gunzip"
    tag "mmseqs/createdb"
    tag "mmseqs/databases"
    tag "mmseqs/taxonomy"
    tag "mmseqs/createtsv"

    test("mmseqs_contig_taxonomy - bacteroides_fragilis - contig") {

        setup {
            run("GUNZIP") {
                script "modules/nf-core/gunzip/main.nf"
                process {
                    """
                    input[0] = Channel.of([
                                [id:'bacteroides_fragilis'],
                                file(params.test_data['bacteroides_fragilis']['genome']['genome_fna_gz'], checkIfExists: true)
                            ]
                    )
                    """
                }
            }
        }

        when {
            workflow {
                """
                input[0] = GUNZIP.out.gunzip
                input[1] = []
                input[2] = 'Kalamari'
                """
            }
        }

        then{
            assertAll(
                { assert workflow.success},
                { assert snapshot (
                        workflow.out.versions,
                        //file(workflow.out.sample_taxa_tsv[0][1]).readLines().contains("Bacteria"),
                        //path(workflow.out.sample_taxa_tsv[0][1]).getText().contains("Bacteria"),
                        file(workflow.out.sample_taxa_tsv[0][1]).readLines()[0].contains("NZ_CP069563.1"),
                        ).match()
                },
            )
        }
    }
}
