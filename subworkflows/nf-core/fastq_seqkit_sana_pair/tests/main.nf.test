nextflow_workflow {

    name "Test Subworkflow FASTQ_SEQKIT_SANA_PAIR"
    script "../main.nf"
    workflow "FASTQ_SEQKIT_SANA_PAIR"
    config './nextflow.config'

    tag "subworkflows"
    tag "subworkflows_nfcore"
    tag "subworkflows/fastq_seqkit_sana_pair"
    tag "seqkit"
    tag "seqkit/sana"
    tag "seqkit/pair"


    test("sarscov2 - fastq - single_end") {

        when {
            workflow {
                """
                input[0] = Channel.of([
                    [ id:'test', single_end:true ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true)
                ])
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success},
                { assert snapshot(
                    workflow.out,
                    workflow.out.versions.collect{ path(it).yaml }.unique()
                ).match() }
            )
        }
    }

    test("sarscov2 - fastq - paired_end") {

        when {
            workflow {
                """
                input[0] = Channel.of([
                    [ id:'test', single_end:false ], // meta map
                    [
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true),
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_2.fastq.gz', checkIfExists: true)
                    ]
                ])
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success},
                { assert snapshot(
                    workflow.out,
                    workflow.out.versions.collect{ path(it).yaml }.unique()
                ).match() }
            )
        }
    }
}
