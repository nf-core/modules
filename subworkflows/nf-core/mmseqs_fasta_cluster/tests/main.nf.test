nextflow_workflow {

    name "Test Subworkflow MMSEQS_FASTA_CLUSTER"
    script "../main.nf"
    workflow "MMSEQS_FASTA_CLUSTER"
    config './nextflow.config'

    tag "subworkflows"
    tag "subworkflows_nfcore"
    tag "subworkflows/mmseqs_fasta_cluster"
    tag "mmseqs/createdb"
    tag "mmseqs/cluster"
    tag "mmseqs/linclust"
    tag "mmseqs/createtsv"

    test("fasta - linclust") {

        when {
            workflow {
                """
                input[0] = Channel.of([
                    [ id: 'test_linclust' ],
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/proteome.fasta.gz', checkIfExists: true)
                ])
                input[1] = 'linclust'
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success},
                { assert snapshot(
                    workflow.out,
                    workflow.out.versions.collect{ path(it).yaml }
                ).match() }
            )
        }
    }

    test("fasta - cluster") {

        when {
            workflow {
                """
                input[0] = Channel.of([
                    [ id: 'test_cluster' ],
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/proteome.fasta.gz', checkIfExists: true)
                ])
                input[1] = 'cluster'
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success},
                { assert snapshot(
                    workflow.out,
                    workflow.out.versions.collect{ path(it).yaml }
                ).match() }
            )
        }
    }

    test("fasta - linclust - stub") {

        options "-stub"

        when {
            workflow {
                """
                input[0] = Channel.of([
                    [ id: 'test_linclust_stub' ],
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/proteome.fasta.gz', checkIfExists: true)
                ])
                input[1] = 'linclust'
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success},
                { assert snapshot(
                    workflow.out,
                    workflow.out.versions.collect{ path(it).yaml }
                ).match() }
            )
        }
    }

    test("fasta - cluster - stub") {

        options "-stub"

        when {
            workflow {
                """
                input[0] = Channel.of([
                    [ id: 'test_cluster_stub' ],
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/proteome.fasta.gz', checkIfExists: true)
                ])
                input[1] = 'cluster'
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success},
                { assert snapshot(
                    workflow.out,
                    workflow.out.versions.collect{ path(it).yaml }
                ).match() }
            )
        }
    }

}
