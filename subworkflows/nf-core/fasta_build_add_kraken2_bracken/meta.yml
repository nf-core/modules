# yaml-language-server: $schema=https://raw.githubusercontent.com/nf-core/modules/master/subworkflows/yaml-schema.json
name: "fasta_build_add_kraken2_bracken"
description: KRAKEN2 and BRACKEN build custom database subworkflow
keywords:
  - metagenomics
  - kraken2
  - database
  - build
  - custom
  - bracken
components:
  - kraken2/add
  - kraken2/build
  - bracken/build
input:
  - ch_fasta:
      type: file
      description: |
        Channel containing a meta with a list of FASTAs to be built
        Structure: [ val(meta), [ fasta1, fasta2, fasta3 ] ]
      pattern: "*.{fasta,fa,fna}"
  - ch_taxonomy_names:
      type: file
      description: |
        Channel containing a NCBI-style taxdump names file
        Structure: [ names.dmp ]
      pattern: "names.dmp"
  - ch_taxonomy_nodes:
      type: file
      description: |
        Channel containing a NCBI-style taxdump nodes file
        Structure: [ nodes.dmp ]
      pattern: "nodes.dmp"
  - ch_accession2taxid:
      type: file
      description: |
        Channel containing a NCBI-style taxdump accession2taxid (acc2tax) file
        Structure: [ accession2taxid_file ]
      pattern: "*.accession2taxid"
  - val_cleanintermediates:
      type: boolean
      description: |
        Boolean flag whether to clean up intermediate files after build or not.
        If val_runbrackenbuild set, will be ignored as BRACKEN requires intermediate files.
        Structure: [ val_cleanintermediate ]
      pattern: "true|false"
  - val_runbrackenbuild:
      type: boolean
      description: |
        Boolean flag whether to additionally insert required BRACKEN database files into KRAKEN2 directory.
        Note any changes for k-mer or read lengths must come via Nextflow config `ext.args`.
        Structure: [ val_runbrackenbuild ]
      pattern: "true|false"
output:
  - db:
      type: directory
      description: |
        Channel containing KRAKEN2 (and BRACKEN) database directory files.
        Use `ext.prefix` in a modules.conf file to change default name
        Structure: [ val(meta), path(db) ]
      pattern: "*/"
  - versions:
      type: file
      description: |
        File containing software versions
        Structure: [ path(versions.yml) ]
      pattern: "versions.yml"
authors:
  - "@jfy133"
maintainers:
  - "@jfy133"
