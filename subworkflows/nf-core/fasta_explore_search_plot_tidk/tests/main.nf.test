nextflow_workflow {

    name "Test Workflow FASTA_EXPLORE_SEARCH_PLOT_TIDK"
    script "../main.nf"
    workflow "FASTA_EXPLORE_SEARCH_PLOT_TIDK"
    config './nextflow.config'

    tag "subworkflows"
    tag "subworkflows_nfcore"
    tag "subworkflows/fasta_explore_search_plot_tidk"
    tag "fasta_explore_search_plot_tidk"
    tag "seqkit/seq"
    tag "seqkit/sort"
    tag "tidk/explore"
    tag "tidk/search"
    tag "tidk/plot"

    test("homo_sapiens-genome_fasta-genome_21_fasta") {

        when {
            workflow {
                """
                input[0] = Channel.of(
                    [
                        [ id:'test' ],
                        file(params.test_data['homo_sapiens']['genome']['genome_fasta'], checkIfExists: true)
                    ],
                    [
                        [ id:'test2' ],
                        file(params.test_data['homo_sapiens']['genome']['genome_21_fasta'], checkIfExists: true)
                    ]
                )
                input[1] = Channel.of(
                    [
                        [ id:'test' ],
                        'TTAGGG'
                    ],
                    [
                        [ id:'test2' ],
                        'TTAGGG'
                    ]
                )
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success},
                { assert snapshot(workflow.out).match()}
            )
        }
    }

    test("homo_sapiens-genome_fasta-genome_21_fasta-partial_apriori-stub") {

        options '-stub'

        when {
            workflow {
                """
                input[0] = Channel.of(
                    [
                        [ id:'test' ],
                        file(params.test_data['homo_sapiens']['genome']['genome_fasta'], checkIfExists: true)
                    ],
                    [
                        [ id:'test2' ],
                        file(params.test_data['homo_sapiens']['genome']['genome_21_fasta'], checkIfExists: true)
                    ]
                )
                input[1] = Channel.of(
                    [
                        [ id:'test' ],
                        'TTAGGG'
                    ]
                )
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success},
                { assert snapshot(workflow.out).match()}
            )
        }
    }

    test("homo_sapiens-genome_fasta-genome_21_fasta-no_apriori-stub") {

        options '-stub'

        when {
            workflow {
                """
                input[0] = Channel.of(
                    [
                        [ id:'test' ],
                        file(params.test_data['homo_sapiens']['genome']['genome_fasta'], checkIfExists: true)
                    ],
                    [
                        [ id:'test2' ],
                        file(params.test_data['homo_sapiens']['genome']['genome_21_fasta'], checkIfExists: true)
                    ]
                )
                input[1] = []
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success},
                { assert snapshot(workflow.out).match()}
            )
        }
    }
}
