nextflow_workflow {

    name "Test Subworkflow FASTQ_ALIGN_BOWTIE2"
    script "../main.nf"
    config "./nextflow.config"
    workflow "FASTQ_ALIGN_BOWTIE2"

    tag "subworkflows"
    tag "subworkflows_nfcore"
    tag "subworkflows/fastq_align_bwa"
    tag "subworkflows/bam_sort_stats_samtools"
    tag "bowtie2"
    tag "bowtie2/index"
    tag "bowtie2/align"

    test("test_align_bowtie2_single_end") {

        when {
            workflow {
                """
                input[0] = [[ id:'test', single_end:true ], [ file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'], checkIfExists: true) ]]
                input[1] = BOWTIE2_INDEX.out.index
                input[2] = false
                input[3] = false
                input[4] = [[id:"genome"], file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true)]
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success},
                { assert snapshot(workflow.out).match()}
            )
        }
    }

    test("test_align_bowtie2_paired_end") {

        when {
            workflow {
                """
                input[0] = [[ id:'test', single_end:false ], [file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'], checkIfExists: true), file(params.test_data['sarscov2']['illumina']['test_2_fastq_gz'], checkIfExists: true)]]
                input[1] = BOWTIE2_INDEX.out.index
                input[2] = false
                input[3] = false
                input[4] = [[id:"genome"], file(params.test_data['sarscov2']['genome']['genome_fasta'], checkIfExists: true)]
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success},
                { assert snapshot(workflow.out).match()}
            )
        }
    }
}
