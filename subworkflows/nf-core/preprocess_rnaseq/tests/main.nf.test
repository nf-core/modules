nextflow_workflow {

    name "Test Subworkflow PREPROCESS_RNASEQ"
    script "../main.nf"
    workflow "PREPROCESS_RNASEQ"
    config "./nextflow.config"

    tag "subworkflows"
    tag "subworkflows_nfcore"
    tag "subworkflows/preprocess_rnaseq"
    
    tag "cat"
    tag "cat/fastq"
    tag "fastqc"
    tag "sortmerna"
    tag "subworkflows/fastq_subsample_fq_salmon"
    tag "subworkflows/fastq_fastqc_umitools_trimgalore"
    tag "subworkflows/fastq_fastqc_umitools_fastp

    test("homo_sapiens paired-end [fastq]") {

        when {
            workflow {
                """
                input[0] = Channel.of([ [ id:'test', single_end:false, strandedness:'auto' ], // meta map
                        [file(params.test_data['homo_sapiens']['illumina']['test_1_fastq_gz'], checkIfExists: true),
                        file(params.test_data['homo_sapiens']['illumina']['test_2_fastq_gz'], checkIfExists: true)
                        ]]) // ch_reads
                input[1] = Channel.of(file(params.test_data['homo_sapiens']['genome']['genome_fasta'], checkIfExists: true)) // ch_fasta
                input[2] = Channel.of(file(params.test_data['homo_sapiens']['genome']['transcriptome_fasta'], checkIfExists: true)) // ch_transcript_fasta
                input[3] = Channel.of(file(params.test_data['homo_sapiens']['genome']['genome_gtf'], checkIfExists: true)) // ch_gtf
                input[4] = true            // make_salmon_index
                input[5] = []              // ch_salmon_index
                input[6] = true            // skip_bbsplit
                input[7] = []              // ch_bbsplit_index
                input[8] = false           // skip_fastqc
                input[9] = false           // skip_trimming
                input[10] = 'trimgalore'   // trimmer
                input[11] = 10             // min_trimmed_reads
                input[12] = true           // save_trimmed_reads
                input[13] = false          // remove_ribo_rna
                input[14] = file('https://raw.githubusercontent.com/nf-core/rnaseq/master/assets/rrna-db-defaults.txt') // ch_ribo_db
                input[15] = false          // with_umi
                input[16] = true           // skip_umi_extract
                input[17] = 0              // umi_discard_read
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success},
                { assert snapshot(
                    workflow.out.reads,
                    workflow.out.trim_read_count,
                    workflow.out.versions
                ).match()}
            )
        }
    }
}
